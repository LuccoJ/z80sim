M:strings
F:G$StringLength$0$0({2}DF,SI:S),Z,0,0,0,0,0
S:LStringLength$String$1$1({2}DG,SC:S),B,1,4
S:LStringLength$i$1$1({2}SI:S),R,0,0,[c,b]
F:G$StringWrite$0$0({2}DF,SV:S),Z,0,0,0,0,0
S:LStringWrite$Destination$1$1({2}DG,SC:S),B,1,4
S:LStringWrite$Source$1$1({2}DG,SC:S),B,1,6
F:G$SameString$0$0({2}DF,SC:S),Z,0,2,0,0,0
S:LSameString$String1$1$1({2}DG,SC:S),B,1,4
S:LSameString$String2$1$1({2}DG,SC:S),B,1,6
S:LSameString$i$1$1({2}SI:S),B,1,-2
F:G$Mod$0$0({2}DF,SI:U),C,0,0,0,0,0
S:LMod$Dividend$1$1({2}SI:U),B,1,4
S:LMod$Divisor$1$1({2}SI:U),B,1,6
S:LMod$Temp$1$1({2}SI:U),R,0,0,[c,b]
F:G$Divide$0$0({2}DF,SI:U),C,0,2,0,0,0
S:LDivide$Dividend$1$1({2}SI:U),B,1,4
S:LDivide$Divisor$1$1({2}SI:S),B,1,6
S:LDivide$Temp$1$1({2}SI:U),R,0,0,[c,b]
S:LDivide$i$1$1({2}SI:U),B,1,-2
F:G$Power$0$0({2}DF,SI:S),C,0,2,0,0,0
S:LPower$Base$1$1({2}SI:S),B,1,4
S:LPower$Exponent$1$1({2}SI:S),B,1,6
S:LPower$Temp$1$1({2}SI:S),R,0,0,[c,b]
S:LPower$i$1$1({2}SI:S),B,1,-2
F:G$WordToHex$0$0({2}DF,SV:S),Z,0,6,0,0,0
S:LWordToHex$Number$1$1({2}SI:U),B,1,4
S:LWordToHex$String$1$1({2}DG,SC:S),B,1,6
S:LWordToHex$i$1$1({2}SI:S),B,1,-2
S:LWordToHex$Temp$1$1({2}SI:U),B,1,-4
S:LWordToHex$Module$1$1({2}SI:U),B,1,-6
F:G$WordToString$0$0({2}DF,SV:S),Z,0,4,0,0,0
S:LWordToString$Number$1$1({2}SI:U),B,1,4
S:LWordToString$String$1$1({2}DG,SC:S),B,1,6
S:LWordToString$i$1$1({2}SI:S),B,1,-2
S:LWordToString$Temp$1$1({2}SI:U),B,1,-4
F:G$IntToString$0$0({2}DF,SV:S),Z,0,2,0,0,0
S:LIntToString$Number$1$1({2}SI:S),B,1,4
S:LIntToString$String$1$1({2}DG,SC:S),B,1,6
S:LIntToString$i$1$1({2}SI:S),R,0,0,[e,d]
S:LIntToString$Temp$1$1({2}SI:S),B,1,-2
S:LIntToString$$1$0({2}DG,SC:S),B,1,-4
S:G$MemoryInit$0$0({2}DF,SV:S),C,0,0
S:G$MemoryAllocate$0$0({2}DF,DG,SV:S),C,0,0
S:G$MemoryFree$0$0({2}DF,SV:S),C,0,0
S:G$MemoryCopy$0$0({2}DF,SV:S),C,0,0
S:G$Mod$0$0({2}DF,SI:U),C,0,0
S:G$Divide$0$0({2}DF,SI:U),C,0,2
S:G$Power$0$0({2}DF,SI:S),C,0,2
