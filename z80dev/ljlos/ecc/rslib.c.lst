                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : FreeWare ANSI-C Compiler
                              3 ; Version 2.3.5 Wed Oct 15 22:42:09 2003
                              4 
                              5 ;--------------------------------------------------------
                              6 	.module rslib
                              7 	.optsdcc -mz80
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _rsdecode
                             13 	.globl _errnum
                             14 	.globl _syndrome
                             15 	.globl _evalpoly
                             16 	.globl _rsencode
                             17 	.globl _g
                             18 	.globl _polysolve
                             19 ;--------------------------------------------------------
                             20 ;  ram data
                             21 ;--------------------------------------------------------
                             22 	.area _DATA
                             23 ;--------------------------------------------------------
                             24 ; overlayable items in  ram 
                             25 ;--------------------------------------------------------
                             26 	.area _OVERLAY
                             27 ;--------------------------------------------------------
                             28 ; external initialized ram data
                             29 ;--------------------------------------------------------
                             30 ;--------------------------------------------------------
                             31 ; global & static initialisations
                             32 ;--------------------------------------------------------
                             33 	.area _GSINIT
                             34 	.area _GSFINAL
                             35 	.area _GSINIT
                             36 ;--------------------------------------------------------
                             37 ; Home
                             38 ;--------------------------------------------------------
                             39 	.area _HOME
                             40 	.area _CODE
                             41 ;--------------------------------------------------------
                             42 ; code
                             43 ;--------------------------------------------------------
                             44 	.area _CODE
                             45 ;ecc/rslib.c:43: void rsencode (unsigned char m[249], unsigned char c[255]) {
                             46 ;	genLabel
                             47 ;	genFunction
                             48 ;	---------------------------------
                             49 ; Function rsencode
                             50 ; ---------------------------------
   0000                      51 _rsencode_start::
   0000                      52 _rsencode:
   0000 DD E5                53 	push	ix
   0002 DD 21 00 00          54 	ld	ix,#0
   0006 DD 39                55 	add	ix,sp
   0008 21 EA FF             56 	ld	hl,#-22
   000B 39                   57 	add	hl,sp
   000C F9                   58 	ld	sp,hl
                             59 ;ecc/rslib.c:47: for(i=0; i<6; i++) r[i]=0;
                             60 ;	genAddrOf
                             61 ;	AOP_STK for _rsencode__1_0
   000D 21 10 00             62 	ld	hl,#0x0010
   0010 39                   63 	add	hl,sp
   0011 DD 75 F0             64 	ld	-16(ix),l
   0014 DD 74 F1             65 	ld	-15(ix),h
                             66 ;	genAssign
   0017 11 00 00             67 	ld	de,#0x0000
                             68 ;	genLabel
   001A                      69 00101$:
                             70 ;	genCmpLt
   001A 7B                   71 	ld	a,e
   001B D6 06                72 	sub	a,#0x06
   001D 7A                   73 	ld	a,d
   001E DE 00                74 	sbc	a,#0x00
   0020 F2r30s00             75 	jp	p,00124$
                             76 ;	genPlus
                             77 ;	AOP_STK for _rsencode__1_0
                             78 ;	Can't optimise plus by inc, falling back to the normal way
   0023 DD 6E F0             79 	ld	l,-16(ix)
   0026 DD 66 F1             80 	ld	h,-15(ix)
   0029 19                   81 	add	hl,de
                             82 ;	genAssign (pointer)
                             83 ;	isBitvar = 0
   002A 36 00                84 	ld	(hl),#0x00
                             85 ;	genPlus
                             86 ;	genPlusIncr
   002C 13                   87 	inc	de
                             88 ;	genGoto
   002D C3r1As00             89 	jp	00101$
                             90 ;ecc/rslib.c:49: for(i=0; i<249; i++) {
                             91 ;	genLabel
   0030                      92 00124$:
                             93 ;	genPlus
                             94 ;	AOP_STK for _rsencode__1_0
                             95 ;	AOP_STK for _rsencode__1_0
                             96 ;	genPlusIncr
                             97 ;	Can't optimise plus by inc, falling back to the normal way
   0030 DD 7E F0             98 	ld	a,-16(ix)
   0033 C6 05                99 	add	a,#0x05
   0035 DD 77 F4            100 	ld	-12(ix),a
   0038 DD 7E F1            101 	ld	a,-15(ix)
   003B CE 00               102 	adc	a,#0x00
   003D DD 77 F5            103 	ld	-11(ix),a
                            104 ;	genAssign
                            105 ;	AOP_STK for _rsencode_i_1_1
   0040 DD 36 F8 00         106 	ld	-8(ix),#0x00
   0044 DD 36 F9 00         107 	ld	-7(ix),#0x00
                            108 ;	genLabel
   0048                     109 00109$:
                            110 ;	genAssign
                            111 ;	AOP_STK for _rsencode_i_1_1
   0048 DD 6E F8            112 	ld	l,-8(ix)
   004B DD 66 F9            113 	ld	h,-7(ix)
                            114 ;	genCmpLt
   004E 7D                  115 	ld	a,l
   004F D6 F9               116 	sub	a,#0xF9
   0051 7C                  117 	ld	a,h
   0052 DE 00               118 	sbc	a,#0x00
   0054 D2r37s01            119 	jp	nc,00126$
                            120 ;ecc/rslib.c:50: c[254-i] = m[i];
                            121 ;	genMinus
                            122 ;	AOP_STK for _rsencode_i_1_1
   0057 3E FE               123 	ld	a,#0xFE
   0059 DD 96 F8            124 	sub	a,-8(ix)
   005C 6F                  125 	ld	l,a
   005D 3E 00               126 	ld	a,#0x00
   005F DD 9E F9            127 	sbc	a,-7(ix)
   0062 67                  128 	ld	h,a
                            129 ;	genPlus
                            130 ;	AOP_STK for 
                            131 ;	Can't optimise plus by inc, falling back to the normal way
   0063 DD 7E 06            132 	ld	a,6(ix)
   0066 85                  133 	add	a,l
   0067 4F                  134 	ld	c,a
   0068 DD 7E 07            135 	ld	a,7(ix)
   006B 8C                  136 	adc	a,h
   006C 47                  137 	ld	b,a
                            138 ;	genPlus
                            139 ;	AOP_STK for 
                            140 ;	AOP_STK for _rsencode_i_1_1
                            141 ;	Can't optimise plus by inc, falling back to the normal way
   006D DD 7E 04            142 	ld	a,4(ix)
   0070 DD 86 F8            143 	add	a,-8(ix)
   0073 6F                  144 	ld	l,a
   0074 DD 7E 05            145 	ld	a,5(ix)
   0077 DD 8E F9            146 	adc	a,-7(ix)
   007A 67                  147 	ld	h,a
                            148 ;	genPointerGet
   007B 5E                  149 	ld	e,(hl)
                            150 ;	genAssign (pointer)
                            151 ;	isBitvar = 0
   007C 7B                  152 	ld	a,e
   007D 02                  153 	ld	(bc),a
                            154 ;ecc/rslib.c:51: rtmp=gfadd(m[i], r[5]);
                            155 ;	genPointerGet
                            156 ;	AOP_STK for _rsencode__1_0
   007E DD 6E F4            157 	ld	l,-12(ix)
   0081 DD 66 F5            158 	ld	h,-11(ix)
   0084 56                  159 	ld	d,(hl)
                            160 ;	genXor
   0085 7A                  161 	ld	a,d
   0086 AB                  162 	xor	a,e
   0087 5F                  163 	ld	e,a
                            164 ;	genAssign
   0088 53                  165 	ld	d,e
                            166 ;ecc/rslib.c:52: for(j=5;j>0; j--) {
                            167 ;	genAssign
                            168 ;	AOP_STK for _rsencode_j_1_1
   0089 DD 36 F6 05         169 	ld	-10(ix),#0x05
   008D DD 36 F7 00         170 	ld	-9(ix),#0x00
                            171 ;	genLabel
   0091                     172 00105$:
                            173 ;	genCmpGt
                            174 ;	AOP_STK for _rsencode_j_1_1
   0091 3E 00               175 	ld	a,#0x00
   0093 DD 96 F6            176 	sub	a,-10(ix)
   0096 3E 00               177 	ld	a,#0x00
   0098 DD 9E F7            178 	sbc	a,-9(ix)
   009B 07                  179 	rlca
                            180 ;	genIfx
   009C E6 01               181 	and     a,#0x01
   009E CAr16s01            182 	jp	z,00108$
                            183 ;ecc/rslib.c:53: r[j]=gfadd(gfmul(rtmp, g[j]), r[j-1]);
                            184 ;	genPlus
                            185 ;	AOP_STK for _rsencode__1_0
                            186 ;	AOP_STK for _rsencode_j_1_1
                            187 ;	AOP_STK for _rsencode__1_0
                            188 ;	Can't optimise plus by inc, falling back to the normal way
   00A1 DD 7E F0            189 	ld	a,-16(ix)
   00A4 DD 86 F6            190 	add	a,-10(ix)
   00A7 DD 77 F2            191 	ld	-14(ix),a
   00AA DD 7E F1            192 	ld	a,-15(ix)
   00AD DD 8E F7            193 	adc	a,-9(ix)
   00B0 DD 77 F3            194 	ld	-13(ix),a
                            195 ;	genPlus
                            196 ;	AOP_STK for _rsencode_j_1_1
                            197 ;	AOP_STK for _rsencode__1_0
                            198 ;	Can't optimise plus by inc, falling back to the normal way
   00B3 3Er5F               199 	ld	a,#<_g
   00B5 DD 86 F6            200 	add	a,-10(ix)
   00B8 DD 77 EC            201 	ld	-20(ix),a
   00BB 3Es01               202 	ld	a,#>_g
   00BD DD 8E F7            203 	adc	a,-9(ix)
   00C0 DD 77 ED            204 	ld	-19(ix),a
                            205 ;	genPointerGet
                            206 ;	AOP_STK for _rsencode__1_0
                            207 ;	AOP_STK for _rsencode__1_0
   00C3 DD 6E EC            208 	ld	l,-20(ix)
   00C6 DD 66 ED            209 	ld	h,-19(ix)
   00C9 7E                  210 	ld	a,(hl)
   00CA DD 77 EE            211 	ld	-18(ix),a
                            212 ;	genIpush
                            213 ; _saveRegsForCall: sendSetSize: 0 deInUse: 1 bcInUse: 0 deSending: 0
   00CD D5                  214 	push	de
                            215 ;	AOP_STK for _rsencode__1_0
   00CE DD 7E EE            216 	ld	a,-18(ix)
   00D1 F5                  217 	push	af
   00D2 33                  218 	inc	sp
                            219 ;	genIpush
   00D3 D5                  220 	push    de
   00D4 33                  221 	inc     sp
                            222 ;	genCall
   00D5 CDr00s00            223 	call	_gfmul
                            224 ;	AOP_STK for _rsencode__1_0
   00D8 DD 75 EF            225 	ld	-17(ix),l
   00DB F1                  226 	pop	af
   00DC D1                  227 	pop	de
                            228 ;	genMinus
                            229 ;	AOP_STK for _rsencode_j_1_1
                            230 ;	AOP_STK for _rsencode__1_0
   00DD DD 7E F6            231 	ld	a,-10(ix)
   00E0 C6 FF               232 	add	a,#0xFF
   00E2 DD 77 EA            233 	ld	-22(ix),a
   00E5 DD 7E F7            234 	ld	a,-9(ix)
   00E8 CE FF               235 	adc	a,#0xFF
   00EA DD 77 EB            236 	ld	-21(ix),a
                            237 ;	genPlus
                            238 ;	AOP_STK for _rsencode__1_0
                            239 ;	AOP_STK for _rsencode__1_0
                            240 ;	Can't optimise plus by inc, falling back to the normal way
   00ED DD 7E F0            241 	ld	a,-16(ix)
   00F0 DD 86 EA            242 	add	a,-22(ix)
   00F3 4F                  243 	ld	c,a
   00F4 DD 7E F1            244 	ld	a,-15(ix)
   00F7 DD 8E EB            245 	adc	a,-21(ix)
   00FA 47                  246 	ld	b,a
                            247 ;	genPointerGet
   00FB 0A                  248 	ld	a,(bc)
                            249 ;	genXor
                            250 ;	AOP_STK for _rsencode__1_0
   00FC 5F                  251 	ld	e,a
   00FD DD AE EF            252 	xor	a,-17(ix)
                            253 ;	genAssign (pointer)
                            254 ;	AOP_STK for _rsencode__1_0
                            255 ;	isBitvar = 0
   0100 DD 6E F2            256 	ld	l,-14(ix)
   0103 DD 66 F3            257 	ld	h,-13(ix)
   0106 77                  258 	ld	(hl),a
                            259 ;ecc/rslib.c:52: for(j=5;j>0; j--) {
                            260 ;	genAssign
                            261 ;	AOP_STK for _rsencode__1_0
   0107 DD 6E EA            262 	ld	l,-22(ix)
   010A DD 66 EB            263 	ld	h,-21(ix)
                            264 ;	genAssign
                            265 ;	AOP_STK for _rsencode_j_1_1
   010D DD 75 F6            266 	ld	-10(ix),l
   0110 DD 74 F7            267 	ld	-9(ix),h
                            268 ;	genGoto
   0113 C3r91s00            269 	jp	00105$
                            270 ;	genLabel
   0116                     271 00108$:
                            272 ;ecc/rslib.c:55: r[0]=gfmul(rtmp, g[0]);
                            273 ;	genPointerGet
   0116 21r5Fs01            274 	ld	hl,#_g
   0119 6E                  275 	ld	l,(hl)
                            276 ;	genIpush
                            277 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   011A 7D                  278 	ld	a,l
   011B F5                  279 	push	af
   011C 33                  280 	inc	sp
                            281 ;	genIpush
   011D D5                  282 	push    de
   011E 33                  283 	inc     sp
                            284 ;	genCall
   011F CDr00s00            285 	call	_gfmul
   0122 4D                  286 	ld	c,l
   0123 F1                  287 	pop	af
                            288 ;	genAssign (pointer)
                            289 ;	AOP_STK for _rsencode__1_0
                            290 ;	isBitvar = 0
   0124 DD 6E F0            291 	ld	l,-16(ix)
   0127 DD 66 F1            292 	ld	h,-15(ix)
   012A 71                  293 	ld	(hl),c
                            294 ;ecc/rslib.c:49: for(i=0; i<249; i++) {
                            295 ;	genPlus
                            296 ;	AOP_STK for _rsencode_i_1_1
                            297 ;	genPlusIncr
   012B DD 34 F8            298 	inc	-8(ix)
   012E C2r34s01            299 	jp	nz,00127$
   0131 DD 34 F9            300 	inc	-7(ix)
   0134                     301 00127$:
                            302 ;	genGoto
   0134 C3r48s00            303 	jp	00109$
                            304 ;ecc/rslib.c:58: for(i=0; i<6; i++) {
                            305 ;	genLabel
   0137                     306 00126$:
                            307 ;	genAssign
   0137 01 00 00            308 	ld	bc,#0x0000
                            309 ;	genLabel
   013A                     310 00113$:
                            311 ;	genCmpLt
   013A 79                  312 	ld	a,c
   013B D6 06               313 	sub	a,#0x06
   013D 78                  314 	ld	a,b
   013E DE 00               315 	sbc	a,#0x00
   0140 F2r5As01            316 	jp	p,00117$
                            317 ;ecc/rslib.c:59: c[i]=r[i];
                            318 ;	genPlus
                            319 ;	AOP_STK for 
                            320 ;	Can't optimise plus by inc, falling back to the normal way
   0143 DD 7E 06            321 	ld	a,6(ix)
   0146 81                  322 	add	a,c
   0147 5F                  323 	ld	e,a
   0148 DD 7E 07            324 	ld	a,7(ix)
   014B 88                  325 	adc	a,b
   014C 57                  326 	ld	d,a
                            327 ;	genPlus
                            328 ;	AOP_STK for _rsencode__1_0
                            329 ;	Can't optimise plus by inc, falling back to the normal way
   014D DD 6E F0            330 	ld	l,-16(ix)
   0150 DD 66 F1            331 	ld	h,-15(ix)
   0153 09                  332 	add	hl,bc
                            333 ;	genPointerGet
   0154 7E                  334 	ld	a,(hl)
                            335 ;	genAssign (pointer)
                            336 ;	isBitvar = 0
   0155 12                  337 	ld	(de),a
                            338 ;ecc/rslib.c:58: for(i=0; i<6; i++) {
                            339 ;	genPlus
                            340 ;	genPlusIncr
   0156 03                  341 	inc	bc
                            342 ;	genGoto
   0157 C3r3As01            343 	jp	00113$
                            344 ;	genLabel
   015A                     345 00117$:
                            346 ;	genEndFunction
   015A DD F9               347 	ld	sp,ix
   015C DD E1               348 	pop	ix
   015E C9                  349 	ret
   015F                     350 _rsencode_end::
   015F                     351 _g:
   015F 75                  352 	.db #0x75
   0160 31                  353 	.db #0x31
   0161 3A                  354 	.db #0x3A
   0162 9E                  355 	.db #0x9E
   0163 04                  356 	.db #0x04
   0164 7E                  357 	.db #0x7E
                            358 ;ecc/rslib.c:69: evalpoly (unsigned char p[255], unsigned char x)
                            359 ;	genLabel
                            360 ;	genFunction
                            361 ;	---------------------------------
                            362 ; Function evalpoly
                            363 ; ---------------------------------
   0165                     364 _evalpoly_start::
   0165                     365 _evalpoly:
   0165 DD E5               366 	push	ix
   0167 DD 21 00 00         367 	ld	ix,#0
   016B DD 39               368 	add	ix,sp
   016D 21 FF FF            369 	ld	hl,#-1
   0170 39                  370 	add	hl,sp
   0171 F9                  371 	ld	sp,hl
                            372 ;ecc/rslib.c:75: y=0;
                            373 ;	genAssign
                            374 ;	AOP_STK for _evalpoly_y_1_1
   0172 DD 36 FF 00         375 	ld	-1(ix),#0x00
                            376 ;ecc/rslib.c:77: for (i = 0; i < 255; i++) {
                            377 ;	genAssign
   0176 11 00 00            378 	ld	de,#0x0000
                            379 ;	genLabel
   0179                     380 00101$:
                            381 ;	genAssign
   0179 6B                  382 	ld	l,e
   017A 62                  383 	ld	h,d
                            384 ;	genCmpLt
   017B 7D                  385 	ld	a,l
   017C D6 FF               386 	sub	a,#0xFF
   017E 7C                  387 	ld	a,h
   017F DE 00               388 	sbc	a,#0x00
   0181 D2rB3s01            389 	jp	nc,00104$
                            390 ;ecc/rslib.c:78: y=gfadd(y, gfmul (p[i], gfexp (x, i)));
                            391 ;	genCast
   0184 6B                  392 	ld	l,e
                            393 ;	genIpush
                            394 ; _saveRegsForCall: sendSetSize: 0 deInUse: 1 bcInUse: 0 deSending: 0
   0185 D5                  395 	push	de
   0186 7D                  396 	ld	a,l
   0187 F5                  397 	push	af
   0188 33                  398 	inc	sp
                            399 ;	genIpush
                            400 ;	AOP_STK for 
   0189 DD 7E 06            401 	ld	a,6(ix)
   018C F5                  402 	push	af
   018D 33                  403 	inc	sp
                            404 ;	genCall
   018E CDr00s00            405 	call	_gfexp
   0191 45                  406 	ld	b,l
   0192 F1                  407 	pop	af
   0193 D1                  408 	pop	de
                            409 ;	genPlus
                            410 ;	AOP_STK for 
                            411 ;	Can't optimise plus by inc, falling back to the normal way
   0194 DD 6E 04            412 	ld	l,4(ix)
   0197 DD 66 05            413 	ld	h,5(ix)
   019A 19                  414 	add	hl,de
                            415 ;	genPointerGet
   019B 4E                  416 	ld	c,(hl)
                            417 ;	genIpush
                            418 ; _saveRegsForCall: sendSetSize: 0 deInUse: 1 bcInUse: 0 deSending: 0
   019C D5                  419 	push	de
   019D C5                  420 	push    bc
   019E 33                  421 	inc     sp
                            422 ;	genIpush
   019F 79                  423 	ld	a,c
   01A0 F5                  424 	push	af
   01A1 33                  425 	inc	sp
                            426 ;	genCall
   01A2 CDr00s00            427 	call	_gfmul
   01A5 4D                  428 	ld	c,l
   01A6 F1                  429 	pop	af
   01A7 D1                  430 	pop	de
                            431 ;	genXor
                            432 ;	AOP_STK for _evalpoly_y_1_1
   01A8 79                  433 	ld	a,c
   01A9 DD AE FF            434 	xor	a,-1(ix)
   01AC DD 77 FF            435 	ld	-1(ix),a
                            436 ;ecc/rslib.c:77: for (i = 0; i < 255; i++) {
                            437 ;	genPlus
                            438 ;	genPlusIncr
   01AF 13                  439 	inc	de
                            440 ;	genGoto
   01B0 C3r79s01            441 	jp	00101$
                            442 ;	genLabel
   01B3                     443 00104$:
                            444 ;ecc/rslib.c:80: return (y);
                            445 ;	genRet
                            446 ;	AOP_STK for _evalpoly_y_1_1
                            447 ; Dump of IC_LEFT: type AOP_STK size 1
                            448 ;	 aop_stk -1
   01B3 DD 6E FF            449 	ld	l,-1(ix)
                            450 ;	genLabel
   01B6                     451 00105$:
                            452 ;	genEndFunction
   01B6 DD F9               453 	ld	sp,ix
   01B8 DD E1               454 	pop	ix
   01BA C9                  455 	ret
   01BB                     456 _evalpoly_end::
                            457 ;ecc/rslib.c:90: void syndrome (unsigned char c[255], unsigned char s[7])
                            458 ;	genLabel
                            459 ;	genFunction
                            460 ;	---------------------------------
                            461 ; Function syndrome
                            462 ; ---------------------------------
   01BB                     463 _syndrome_start::
   01BB                     464 _syndrome:
   01BB DD E5               465 	push	ix
   01BD DD 21 00 00         466 	ld	ix,#0
   01C1 DD 39               467 	add	ix,sp
   01C3 21 FC FF            468 	ld	hl,#-4
   01C6 39                  469 	add	hl,sp
   01C7 F9                  470 	ld	sp,hl
                            471 ;ecc/rslib.c:95: s[0] = 0;
                            472 ;	genAssign
                            473 ;	AOP_STK for 
   01C8 DD 4E 06            474 	ld	c,6(ix)
   01CB DD 46 07            475 	ld	b,7(ix)
                            476 ;	genAssign (pointer)
                            477 ;	isBitvar = 0
   01CE 3E 00               478 	ld	a,#0x00
   01D0 02                  479 	ld	(bc),a
                            480 ;ecc/rslib.c:96: for (i = 1; i < 7; i++)
                            481 ;	genAssign
                            482 ;	AOP_STK for _syndrome_i_1_1
   01D1 DD 36 FE 01         483 	ld	-2(ix),#0x01
   01D5 DD 36 FF 00         484 	ld	-1(ix),#0x00
                            485 ;	genLabel
   01D9                     486 00101$:
                            487 ;	genCmpLt
                            488 ;	AOP_STK for _syndrome_i_1_1
   01D9 DD 7E FE            489 	ld	a,-2(ix)
   01DC D6 07               490 	sub	a,#0x07
   01DE DD 7E FF            491 	ld	a,-1(ix)
   01E1 DE 00               492 	sbc	a,#0x00
   01E3 F2r2As02            493 	jp	p,00105$
                            494 ;ecc/rslib.c:98: s[i] = evalpoly (c, e2v[i]);
                            495 ;	genPlus
                            496 ;	AOP_STK for _syndrome_i_1_1
                            497 ;	AOP_STK for _syndrome__1_0
                            498 ;	Can't optimise plus by inc, falling back to the normal way
   01E6 79                  499 	ld	a,c
   01E7 DD 86 FE            500 	add	a,-2(ix)
   01EA DD 77 FC            501 	ld	-4(ix),a
   01ED 78                  502 	ld	a,b
   01EE DD 8E FF            503 	adc	a,-1(ix)
   01F1 DD 77 FD            504 	ld	-3(ix),a
                            505 ;	genPlus
                            506 ;	AOP_STK for _syndrome_i_1_1
                            507 ;	Can't optimise plus by inc, falling back to the normal way
   01F4 3Er00               508 	ld	a,#<_e2v
   01F6 DD 86 FE            509 	add	a,-2(ix)
   01F9 6F                  510 	ld	l,a
   01FA 3Es00               511 	ld	a,#>_e2v
   01FC DD 8E FF            512 	adc	a,-1(ix)
   01FF 67                  513 	ld	h,a
                            514 ;	genPointerGet
   0200 6E                  515 	ld	l,(hl)
                            516 ;	genIpush
                            517 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0201 C5                  518 	push	bc
   0202 7D                  519 	ld	a,l
   0203 F5                  520 	push	af
   0204 33                  521 	inc	sp
                            522 ;	genIpush
                            523 ;	AOP_STK for 
   0205 DD 6E 04            524 	ld	l,4(ix)
   0208 DD 66 05            525 	ld	h,5(ix)
   020B E5                  526 	push	hl
                            527 ;	genCall
   020C CDr65s01            528 	call	_evalpoly
   020F 5D                  529 	ld	e,l
   0210 F1                  530 	pop	af
   0211 33                  531 	inc	sp
   0212 C1                  532 	pop	bc
                            533 ;	genAssign (pointer)
                            534 ;	AOP_STK for _syndrome__1_0
                            535 ;	isBitvar = 0
   0213 DD 6E FC            536 	ld	l,-4(ix)
   0216 DD 66 FD            537 	ld	h,-3(ix)
   0219 73                  538 	ld	(hl),e
                            539 ;ecc/rslib.c:99: s[0] = s[0] | s[i];
                            540 ;	genPointerGet
   021A 0A                  541 	ld	a,(bc)
                            542 ;	genOr
   021B 57                  543 	ld	d,a
   021C B3                  544 	or	a,e
                            545 ;	genAssign (pointer)
                            546 ;	isBitvar = 0
   021D 02                  547 	ld	(bc),a
                            548 ;ecc/rslib.c:96: for (i = 1; i < 7; i++)
                            549 ;	genPlus
                            550 ;	AOP_STK for _syndrome_i_1_1
                            551 ;	genPlusIncr
   021E DD 34 FE            552 	inc	-2(ix)
   0221 C2r27s02            553 	jp	nz,00109$
   0224 DD 34 FF            554 	inc	-1(ix)
   0227                     555 00109$:
                            556 ;	genGoto
   0227 C3rD9s01            557 	jp	00101$
                            558 ;	genLabel
   022A                     559 00105$:
                            560 ;	genEndFunction
   022A DD F9               561 	ld	sp,ix
   022C DD E1               562 	pop	ix
   022E C9                  563 	ret
   022F                     564 _syndrome_end::
                            565 ;ecc/rslib.c:111: void errnum (unsigned char s[7], unsigned char* det, int* errs)
                            566 ;	genLabel
                            567 ;	genFunction
                            568 ;	---------------------------------
                            569 ; Function errnum
                            570 ; ---------------------------------
   022F                     571 _errnum_start::
   022F                     572 _errnum:
   022F DD E5               573 	push	ix
   0231 DD 21 00 00         574 	ld	ix,#0
   0235 DD 39               575 	add	ix,sp
   0237 21 F7 FF            576 	ld	hl,#-9
   023A 39                  577 	add	hl,sp
   023B F9                  578 	ld	sp,hl
                            579 ;ecc/rslib.c:115: *det = gfmul (s[2], gfmul (s[4], s[6]));
                            580 ;	genAssign
                            581 ;	AOP_STK for 
                            582 ;	AOP_STK for _errnum__1_0
   023C DD 7E 06            583 	ld	a,6(ix)
   023F DD 77 FE            584 	ld	-2(ix),a
   0242 DD 7E 07            585 	ld	a,7(ix)
   0245 DD 77 FF            586 	ld	-1(ix),a
                            587 ;	genPlus
                            588 ;	AOP_STK for 
                            589 ;	genPlusIncr
                            590 ;	Can't optimise plus by inc, falling back to the normal way
   0248 DD 7E 04            591 	ld	a,4(ix)
   024B C6 06               592 	add	a,#0x06
   024D 5F                  593 	ld	e,a
   024E DD 7E 05            594 	ld	a,5(ix)
   0251 CE 00               595 	adc	a,#0x00
   0253 57                  596 	ld	d,a
                            597 ;	genPointerGet
   0254 1A                  598 	ld	a,(de)
   0255 4F                  599 	ld	c,a
                            600 ;	genPlus
                            601 ;	AOP_STK for 
                            602 ;	AOP_STK for _errnum__1_0
                            603 ;	genPlusIncr
                            604 ;	Can't optimise plus by inc, falling back to the normal way
   0256 DD 7E 04            605 	ld	a,4(ix)
   0259 C6 04               606 	add	a,#0x04
   025B DD 77 FC            607 	ld	-4(ix),a
   025E DD 7E 05            608 	ld	a,5(ix)
   0261 CE 00               609 	adc	a,#0x00
   0263 DD 77 FD            610 	ld	-3(ix),a
                            611 ;	genPointerGet
                            612 ;	AOP_STK for _errnum__1_0
   0266 DD 6E FC            613 	ld	l,-4(ix)
   0269 DD 66 FD            614 	ld	h,-3(ix)
   026C 46                  615 	ld	b,(hl)
                            616 ;	genIpush
                            617 ; _saveRegsForCall: sendSetSize: 0 deInUse: 1 bcInUse: 0 deSending: 0
   026D D5                  618 	push	de
   026E 79                  619 	ld	a,c
   026F F5                  620 	push	af
   0270 33                  621 	inc	sp
                            622 ;	genIpush
   0271 C5                  623 	push    bc
   0272 33                  624 	inc     sp
                            625 ;	genCall
   0273 CDr00s00            626 	call	_gfmul
   0276 4D                  627 	ld	c,l
   0277 F1                  628 	pop	af
   0278 D1                  629 	pop	de
                            630 ;	genPlus
                            631 ;	AOP_STK for 
                            632 ;	AOP_STK for _errnum__1_0
                            633 ;	genPlusIncr
                            634 ;	Can't optimise plus by inc, falling back to the normal way
   0279 DD 7E 04            635 	ld	a,4(ix)
   027C C6 02               636 	add	a,#0x02
   027E DD 77 FA            637 	ld	-6(ix),a
   0281 DD 7E 05            638 	ld	a,5(ix)
   0284 CE 00               639 	adc	a,#0x00
   0286 DD 77 FB            640 	ld	-5(ix),a
                            641 ;	genPointerGet
                            642 ;	AOP_STK for _errnum__1_0
   0289 DD 6E FA            643 	ld	l,-6(ix)
   028C DD 66 FB            644 	ld	h,-5(ix)
   028F 46                  645 	ld	b,(hl)
                            646 ;	genIpush
                            647 ; _saveRegsForCall: sendSetSize: 0 deInUse: 1 bcInUse: 0 deSending: 0
   0290 D5                  648 	push	de
   0291 79                  649 	ld	a,c
   0292 F5                  650 	push	af
   0293 33                  651 	inc	sp
                            652 ;	genIpush
   0294 C5                  653 	push    bc
   0295 33                  654 	inc     sp
                            655 ;	genCall
   0296 CDr00s00            656 	call	_gfmul
   0299 4D                  657 	ld	c,l
   029A F1                  658 	pop	af
   029B D1                  659 	pop	de
                            660 ;	genAssign (pointer)
                            661 ;	AOP_STK for _errnum__1_0
                            662 ;	isBitvar = 0
   029C DD 6E FE            663 	ld	l,-2(ix)
   029F DD 66 FF            664 	ld	h,-1(ix)
   02A2 71                  665 	ld	(hl),c
                            666 ;ecc/rslib.c:116: *det = gfadd (*det, gfmul (s[2], gfmul (s[5], s[5])));
                            667 ;	genPlus
                            668 ;	AOP_STK for 
                            669 ;	genPlusIncr
                            670 ;	Can't optimise plus by inc, falling back to the normal way
   02A3 DD 7E 04            671 	ld	a,4(ix)
   02A6 C6 05               672 	add	a,#0x05
   02A8 6F                  673 	ld	l,a
   02A9 DD 7E 05            674 	ld	a,5(ix)
   02AC CE 00               675 	adc	a,#0x00
   02AE 67                  676 	ld	h,a
                            677 ;	genPointerGet
   02AF 6E                  678 	ld	l,(hl)
                            679 ;	genIpush
                            680 ; _saveRegsForCall: sendSetSize: 0 deInUse: 1 bcInUse: 1 deSending: 0
   02B0 C5                  681 	push	bc
   02B1 D5                  682 	push	de
   02B2 7D                  683 	ld	a,l
   02B3 F5                  684 	push	af
   02B4 33                  685 	inc	sp
                            686 ;	genIpush
   02B5 7D                  687 	ld	a,l
   02B6 F5                  688 	push	af
   02B7 33                  689 	inc	sp
                            690 ;	genCall
   02B8 CDr00s00            691 	call	_gfmul
                            692 ;	AOP_STK for _errnum__1_0
   02BB DD 75 F9            693 	ld	-7(ix),l
   02BE F1                  694 	pop	af
   02BF D1                  695 	pop	de
   02C0 C1                  696 	pop	bc
                            697 ;	genPointerGet
                            698 ;	AOP_STK for _errnum__1_0
   02C1 DD 6E FA            699 	ld	l,-6(ix)
   02C4 DD 66 FB            700 	ld	h,-5(ix)
   02C7 46                  701 	ld	b,(hl)
                            702 ;	genIpush
                            703 ; _saveRegsForCall: sendSetSize: 0 deInUse: 1 bcInUse: 1 deSending: 0
   02C8 C5                  704 	push	bc
   02C9 D5                  705 	push	de
                            706 ;	AOP_STK for _errnum__1_0
   02CA DD 7E F9            707 	ld	a,-7(ix)
   02CD F5                  708 	push	af
   02CE 33                  709 	inc	sp
                            710 ;	genIpush
   02CF C5                  711 	push    bc
   02D0 33                  712 	inc     sp
                            713 ;	genCall
   02D1 CDr00s00            714 	call	_gfmul
   02D4 45                  715 	ld	b,l
   02D5 F1                  716 	pop	af
   02D6 D1                  717 	pop	de
   02D7 78                  718 	ld	a,b
   02D8 C1                  719 	pop	bc
                            720 ;	genXor
   02D9 47                  721 	ld	b,a
   02DA A9                  722 	xor	a,c
   02DB 4F                  723 	ld	c,a
                            724 ;	genAssign (pointer)
                            725 ;	AOP_STK for _errnum__1_0
                            726 ;	isBitvar = 0
   02DC DD 6E FE            727 	ld	l,-2(ix)
   02DF DD 66 FF            728 	ld	h,-1(ix)
   02E2 71                  729 	ld	(hl),c
                            730 ;ecc/rslib.c:117: *det = gfadd (*det, gfmul (s[6], gfmul (s[3], s[3])));
                            731 ;	genPlus
                            732 ;	AOP_STK for 
                            733 ;	AOP_STK for _errnum__1_0
                            734 ;	genPlusIncr
                            735 ;	Can't optimise plus by inc, falling back to the normal way
   02E3 DD 7E 04            736 	ld	a,4(ix)
   02E6 C6 03               737 	add	a,#0x03
   02E8 DD 77 F7            738 	ld	-9(ix),a
   02EB DD 7E 05            739 	ld	a,5(ix)
   02EE CE 00               740 	adc	a,#0x00
   02F0 DD 77 F8            741 	ld	-8(ix),a
                            742 ;	genPointerGet
                            743 ;	AOP_STK for _errnum__1_0
   02F3 DD 6E F7            744 	ld	l,-9(ix)
   02F6 DD 66 F8            745 	ld	h,-8(ix)
   02F9 6E                  746 	ld	l,(hl)
                            747 ;	genIpush
                            748 ; _saveRegsForCall: sendSetSize: 0 deInUse: 1 bcInUse: 1 deSending: 0
   02FA C5                  749 	push	bc
   02FB D5                  750 	push	de
   02FC 7D                  751 	ld	a,l
   02FD F5                  752 	push	af
   02FE 33                  753 	inc	sp
                            754 ;	genIpush
   02FF 7D                  755 	ld	a,l
   0300 F5                  756 	push	af
   0301 33                  757 	inc	sp
                            758 ;	genCall
   0302 CDr00s00            759 	call	_gfmul
   0305 45                  760 	ld	b,l
   0306 F1                  761 	pop	af
   0307 D1                  762 	pop	de
   0308 78                  763 	ld	a,b
   0309 C1                  764 	pop	bc
   030A 47                  765 	ld	b,a
                            766 ;	genPointerGet
   030B 1A                  767 	ld	a,(de)
   030C 5F                  768 	ld	e,a
                            769 ;	genIpush
                            770 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   030D C5                  771 	push	bc
   030E C5                  772 	push    bc
   030F 33                  773 	inc     sp
                            774 ;	genIpush
   0310 7B                  775 	ld	a,e
   0311 F5                  776 	push	af
   0312 33                  777 	inc	sp
                            778 ;	genCall
   0313 CDr00s00            779 	call	_gfmul
   0316 45                  780 	ld	b,l
   0317 F1                  781 	pop	af
   0318 78                  782 	ld	a,b
   0319 C1                  783 	pop	bc
                            784 ;	genXor
   031A 47                  785 	ld	b,a
   031B A9                  786 	xor	a,c
   031C 4F                  787 	ld	c,a
                            788 ;	genAssign (pointer)
                            789 ;	AOP_STK for _errnum__1_0
                            790 ;	isBitvar = 0
   031D DD 6E FE            791 	ld	l,-2(ix)
   0320 DD 66 FF            792 	ld	h,-1(ix)
   0323 71                  793 	ld	(hl),c
                            794 ;ecc/rslib.c:118: *det = gfadd (*det, gfmul (s[4], gfmul (s[4], s[4])));
                            795 ;	genPointerGet
                            796 ;	AOP_STK for _errnum__1_0
   0324 DD 6E FC            797 	ld	l,-4(ix)
   0327 DD 66 FD            798 	ld	h,-3(ix)
   032A 6E                  799 	ld	l,(hl)
                            800 ;	genIpush
                            801 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   032B C5                  802 	push	bc
   032C 7D                  803 	ld	a,l
   032D F5                  804 	push	af
   032E 33                  805 	inc	sp
                            806 ;	genIpush
   032F 7D                  807 	ld	a,l
   0330 F5                  808 	push	af
   0331 33                  809 	inc	sp
                            810 ;	genCall
   0332 CDr00s00            811 	call	_gfmul
   0335 45                  812 	ld	b,l
   0336 F1                  813 	pop	af
   0337 78                  814 	ld	a,b
   0338 C1                  815 	pop	bc
   0339 47                  816 	ld	b,a
                            817 ;	genPointerGet
                            818 ;	AOP_STK for _errnum__1_0
   033A DD 6E FC            819 	ld	l,-4(ix)
   033D DD 66 FD            820 	ld	h,-3(ix)
   0340 5E                  821 	ld	e,(hl)
                            822 ;	genIpush
                            823 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0341 C5                  824 	push	bc
   0342 C5                  825 	push    bc
   0343 33                  826 	inc     sp
                            827 ;	genIpush
   0344 7B                  828 	ld	a,e
   0345 F5                  829 	push	af
   0346 33                  830 	inc	sp
                            831 ;	genCall
   0347 CDr00s00            832 	call	_gfmul
   034A 45                  833 	ld	b,l
   034B F1                  834 	pop	af
   034C 78                  835 	ld	a,b
   034D C1                  836 	pop	bc
                            837 ;	genXor
   034E 47                  838 	ld	b,a
   034F A9                  839 	xor	a,c
   0350 4F                  840 	ld	c,a
                            841 ;	genAssign (pointer)
                            842 ;	AOP_STK for _errnum__1_0
                            843 ;	isBitvar = 0
   0351 DD 6E FE            844 	ld	l,-2(ix)
   0354 DD 66 FF            845 	ld	h,-1(ix)
   0357 71                  846 	ld	(hl),c
                            847 ;ecc/rslib.c:119: *errs = 3;
                            848 ;	genAssign
                            849 ;	AOP_STK for 
   0358 DD 5E 08            850 	ld	e,8(ix)
   035B DD 56 09            851 	ld	d,9(ix)
                            852 ;	genAssign (pointer)
                            853 ;	isBitvar = 0
   035E 6B                  854 	ld	l,e
   035F 62                  855 	ld	h,d
   0360 36 03               856 	ld	(hl),#0x03
   0362 23                  857 	inc	hl
   0363 36 00               858 	ld	(hl),#0x00
                            859 ;ecc/rslib.c:121: if (*det != 0)
                            860 ;	genCmpEq
                            861 ; genCmpEq: left 1, right 1, result 0
   0365 79                  862 	ld	a,c
   0366 B7                  863 	or	a,a
                            864 ;ecc/rslib.c:122: return;
                            865 ;	genRet
                            866 ;	genLabel
   0367 CAr6Ds03            867 	jp	z,00102$
   036A                     868 00112$:
   036A C3rDCs03            869 	jp	00107$
   036D                     870 00102$:
                            871 ;ecc/rslib.c:124: *det = gfadd (gfmul (s[2], s[4]), gfexp (s[3], 2));
                            872 ;	genPointerGet
                            873 ;	AOP_STK for _errnum__1_0
   036D DD 6E FC            874 	ld	l,-4(ix)
   0370 DD 66 FD            875 	ld	h,-3(ix)
   0373 4E                  876 	ld	c,(hl)
                            877 ;	genPointerGet
                            878 ;	AOP_STK for _errnum__1_0
   0374 DD 6E FA            879 	ld	l,-6(ix)
   0377 DD 66 FB            880 	ld	h,-5(ix)
   037A 46                  881 	ld	b,(hl)
                            882 ;	genIpush
                            883 ; _saveRegsForCall: sendSetSize: 0 deInUse: 1 bcInUse: 0 deSending: 0
   037B D5                  884 	push	de
   037C 79                  885 	ld	a,c
   037D F5                  886 	push	af
   037E 33                  887 	inc	sp
                            888 ;	genIpush
   037F C5                  889 	push    bc
   0380 33                  890 	inc     sp
                            891 ;	genCall
   0381 CDr00s00            892 	call	_gfmul
   0384 4D                  893 	ld	c,l
   0385 F1                  894 	pop	af
   0386 D1                  895 	pop	de
                            896 ;	genPointerGet
                            897 ;	AOP_STK for _errnum__1_0
   0387 DD 6E F7            898 	ld	l,-9(ix)
   038A DD 66 F8            899 	ld	h,-8(ix)
   038D 46                  900 	ld	b,(hl)
                            901 ;	genIpush
                            902 ; _saveRegsForCall: sendSetSize: 0 deInUse: 1 bcInUse: 1 deSending: 0
   038E C5                  903 	push	bc
   038F D5                  904 	push	de
   0390 3E 02               905 	ld	a,#0x02
   0392 F5                  906 	push	af
   0393 33                  907 	inc	sp
                            908 ;	genIpush
   0394 C5                  909 	push    bc
   0395 33                  910 	inc     sp
                            911 ;	genCall
   0396 CDr00s00            912 	call	_gfexp
   0399 45                  913 	ld	b,l
   039A F1                  914 	pop	af
   039B D1                  915 	pop	de
   039C 78                  916 	ld	a,b
   039D C1                  917 	pop	bc
                            918 ;	genXor
   039E 47                  919 	ld	b,a
   039F A9                  920 	xor	a,c
   03A0 4F                  921 	ld	c,a
                            922 ;	genAssign (pointer)
                            923 ;	AOP_STK for _errnum__1_0
                            924 ;	isBitvar = 0
   03A1 DD 6E FE            925 	ld	l,-2(ix)
   03A4 DD 66 FF            926 	ld	h,-1(ix)
   03A7 71                  927 	ld	(hl),c
                            928 ;ecc/rslib.c:125: *errs = 2;
                            929 ;	genAssign (pointer)
                            930 ;	isBitvar = 0
   03A8 6B                  931 	ld	l,e
   03A9 62                  932 	ld	h,d
   03AA 36 02               933 	ld	(hl),#0x02
   03AC 23                  934 	inc	hl
   03AD 36 00               935 	ld	(hl),#0x00
                            936 ;ecc/rslib.c:126: if (*det != 0)
                            937 ;	genCmpEq
                            938 ; genCmpEq: left 1, right 1, result 0
   03AF 79                  939 	ld	a,c
   03B0 B7                  940 	or	a,a
                            941 ;ecc/rslib.c:127: return;
                            942 ;	genRet
                            943 ;	genLabel
   03B1 CArB7s03            944 	jp	z,00104$
   03B4                     945 00113$:
   03B4 C3rDCs03            946 	jp	00107$
   03B7                     947 00104$:
                            948 ;ecc/rslib.c:129: *det = s[1];
                            949 ;	genPlus
                            950 ;	AOP_STK for 
                            951 ;	genPlusIncr
   03B7 DD 6E 04            952 	ld	l,4(ix)
   03BA DD 66 05            953 	ld	h,5(ix)
   03BD 23                  954 	inc	hl
                            955 ;	genPointerGet
   03BE 4E                  956 	ld	c,(hl)
                            957 ;	genAssign (pointer)
                            958 ;	AOP_STK for _errnum__1_0
                            959 ;	isBitvar = 0
   03BF DD 6E FE            960 	ld	l,-2(ix)
   03C2 DD 66 FF            961 	ld	h,-1(ix)
   03C5 71                  962 	ld	(hl),c
                            963 ;ecc/rslib.c:130: *errs = 1;
                            964 ;	genAssign (pointer)
                            965 ;	isBitvar = 0
   03C6 6B                  966 	ld	l,e
   03C7 62                  967 	ld	h,d
   03C8 36 01               968 	ld	(hl),#0x01
   03CA 23                  969 	inc	hl
   03CB 36 00               970 	ld	(hl),#0x00
                            971 ;ecc/rslib.c:131: if (*det != 0)
                            972 ;	genCmpEq
                            973 ; genCmpEq: left 1, right 1, result 0
   03CD 79                  974 	ld	a,c
   03CE B7                  975 	or	a,a
                            976 ;ecc/rslib.c:132: return;
                            977 ;	genRet
                            978 ;	genLabel
   03CF CArD5s03            979 	jp	z,00106$
   03D2                     980 00114$:
   03D2 C3rDCs03            981 	jp	00107$
   03D5                     982 00106$:
                            983 ;ecc/rslib.c:134: *errs = 4;
                            984 ;	genAssign (pointer)
                            985 ;	isBitvar = 0
   03D5 6B                  986 	ld	l,e
   03D6 62                  987 	ld	h,d
   03D7 36 04               988 	ld	(hl),#0x04
   03D9 23                  989 	inc	hl
   03DA 36 00               990 	ld	(hl),#0x00
                            991 ;	genLabel
   03DC                     992 00107$:
                            993 ;	genEndFunction
   03DC DD F9               994 	ld	sp,ix
   03DE DD E1               995 	pop	ix
   03E0 C9                  996 	ret
   03E1                     997 _errnum_end::
                            998 ;ecc/rslib.c:144: void rsdecode (unsigned char code[255], unsigned char mesg[249], int* errcode) {
                            999 ;	genLabel
                           1000 ;	genFunction
                           1001 ;	---------------------------------
                           1002 ; Function rsdecode
                           1003 ; ---------------------------------
   03E1                    1004 _rsdecode_start::
   03E1                    1005 _rsdecode:
   03E1 DD E5              1006 	push	ix
   03E3 DD 21 00 00        1007 	ld	ix,#0
   03E7 DD 39              1008 	add	ix,sp
   03E9 21 D4 FF           1009 	ld	hl,#-44
   03EC 39                 1010 	add	hl,sp
   03ED F9                 1011 	ld	sp,hl
                           1012 ;ecc/rslib.c:150: *errcode = 0;
                           1013 ;	genAssign
                           1014 ;	AOP_STK for 
                           1015 ;	AOP_STK for _rsdecode__1_0
   03EE DD 7E 08           1016 	ld	a,8(ix)
   03F1 DD 77 E5           1017 	ld	-27(ix),a
   03F4 DD 7E 09           1018 	ld	a,9(ix)
   03F7 DD 77 E6           1019 	ld	-26(ix),a
                           1020 ;	genAssign (pointer)
                           1021 ;	AOP_STK for _rsdecode__1_0
                           1022 ;	isBitvar = 0
   03FA DD 6E E5           1023 	ld	l,-27(ix)
   03FD DD 66 E6           1024 	ld	h,-26(ix)
   0400 36 00              1025 	ld	(hl),#0x00
   0402 23                 1026 	inc	hl
   0403 36 00              1027 	ld	(hl),#0x00
                           1028 ;ecc/rslib.c:156: for (i=0; i<249; i++) mesg[i]=code[j--];
                           1029 ;	genAssign
   0405 06 FE              1030 	ld	b,#0xFE
                           1031 ;	genAssign
   0407 16 00              1032 	ld	d,#0x00
                           1033 ;	genLabel
   0409                    1034 00126$:
                           1035 ;	genCmpLt
   0409 7A                 1036 	ld	a,d
   040A D6 F9              1037 	sub	a,#0xF9
   040C D2r2Fs04           1038 	jp	nc,00129$
                           1039 ;	genPlus
                           1040 ;	AOP_STK for 
                           1041 ;	Can't optimise plus by inc, falling back to the normal way
   040F DD 7E 06           1042 	ld	a,6(ix)
   0412 82                 1043 	add	a,d
   0413 5F                 1044 	ld	e,a
   0414 DD 7E 07           1045 	ld	a,7(ix)
   0417 CE 00              1046 	adc	a,#0x00
   0419 4F                 1047 	ld	c,a
                           1048 ;	genAssign
   041A 68                 1049 	ld	l,b
                           1050 ;	genMinus
   041B 05                 1051 	dec	b
                           1052 ;	genPlus
                           1053 ;	AOP_STK for 
                           1054 ;	Can't optimise plus by inc, falling back to the normal way
   041C DD 7E 04           1055 	ld	a,4(ix)
   041F 85                 1056 	add	a,l
   0420 6F                 1057 	ld	l,a
   0421 DD 7E 05           1058 	ld	a,5(ix)
   0424 CE 00              1059 	adc	a,#0x00
   0426 67                 1060 	ld	h,a
                           1061 ;	genPointerGet
   0427 7E                 1062 	ld	a,(hl)
                           1063 ;	genAssign (pointer)
                           1064 ;	isBitvar = 0
   0428 6B                 1065 	ld	l,e
   0429 61                 1066 	ld	h,c
   042A 77                 1067 	ld	(hl),a
                           1068 ;	genPlus
                           1069 ;	genPlusIncr
                           1070 ; Removed redundent load
   042B 14                 1071 	inc	d
                           1072 ;	genGoto
   042C C3r09s04           1073 	jp	00126$
                           1074 ;	genLabel
   042F                    1075 00129$:
                           1076 ;ecc/rslib.c:158: syndrome (code, syn);
                           1077 ;	genAddrOf
                           1078 ;	AOP_STK for _rsdecode__1_0
   042F 21 25 00           1079 	ld	hl,#0x0025
   0432 39                 1080 	add	hl,sp
                           1081 ;	genIpush
                           1082 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
                           1083 ;	AOP_STK for _rsdecode__1_0
   0433 DD 75 E0           1084 	ld	-32(ix),l
   0436 DD 74 E1           1085 	ld	-31(ix),h
   0439 E5                 1086 	push	hl
                           1087 ;	genIpush
                           1088 ;	AOP_STK for 
   043A DD 6E 04           1089 	ld	l,4(ix)
   043D DD 66 05           1090 	ld	h,5(ix)
   0440 E5                 1091 	push	hl
                           1092 ;	genCall
   0441 CDrBBs01           1093 	call	_syndrome
   0444 F1                 1094 	pop	af
   0445 F1                 1095 	pop	af
                           1096 ;ecc/rslib.c:160: if(syn[0]==0) return;
                           1097 ;	genPointerGet
                           1098 ;	AOP_STK for _rsdecode__1_0
   0446 DD 6E E0           1099 	ld	l,-32(ix)
   0449 DD 66 E1           1100 	ld	h,-31(ix)
   044C 6E                 1101 	ld	l,(hl)
                           1102 ;	genCmpEq
                           1103 ; genCmpEq: left 1, right 1, result 0
   044D 7D                 1104 	ld	a,l
   044E B7                 1105 	or	a,a
   044F CAr55s04           1106 	jp	z,00148$
   0452                    1107 00147$:
   0452 C3r58s04           1108 	jp	00102$
   0455                    1109 00148$:
                           1110 ;	genRet
   0455 C3r4Es10           1111 	jp	00130$
                           1112 ;	genLabel
   0458                    1113 00102$:
                           1114 ;ecc/rslib.c:166: errnum (syn, &deter, errcode);
                           1115 ;	genAddrOf
   0458 21 24 00           1116 	ld	hl,#0x0024
   045B 39                 1117 	add	hl,sp
   045C 5D                 1118 	ld	e,l
   045D 54                 1119 	ld	d,h
                           1120 ;	genIpush
                           1121 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
                           1122 ;	AOP_STK for _rsdecode__1_0
   045E DD 6E E5           1123 	ld	l,-27(ix)
   0461 DD 66 E6           1124 	ld	h,-26(ix)
   0464 E5                 1125 	push	hl
                           1126 ;	genIpush
   0465 D5                 1127 	push	de
                           1128 ;	genIpush
                           1129 ;	AOP_STK for _rsdecode__1_0
   0466 DD 6E E0           1130 	ld	l,-32(ix)
   0469 DD 66 E1           1131 	ld	h,-31(ix)
   046C E5                 1132 	push	hl
                           1133 ;	genCall
   046D CDr2Fs02           1134 	call	_errnum
   0470 F1                 1135 	pop	af
   0471 F1                 1136 	pop	af
   0472 F1                 1137 	pop	af
                           1138 ;ecc/rslib.c:168: if(*errcode==4) return;
                           1139 ;	genPointerGet
                           1140 ;	AOP_STK for _rsdecode__1_0
   0473 DD 6E E5           1141 	ld	l,-27(ix)
   0476 DD 66 E6           1142 	ld	h,-26(ix)
   0479 7E                 1143 	ld	a,(hl)
   047A 23                 1144 	inc	hl
   047B 66                 1145 	ld	h,(hl)
                           1146 ;	genCmpEq
                           1147 ; genCmpEq: left 2, right 2, result 0
   047C 6F                 1148 	ld	l,a
   047D FE 04              1149 	cp	a,#0x04
   047F C2r87s04           1150 	jp	nz,00149$
   0482 7C                 1151 	ld	a,h
   0483 B7                 1152 	or	a,a
   0484 CAr8As04           1153 	jp	z,00150$
   0487                    1154 00149$:
   0487 C3r8Ds04           1155 	jp	00104$
   048A                    1156 00150$:
                           1157 ;	genRet
   048A C3r4Es10           1158 	jp	00130$
                           1159 ;	genLabel
   048D                    1160 00104$:
                           1161 ;ecc/rslib.c:175: switch (*errcode)
                           1162 ;	genPointerGet
                           1163 ;	AOP_STK for _rsdecode__1_0
   048D DD 6E E5           1164 	ld	l,-27(ix)
   0490 DD 66 E6           1165 	ld	h,-26(ix)
   0493 7E                 1166 	ld	a,(hl)
   0494 23                 1167 	inc	hl
   0495 66                 1168 	ld	h,(hl)
                           1169 ;	genCmpEq
                           1170 ; genCmpEq: left 2, right 2, result 0
   0496 6F                 1171 	ld	l,a
   0497 FE 01              1172 	cp	a,#0x01
   0499 C2rA1s04           1173 	jp	nz,00151$
   049C 7C                 1174 	ld	a,h
   049D B7                 1175 	or	a,a
   049E CArBAs04           1176 	jp	z,00105$
   04A1                    1177 00151$:
                           1178 ;	genCmpEq
                           1179 ; genCmpEq: left 2, right 2, result 0
   04A1 7D                 1180 	ld	a,l
   04A2 FE 02              1181 	cp	a,#0x02
   04A4 C2rACs04           1182 	jp	nz,00152$
   04A7 7C                 1183 	ld	a,h
   04A8 B7                 1184 	or	a,a
   04A9 CAr4Fs05           1185 	jp	z,00108$
   04AC                    1186 00152$:
                           1187 ;	genCmpEq
                           1188 ; genCmpEq: left 2, right 2, result 0
   04AC 7D                 1189 	ld	a,l
   04AD FE 03              1190 	cp	a,#0x03
   04AF C2rB7s04           1191 	jp	nz,00153$
   04B2 7C                 1192 	ld	a,h
   04B3 B7                 1193 	or	a,a
   04B4 CArF5s07           1194 	jp	z,00115$
   04B7                    1195 00153$:
                           1196 ;	genGoto
   04B7 C3r43s10           1197 	jp	00124$
                           1198 ;ecc/rslib.c:180: x0 = gfmul (syn[2], gfinv (syn[1]));
                           1199 ;	genLabel
   04BA                    1200 00105$:
                           1201 ;	genPlus
                           1202 ;	AOP_STK for _rsdecode__1_0
                           1203 ;	AOP_STK for _rsdecode__1_0
                           1204 ;	genPlusIncr
                           1205 ;	Can't optimise plus by inc, falling back to the normal way
   04BA DD 7E E0           1206 	ld	a,-32(ix)
   04BD C6 01              1207 	add	a,#0x01
   04BF DD 77 E3           1208 	ld	-29(ix),a
   04C2 DD 7E E1           1209 	ld	a,-31(ix)
   04C5 CE 00              1210 	adc	a,#0x00
   04C7 DD 77 E4           1211 	ld	-28(ix),a
                           1212 ;	genPointerGet
                           1213 ;	AOP_STK for _rsdecode__1_0
   04CA DD 6E E3           1214 	ld	l,-29(ix)
   04CD DD 66 E4           1215 	ld	h,-28(ix)
   04D0 6E                 1216 	ld	l,(hl)
                           1217 ;	genIpush
                           1218 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   04D1 7D                 1219 	ld	a,l
   04D2 F5                 1220 	push	af
   04D3 33                 1221 	inc	sp
                           1222 ;	genCall
   04D4 CDr00s00           1223 	call	_gfinv
   04D7 45                 1224 	ld	b,l
   04D8 33                 1225 	inc	sp
                           1226 ;	genPlus
                           1227 ;	AOP_STK for _rsdecode__1_0
                           1228 ;	genPlusIncr
                           1229 ;	Can't optimise plus by inc, falling back to the normal way
   04D9 DD 7E E0           1230 	ld	a,-32(ix)
   04DC C6 02              1231 	add	a,#0x02
   04DE 57                 1232 	ld	d,a
   04DF DD 7E E1           1233 	ld	a,-31(ix)
   04E2 CE 00              1234 	adc	a,#0x00
   04E4 5F                 1235 	ld	e,a
                           1236 ;	genPointerGet
   04E5 6A                 1237 	ld	l,d
   04E6 63                 1238 	ld	h,e
   04E7 4E                 1239 	ld	c,(hl)
                           1240 ;	genIpush
                           1241 ; _saveRegsForCall: sendSetSize: 0 deInUse: 1 bcInUse: 0 deSending: 0
   04E8 D5                 1242 	push	de
   04E9 C5                 1243 	push    bc
   04EA 33                 1244 	inc     sp
                           1245 ;	genIpush
   04EB 79                 1246 	ld	a,c
   04EC F5                 1247 	push	af
   04ED 33                 1248 	inc	sp
                           1249 ;	genCall
   04EE CDr00s00           1250 	call	_gfmul
   04F1 F1                 1251 	pop	af
   04F2 D1                 1252 	pop	de
                           1253 ;	genAssign
   04F3 4D                 1254 	ld	c,l
                           1255 ;ecc/rslib.c:181: w0 = gfmul (gfexp (syn[1], 2), gfinv (syn[2]));
                           1256 ;	genPointerGet
   04F4 6A                 1257 	ld	l,d
   04F5 63                 1258 	ld	h,e
   04F6 6E                 1259 	ld	l,(hl)
                           1260 ;	genIpush
                           1261 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   04F7 C5                 1262 	push	bc
   04F8 7D                 1263 	ld	a,l
   04F9 F5                 1264 	push	af
   04FA 33                 1265 	inc	sp
                           1266 ;	genCall
   04FB CDr00s00           1267 	call	_gfinv
   04FE 45                 1268 	ld	b,l
   04FF 33                 1269 	inc	sp
   0500 78                 1270 	ld	a,b
   0501 C1                 1271 	pop	bc
   0502 47                 1272 	ld	b,a
                           1273 ;	genPointerGet
                           1274 ;	AOP_STK for _rsdecode__1_0
   0503 DD 6E E3           1275 	ld	l,-29(ix)
   0506 DD 66 E4           1276 	ld	h,-28(ix)
   0509 5E                 1277 	ld	e,(hl)
                           1278 ;	genIpush
                           1279 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   050A C5                 1280 	push	bc
   050B 3E 02              1281 	ld	a,#0x02
   050D F5                 1282 	push	af
   050E 33                 1283 	inc	sp
                           1284 ;	genIpush
   050F 7B                 1285 	ld	a,e
   0510 F5                 1286 	push	af
   0511 33                 1287 	inc	sp
                           1288 ;	genCall
   0512 CDr00s00           1289 	call	_gfexp
   0515 5D                 1290 	ld	e,l
   0516 F1                 1291 	pop	af
   0517 C1                 1292 	pop	bc
                           1293 ;	genIpush
                           1294 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0518 C5                 1295 	push	bc
   0519 C5                 1296 	push    bc
   051A 33                 1297 	inc     sp
                           1298 ;	genIpush
   051B 7B                 1299 	ld	a,e
   051C F5                 1300 	push	af
   051D 33                 1301 	inc	sp
                           1302 ;	genCall
   051E CDr00s00           1303 	call	_gfmul
   0521 F1                 1304 	pop	af
   0522 C1                 1305 	pop	bc
                           1306 ;	genAssign
                           1307 ;	AOP_STK for _rsdecode_w0_1_1
   0523 DD 75 EE           1308 	ld	-18(ix),l
                           1309 ;ecc/rslib.c:182: if (v2e[x0] > 5)
                           1310 ;	genPlus
                           1311 ;	Can't optimise plus by inc, falling back to the normal way
   0526 3Er00              1312 	ld	a,#<_v2e
   0528 81                 1313 	add	a,c
   0529 6F                 1314 	ld	l,a
   052A 3Es00              1315 	ld	a,#>_v2e
   052C CE 00              1316 	adc	a,#0x00
   052E 67                 1317 	ld	h,a
                           1318 ;	genPointerGet
   052F 6E                 1319 	ld	l,(hl)
                           1320 ;	genCmpGt
   0530 3E 05              1321 	ld	a,#0x05
   0532 95                 1322 	sub	a,l
   0533 D2r4Cs05           1323 	jp	nc,00107$
                           1324 ;ecc/rslib.c:183: mesg[254 - v2e[x0]] = gfadd (mesg[254 - v2e[x0]], w0);
                           1325 ;	genMinus
   0536 3E FE              1326 	ld	a,#0xFE
   0538 95                 1327 	sub	a,l
   0539 6F                 1328 	ld	l,a
                           1329 ;	genPlus
                           1330 ;	AOP_STK for 
                           1331 ;	Can't optimise plus by inc, falling back to the normal way
   053A DD 7E 06           1332 	ld	a,6(ix)
   053D 85                 1333 	add	a,l
   053E 5F                 1334 	ld	e,a
   053F DD 7E 07           1335 	ld	a,7(ix)
   0542 CE 00              1336 	adc	a,#0x00
   0544 57                 1337 	ld	d,a
                           1338 ;	genPointerGet
   0545 1A                 1339 	ld	a,(de)
   0546 4F                 1340 	ld	c,a
                           1341 ;	genXor
                           1342 ;	AOP_STK for _rsdecode_w0_1_1
   0547 DD 7E EE           1343 	ld	a,-18(ix)
   054A A9                 1344 	xor	a,c
                           1345 ;	genAssign (pointer)
                           1346 ;	isBitvar = 0
   054B 12                 1347 	ld	(de),a
                           1348 ;	genLabel
   054C                    1349 00107$:
                           1350 ;ecc/rslib.c:184: return;
                           1351 ;	genRet
   054C C3r4Es10           1352 	jp	00130$
                           1353 ;ecc/rslib.c:188: z[0] = gfmul (gfadd (gfmul (syn[1], syn[3]), gfexp (syn[2], 2)), gfinv (deter));
                           1354 ;	genLabel
   054F                    1355 00108$:
                           1356 ;	genAddrOf
                           1357 ;	AOP_STK for _rsdecode__1_0
   054F 21 20 00           1358 	ld	hl,#0x0020
   0552 39                 1359 	add	hl,sp
   0553 DD 75 E3           1360 	ld	-29(ix),l
   0556 DD 74 E4           1361 	ld	-28(ix),h
                           1362 ;	genIpush
                           1363 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
                           1364 ;	AOP_STK for _rsdecode_deter_1_1
   0559 DD 7E F8           1365 	ld	a,-8(ix)
   055C F5                 1366 	push	af
   055D 33                 1367 	inc	sp
                           1368 ;	genCall
   055E CDr00s00           1369 	call	_gfinv
   0561 4D                 1370 	ld	c,l
   0562 33                 1371 	inc	sp
                           1372 ;	genPlus
                           1373 ;	AOP_STK for _rsdecode__1_0
                           1374 ;	AOP_STK for _rsdecode__1_0
                           1375 ;	genPlusIncr
                           1376 ;	Can't optimise plus by inc, falling back to the normal way
   0563 DD 7E E0           1377 	ld	a,-32(ix)
   0566 C6 03              1378 	add	a,#0x03
   0568 DD 77 DA           1379 	ld	-38(ix),a
   056B DD 7E E1           1380 	ld	a,-31(ix)
   056E CE 00              1381 	adc	a,#0x00
   0570 DD 77 DB           1382 	ld	-37(ix),a
                           1383 ;	genPointerGet
                           1384 ;	AOP_STK for _rsdecode__1_0
   0573 DD 6E DA           1385 	ld	l,-38(ix)
   0576 DD 66 DB           1386 	ld	h,-37(ix)
   0579 5E                 1387 	ld	e,(hl)
                           1388 ;	genPlus
                           1389 ;	AOP_STK for _rsdecode__1_0
                           1390 ;	AOP_STK for _rsdecode__1_0
                           1391 ;	genPlusIncr
                           1392 ;	Can't optimise plus by inc, falling back to the normal way
   057A DD 7E E0           1393 	ld	a,-32(ix)
   057D C6 01              1394 	add	a,#0x01
   057F DD 77 DE           1395 	ld	-34(ix),a
   0582 DD 7E E1           1396 	ld	a,-31(ix)
   0585 CE 00              1397 	adc	a,#0x00
   0587 DD 77 DF           1398 	ld	-33(ix),a
                           1399 ;	genPointerGet
                           1400 ;	AOP_STK for _rsdecode__1_0
   058A DD 6E DE           1401 	ld	l,-34(ix)
   058D DD 66 DF           1402 	ld	h,-33(ix)
   0590 56                 1403 	ld	d,(hl)
                           1404 ;	genIpush
                           1405 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0591 C5                 1406 	push	bc
   0592 7B                 1407 	ld	a,e
   0593 F5                 1408 	push	af
   0594 33                 1409 	inc	sp
                           1410 ;	genIpush
   0595 D5                 1411 	push    de
   0596 33                 1412 	inc     sp
                           1413 ;	genCall
   0597 CDr00s00           1414 	call	_gfmul
   059A 5D                 1415 	ld	e,l
   059B F1                 1416 	pop	af
   059C C1                 1417 	pop	bc
                           1418 ;	genPlus
                           1419 ;	AOP_STK for _rsdecode__1_0
                           1420 ;	AOP_STK for _rsdecode__1_0
                           1421 ;	genPlusIncr
                           1422 ;	Can't optimise plus by inc, falling back to the normal way
   059D DD 7E E0           1423 	ld	a,-32(ix)
   05A0 C6 02              1424 	add	a,#0x02
   05A2 DD 77 DC           1425 	ld	-36(ix),a
   05A5 DD 7E E1           1426 	ld	a,-31(ix)
   05A8 CE 00              1427 	adc	a,#0x00
   05AA DD 77 DD           1428 	ld	-35(ix),a
                           1429 ;	genPointerGet
                           1430 ;	AOP_STK for _rsdecode__1_0
   05AD DD 6E DC           1431 	ld	l,-36(ix)
   05B0 DD 66 DD           1432 	ld	h,-35(ix)
   05B3 56                 1433 	ld	d,(hl)
                           1434 ;	genIpush
                           1435 ; _saveRegsForCall: sendSetSize: 0 deInUse: 1 bcInUse: 1 deSending: 0
   05B4 C5                 1436 	push	bc
   05B5 D5                 1437 	push	de
   05B6 3E 02              1438 	ld	a,#0x02
   05B8 F5                 1439 	push	af
   05B9 33                 1440 	inc	sp
                           1441 ;	genIpush
   05BA D5                 1442 	push    de
   05BB 33                 1443 	inc     sp
                           1444 ;	genCall
   05BC CDr00s00           1445 	call	_gfexp
   05BF 55                 1446 	ld	d,l
   05C0 F1                 1447 	pop	af
   05C1 7A                 1448 	ld	a,d
   05C2 D1                 1449 	pop	de
   05C3 57                 1450 	ld	d,a
   05C4 C1                 1451 	pop	bc
                           1452 ;	genXor
   05C5 7A                 1453 	ld	a,d
   05C6 AB                 1454 	xor	a,e
   05C7 5F                 1455 	ld	e,a
                           1456 ;	genIpush
                           1457 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   05C8 79                 1458 	ld	a,c
   05C9 F5                 1459 	push	af
   05CA 33                 1460 	inc	sp
                           1461 ;	genIpush
   05CB 7B                 1462 	ld	a,e
   05CC F5                 1463 	push	af
   05CD 33                 1464 	inc	sp
                           1465 ;	genCall
   05CE CDr00s00           1466 	call	_gfmul
   05D1 5D                 1467 	ld	e,l
   05D2 F1                 1468 	pop	af
                           1469 ;	genAssign (pointer)
                           1470 ;	AOP_STK for _rsdecode__1_0
                           1471 ;	isBitvar = 0
   05D3 DD 6E E3           1472 	ld	l,-29(ix)
   05D6 DD 66 E4           1473 	ld	h,-28(ix)
   05D9 73                 1474 	ld	(hl),e
                           1475 ;ecc/rslib.c:189: z[1] = gfmul (gfadd (gfmul (syn[2], syn[3]), gfmul (syn[1], syn[4])), gfinv (deter));
                           1476 ;	genPlus
                           1477 ;	AOP_STK for _rsdecode__1_0
                           1478 ;	genPlusIncr
   05DA DD 5E E3           1479 	ld	e,-29(ix)
   05DD DD 56 E4           1480 	ld	d,-28(ix)
   05E0 13                 1481 	inc	de
                           1482 ;	genIpush
                           1483 ; _saveRegsForCall: sendSetSize: 0 deInUse: 1 bcInUse: 0 deSending: 0
   05E1 D5                 1484 	push	de
                           1485 ;	AOP_STK for _rsdecode_deter_1_1
   05E2 DD 7E F8           1486 	ld	a,-8(ix)
   05E5 F5                 1487 	push	af
   05E6 33                 1488 	inc	sp
                           1489 ;	genCall
   05E7 CDr00s00           1490 	call	_gfinv
   05EA 4D                 1491 	ld	c,l
   05EB 33                 1492 	inc	sp
   05EC D1                 1493 	pop	de
                           1494 ;	genPointerGet
                           1495 ;	AOP_STK for _rsdecode__1_0
                           1496 ;	AOP_STK for _rsdecode__1_0
   05ED DD 6E DA           1497 	ld	l,-38(ix)
   05F0 DD 66 DB           1498 	ld	h,-37(ix)
   05F3 7E                 1499 	ld	a,(hl)
   05F4 DD 77 DA           1500 	ld	-38(ix),a
                           1501 ;	genPointerGet
                           1502 ;	AOP_STK for _rsdecode__1_0
   05F7 DD 6E DC           1503 	ld	l,-36(ix)
   05FA DD 66 DD           1504 	ld	h,-35(ix)
   05FD 46                 1505 	ld	b,(hl)
                           1506 ;	genIpush
                           1507 ; _saveRegsForCall: sendSetSize: 0 deInUse: 1 bcInUse: 1 deSending: 0
   05FE C5                 1508 	push	bc
   05FF D5                 1509 	push	de
                           1510 ;	AOP_STK for _rsdecode__1_0
   0600 DD 7E DA           1511 	ld	a,-38(ix)
   0603 F5                 1512 	push	af
   0604 33                 1513 	inc	sp
                           1514 ;	genIpush
   0605 C5                 1515 	push    bc
   0606 33                 1516 	inc     sp
                           1517 ;	genCall
   0607 CDr00s00           1518 	call	_gfmul
                           1519 ;	AOP_STK for _rsdecode__1_0
   060A DD 75 DA           1520 	ld	-38(ix),l
   060D F1                 1521 	pop	af
   060E D1                 1522 	pop	de
   060F C1                 1523 	pop	bc
                           1524 ;	genPlus
                           1525 ;	AOP_STK for _rsdecode__1_0
                           1526 ;	genPlusIncr
                           1527 ;	Can't optimise plus by inc, falling back to the normal way
   0610 DD 7E E0           1528 	ld	a,-32(ix)
   0613 C6 04              1529 	add	a,#0x04
   0615 6F                 1530 	ld	l,a
   0616 DD 7E E1           1531 	ld	a,-31(ix)
   0619 CE 00              1532 	adc	a,#0x00
   061B 67                 1533 	ld	h,a
                           1534 ;	genPointerGet
                           1535 ;	AOP_STK for _rsdecode__1_0
   061C 7E                 1536 	ld	a,(hl)
   061D DD 77 E2           1537 	ld	-30(ix),a
                           1538 ;	genPointerGet
                           1539 ;	AOP_STK for _rsdecode__1_0
   0620 DD 6E DE           1540 	ld	l,-34(ix)
   0623 DD 66 DF           1541 	ld	h,-33(ix)
   0626 46                 1542 	ld	b,(hl)
                           1543 ;	genIpush
                           1544 ; _saveRegsForCall: sendSetSize: 0 deInUse: 1 bcInUse: 1 deSending: 0
   0627 C5                 1545 	push	bc
   0628 D5                 1546 	push	de
                           1547 ;	AOP_STK for _rsdecode__1_0
   0629 DD 7E E2           1548 	ld	a,-30(ix)
   062C F5                 1549 	push	af
   062D 33                 1550 	inc	sp
                           1551 ;	genIpush
   062E C5                 1552 	push    bc
   062F 33                 1553 	inc     sp
                           1554 ;	genCall
   0630 CDr00s00           1555 	call	_gfmul
   0633 45                 1556 	ld	b,l
   0634 F1                 1557 	pop	af
   0635 D1                 1558 	pop	de
   0636 78                 1559 	ld	a,b
   0637 C1                 1560 	pop	bc
   0638 47                 1561 	ld	b,a
                           1562 ;	genXor
                           1563 ;	AOP_STK for _rsdecode__1_0
   0639 DD 7E DA           1564 	ld	a,-38(ix)
   063C A8                 1565 	xor	a,b
   063D 47                 1566 	ld	b,a
                           1567 ;	genIpush
                           1568 ; _saveRegsForCall: sendSetSize: 0 deInUse: 1 bcInUse: 0 deSending: 0
   063E D5                 1569 	push	de
   063F 79                 1570 	ld	a,c
   0640 F5                 1571 	push	af
   0641 33                 1572 	inc	sp
                           1573 ;	genIpush
   0642 C5                 1574 	push    bc
   0643 33                 1575 	inc     sp
                           1576 ;	genCall
   0644 CDr00s00           1577 	call	_gfmul
   0647 4D                 1578 	ld	c,l
   0648 F1                 1579 	pop	af
   0649 D1                 1580 	pop	de
                           1581 ;	genAssign (pointer)
                           1582 ;	isBitvar = 0
   064A 79                 1583 	ld	a,c
   064B 12                 1584 	ld	(de),a
                           1585 ;ecc/rslib.c:190: z[2] = 1;
                           1586 ;	genPlus
                           1587 ;	AOP_STK for _rsdecode__1_0
                           1588 ;	genPlusIncr
   064C DD 6E E3           1589 	ld	l,-29(ix)
   064F DD 66 E4           1590 	ld	h,-28(ix)
   0652 23                 1591 	inc	hl
   0653 23                 1592 	inc	hl
                           1593 ;	genAssign (pointer)
                           1594 ;	isBitvar = 0
   0654 36 01              1595 	ld	(hl),#0x01
                           1596 ;ecc/rslib.c:191: z[3] = 0;
                           1597 ;	genPlus
                           1598 ;	AOP_STK for _rsdecode__1_0
                           1599 ;	genPlusIncr
                           1600 ;	Can't optimise plus by inc, falling back to the normal way
   0656 DD 7E E3           1601 	ld	a,-29(ix)
   0659 C6 03              1602 	add	a,#0x03
   065B 6F                 1603 	ld	l,a
   065C DD 7E E4           1604 	ld	a,-28(ix)
   065F CE 00              1605 	adc	a,#0x00
   0661 67                 1606 	ld	h,a
                           1607 ;	genAssign (pointer)
                           1608 ;	isBitvar = 0
   0662 36 00              1609 	ld	(hl),#0x00
                           1610 ;ecc/rslib.c:193: polysolve(z, x, &sols);
                           1611 ;	genAddrOf
   0664 21 13 00           1612 	ld	hl,#0x0013
   0667 39                 1613 	add	hl,sp
   0668 4D                 1614 	ld	c,l
   0669 44                 1615 	ld	b,h
                           1616 ;	genAddrOf
                           1617 ;	AOP_STK for _rsdecode__1_0
   066A 21 15 00           1618 	ld	hl,#0x0015
   066D 39                 1619 	add	hl,sp
   066E DD 75 DA           1620 	ld	-38(ix),l
   0671 DD 74 DB           1621 	ld	-37(ix),h
                           1622 ;	genIpush
                           1623 ; _saveRegsForCall: sendSetSize: 0 deInUse: 1 bcInUse: 0 deSending: 0
   0674 D5                 1624 	push	de
   0675 C5                 1625 	push	bc
                           1626 ;	genIpush
                           1627 ;	AOP_STK for _rsdecode__1_0
   0676 DD 6E DA           1628 	ld	l,-38(ix)
   0679 DD 66 DB           1629 	ld	h,-37(ix)
   067C E5                 1630 	push	hl
                           1631 ;	genIpush
                           1632 ;	AOP_STK for _rsdecode__1_0
   067D DD 6E E3           1633 	ld	l,-29(ix)
   0680 DD 66 E4           1634 	ld	h,-28(ix)
   0683 E5                 1635 	push	hl
                           1636 ;	genCall
   0684 CDr53s10           1637 	call	_polysolve
   0687 F1                 1638 	pop	af
   0688 F1                 1639 	pop	af
   0689 F1                 1640 	pop	af
   068A D1                 1641 	pop	de
                           1642 ;ecc/rslib.c:194: if (sols!=2) {
                           1643 ;	genCmpEq
                           1644 ;	AOP_STK for _rsdecode_sols_1_1
                           1645 ; genCmpEq: left 2, right 2, result 0
   068B DD 7E E7           1646 	ld	a,-25(ix)
   068E FE 02              1647 	cp	a,#0x02
   0690 C2r9As06           1648 	jp	nz,00154$
   0693 DD 7E E8           1649 	ld	a,-24(ix)
   0696 B7                 1650 	or	a,a
   0697 CArA8s06           1651 	jp	z,00110$
   069A                    1652 00154$:
                           1653 ;ecc/rslib.c:195: *errcode=4;
                           1654 ;	genAssign (pointer)
                           1655 ;	AOP_STK for _rsdecode__1_0
                           1656 ;	isBitvar = 0
   069A DD 6E E5           1657 	ld	l,-27(ix)
   069D DD 66 E6           1658 	ld	h,-26(ix)
   06A0 36 04              1659 	ld	(hl),#0x04
   06A2 23                 1660 	inc	hl
   06A3 36 00              1661 	ld	(hl),#0x00
                           1662 ;ecc/rslib.c:196: return;
                           1663 ;	genRet
   06A5 C3r4Es10           1664 	jp	00130$
                           1665 ;	genLabel
   06A8                    1666 00110$:
                           1667 ;ecc/rslib.c:199: w0 = gfmul (z[0], syn[1]);
                           1668 ;	genPointerGet
                           1669 ;	AOP_STK for _rsdecode__1_0
   06A8 DD 6E DE           1670 	ld	l,-34(ix)
   06AB DD 66 DF           1671 	ld	h,-33(ix)
   06AE 4E                 1672 	ld	c,(hl)
                           1673 ;	genPointerGet
                           1674 ;	AOP_STK for _rsdecode__1_0
   06AF DD 6E E3           1675 	ld	l,-29(ix)
   06B2 DD 66 E4           1676 	ld	h,-28(ix)
   06B5 46                 1677 	ld	b,(hl)
                           1678 ;	genIpush
                           1679 ; _saveRegsForCall: sendSetSize: 0 deInUse: 1 bcInUse: 0 deSending: 0
   06B6 D5                 1680 	push	de
   06B7 79                 1681 	ld	a,c
   06B8 F5                 1682 	push	af
   06B9 33                 1683 	inc	sp
                           1684 ;	genIpush
   06BA C5                 1685 	push    bc
   06BB 33                 1686 	inc     sp
                           1687 ;	genCall
   06BC CDr00s00           1688 	call	_gfmul
   06BF F1                 1689 	pop	af
   06C0 D1                 1690 	pop	de
                           1691 ;	genAssign
                           1692 ;	AOP_STK for _rsdecode_w0_1_1
   06C1 DD 75 EE           1693 	ld	-18(ix),l
                           1694 ;ecc/rslib.c:200: w1 = gfadd (gfmul (z[0], syn[2]), gfmul (z[1], syn[1]));
                           1695 ;	genPointerGet
                           1696 ;	AOP_STK for _rsdecode__1_0
   06C4 DD 6E DC           1697 	ld	l,-36(ix)
   06C7 DD 66 DD           1698 	ld	h,-35(ix)
   06CA 4E                 1699 	ld	c,(hl)
                           1700 ;	genPointerGet
                           1701 ;	AOP_STK for _rsdecode__1_0
   06CB DD 6E E3           1702 	ld	l,-29(ix)
   06CE DD 66 E4           1703 	ld	h,-28(ix)
   06D1 46                 1704 	ld	b,(hl)
                           1705 ;	genIpush
                           1706 ; _saveRegsForCall: sendSetSize: 0 deInUse: 1 bcInUse: 0 deSending: 0
   06D2 D5                 1707 	push	de
   06D3 79                 1708 	ld	a,c
   06D4 F5                 1709 	push	af
   06D5 33                 1710 	inc	sp
                           1711 ;	genIpush
   06D6 C5                 1712 	push    bc
   06D7 33                 1713 	inc     sp
                           1714 ;	genCall
   06D8 CDr00s00           1715 	call	_gfmul
   06DB 4D                 1716 	ld	c,l
   06DC F1                 1717 	pop	af
   06DD D1                 1718 	pop	de
                           1719 ;	genPointerGet
                           1720 ;	AOP_STK for _rsdecode__1_0
                           1721 ;	AOP_STK for _rsdecode__1_0
   06DE DD 6E DE           1722 	ld	l,-34(ix)
   06E1 DD 66 DF           1723 	ld	h,-33(ix)
   06E4 7E                 1724 	ld	a,(hl)
   06E5 DD 77 DC           1725 	ld	-36(ix),a
                           1726 ;	genPointerGet
   06E8 1A                 1727 	ld	a,(de)
   06E9 47                 1728 	ld	b,a
                           1729 ;	genIpush
                           1730 ; _saveRegsForCall: sendSetSize: 0 deInUse: 1 bcInUse: 1 deSending: 0
   06EA C5                 1731 	push	bc
   06EB D5                 1732 	push	de
                           1733 ;	AOP_STK for _rsdecode__1_0
   06EC DD 7E DC           1734 	ld	a,-36(ix)
   06EF F5                 1735 	push	af
   06F0 33                 1736 	inc	sp
                           1737 ;	genIpush
   06F1 C5                 1738 	push    bc
   06F2 33                 1739 	inc     sp
                           1740 ;	genCall
   06F3 CDr00s00           1741 	call	_gfmul
   06F6 45                 1742 	ld	b,l
   06F7 F1                 1743 	pop	af
   06F8 D1                 1744 	pop	de
   06F9 78                 1745 	ld	a,b
   06FA C1                 1746 	pop	bc
                           1747 ;	genXor
   06FB 47                 1748 	ld	b,a
   06FC A9                 1749 	xor	a,c
   06FD 4F                 1750 	ld	c,a
                           1751 ;	genAssign
                           1752 ;	AOP_STK for _rsdecode_w1_1_1
   06FE DD 71 ED           1753 	ld	-19(ix),c
                           1754 ;ecc/rslib.c:201: n0 = 254 - v2e[gfinv (x[0])];
                           1755 ;	genPointerGet
                           1756 ;	AOP_STK for _rsdecode__1_0
   0701 DD 6E DA           1757 	ld	l,-38(ix)
   0704 DD 66 DB           1758 	ld	h,-37(ix)
   0707 6E                 1759 	ld	l,(hl)
                           1760 ;	genIpush
                           1761 ; _saveRegsForCall: sendSetSize: 0 deInUse: 1 bcInUse: 0 deSending: 0
   0708 D5                 1762 	push	de
   0709 7D                 1763 	ld	a,l
   070A F5                 1764 	push	af
   070B 33                 1765 	inc	sp
                           1766 ;	genCall
   070C CDr00s00           1767 	call	_gfinv
   070F 33                 1768 	inc	sp
   0710 D1                 1769 	pop	de
                           1770 ;	genPlus
                           1771 ;	Can't optimise plus by inc, falling back to the normal way
   0711 3Er00              1772 	ld	a,#<_v2e
   0713 85                 1773 	add	a,l
   0714 6F                 1774 	ld	l,a
   0715 3Es00              1775 	ld	a,#>_v2e
   0717 CE 00              1776 	adc	a,#0x00
   0719 67                 1777 	ld	h,a
                           1778 ;	genPointerGet
   071A 6E                 1779 	ld	l,(hl)
                           1780 ;	genMinus
                           1781 ;	AOP_STK for _rsdecode_n0_1_1
   071B 3E FE              1782 	ld	a,#0xFE
   071D 95                 1783 	sub	a,l
   071E DD 77 F1           1784 	ld	-15(ix),a
                           1785 ;ecc/rslib.c:202: n1 = 254 - v2e[gfinv (x[1])];
                           1786 ;	genPlus
                           1787 ;	AOP_STK for _rsdecode__1_0
                           1788 ;	AOP_STK for _rsdecode__1_0
                           1789 ;	genPlusIncr
                           1790 ;	Can't optimise plus by inc, falling back to the normal way
   0721 DD 7E DA           1791 	ld	a,-38(ix)
   0724 C6 01              1792 	add	a,#0x01
   0726 DD 77 DC           1793 	ld	-36(ix),a
   0729 DD 7E DB           1794 	ld	a,-37(ix)
   072C CE 00              1795 	adc	a,#0x00
   072E DD 77 DD           1796 	ld	-35(ix),a
                           1797 ;	genPointerGet
                           1798 ;	AOP_STK for _rsdecode__1_0
   0731 DD 6E DC           1799 	ld	l,-36(ix)
   0734 DD 66 DD           1800 	ld	h,-35(ix)
   0737 6E                 1801 	ld	l,(hl)
                           1802 ;	genIpush
                           1803 ; _saveRegsForCall: sendSetSize: 0 deInUse: 1 bcInUse: 0 deSending: 0
   0738 D5                 1804 	push	de
   0739 7D                 1805 	ld	a,l
   073A F5                 1806 	push	af
   073B 33                 1807 	inc	sp
                           1808 ;	genCall
   073C CDr00s00           1809 	call	_gfinv
   073F 33                 1810 	inc	sp
   0740 D1                 1811 	pop	de
                           1812 ;	genPlus
                           1813 ;	Can't optimise plus by inc, falling back to the normal way
   0741 3Er00              1814 	ld	a,#<_v2e
   0743 85                 1815 	add	a,l
   0744 6F                 1816 	ld	l,a
   0745 3Es00              1817 	ld	a,#>_v2e
   0747 CE 00              1818 	adc	a,#0x00
   0749 67                 1819 	ld	h,a
                           1820 ;	genPointerGet
   074A 6E                 1821 	ld	l,(hl)
                           1822 ;	genMinus
                           1823 ;	AOP_STK for _rsdecode_n1_1_1
   074B 3E FE              1824 	ld	a,#0xFE
   074D 95                 1825 	sub	a,l
   074E DD 77 F0           1826 	ld	-16(ix),a
                           1827 ;ecc/rslib.c:203: e0 = gfmul (gfadd (w0, gfmul (w1, x[0])), gfinv (z[1]));
                           1828 ;	genPointerGet
   0751 1A                 1829 	ld	a,(de)
   0752 6F                 1830 	ld	l,a
                           1831 ;	genIpush
                           1832 ; _saveRegsForCall: sendSetSize: 0 deInUse: 1 bcInUse: 0 deSending: 0
   0753 D5                 1833 	push	de
   0754 7D                 1834 	ld	a,l
   0755 F5                 1835 	push	af
   0756 33                 1836 	inc	sp
                           1837 ;	genCall
   0757 CDr00s00           1838 	call	_gfinv
   075A 4D                 1839 	ld	c,l
   075B 33                 1840 	inc	sp
   075C D1                 1841 	pop	de
                           1842 ;	genPointerGet
                           1843 ;	AOP_STK for _rsdecode__1_0
   075D DD 6E DA           1844 	ld	l,-38(ix)
   0760 DD 66 DB           1845 	ld	h,-37(ix)
   0763 6E                 1846 	ld	l,(hl)
                           1847 ;	genIpush
                           1848 ; _saveRegsForCall: sendSetSize: 0 deInUse: 1 bcInUse: 1 deSending: 0
   0764 C5                 1849 	push	bc
   0765 D5                 1850 	push	de
   0766 7D                 1851 	ld	a,l
   0767 F5                 1852 	push	af
   0768 33                 1853 	inc	sp
                           1854 ;	genIpush
                           1855 ;	AOP_STK for _rsdecode_w1_1_1
   0769 DD 7E ED           1856 	ld	a,-19(ix)
   076C F5                 1857 	push	af
   076D 33                 1858 	inc	sp
                           1859 ;	genCall
   076E CDr00s00           1860 	call	_gfmul
   0771 45                 1861 	ld	b,l
   0772 F1                 1862 	pop	af
   0773 D1                 1863 	pop	de
   0774 78                 1864 	ld	a,b
   0775 C1                 1865 	pop	bc
   0776 47                 1866 	ld	b,a
                           1867 ;	genXor
                           1868 ;	AOP_STK for _rsdecode_w0_1_1
   0777 DD 7E EE           1869 	ld	a,-18(ix)
   077A A8                 1870 	xor	a,b
   077B 47                 1871 	ld	b,a
                           1872 ;	genIpush
                           1873 ; _saveRegsForCall: sendSetSize: 0 deInUse: 1 bcInUse: 0 deSending: 0
   077C D5                 1874 	push	de
   077D 79                 1875 	ld	a,c
   077E F5                 1876 	push	af
   077F 33                 1877 	inc	sp
                           1878 ;	genIpush
   0780 C5                 1879 	push    bc
   0781 33                 1880 	inc     sp
                           1881 ;	genCall
   0782 CDr00s00           1882 	call	_gfmul
   0785 F1                 1883 	pop	af
   0786 D1                 1884 	pop	de
                           1885 ;	genAssign
                           1886 ;	AOP_STK for _rsdecode_e0_1_1
   0787 DD 75 F3           1887 	ld	-13(ix),l
                           1888 ;ecc/rslib.c:204: e1 = gfmul (gfadd (w0, gfmul (w1, x[1])), gfinv (z[1]));
                           1889 ;	genPointerGet
   078A 1A                 1890 	ld	a,(de)
                           1891 ;	genIpush
                           1892 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   078B 6F                 1893 	ld	l,a
   078C F5                 1894 	push	af
   078D 33                 1895 	inc	sp
                           1896 ;	genCall
   078E CDr00s00           1897 	call	_gfinv
   0791 45                 1898 	ld	b,l
   0792 33                 1899 	inc	sp
                           1900 ;	genPointerGet
                           1901 ;	AOP_STK for _rsdecode__1_0
   0793 DD 6E DC           1902 	ld	l,-36(ix)
   0796 DD 66 DD           1903 	ld	h,-35(ix)
   0799 6E                 1904 	ld	l,(hl)
                           1905 ;	genIpush
                           1906 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   079A C5                 1907 	push	bc
   079B 7D                 1908 	ld	a,l
   079C F5                 1909 	push	af
   079D 33                 1910 	inc	sp
                           1911 ;	genIpush
                           1912 ;	AOP_STK for _rsdecode_w1_1_1
   079E DD 7E ED           1913 	ld	a,-19(ix)
   07A1 F5                 1914 	push	af
   07A2 33                 1915 	inc	sp
                           1916 ;	genCall
   07A3 CDr00s00           1917 	call	_gfmul
   07A6 5D                 1918 	ld	e,l
   07A7 F1                 1919 	pop	af
   07A8 C1                 1920 	pop	bc
                           1921 ;	genXor
                           1922 ;	AOP_STK for _rsdecode_w0_1_1
   07A9 DD 7E EE           1923 	ld	a,-18(ix)
   07AC AB                 1924 	xor	a,e
   07AD 5F                 1925 	ld	e,a
                           1926 ;	genIpush
                           1927 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   07AE C5                 1928 	push    bc
   07AF 33                 1929 	inc     sp
                           1930 ;	genIpush
   07B0 7B                 1931 	ld	a,e
   07B1 F5                 1932 	push	af
   07B2 33                 1933 	inc	sp
                           1934 ;	genCall
   07B3 CDr00s00           1935 	call	_gfmul
   07B6 F1                 1936 	pop	af
                           1937 ;	genAssign
                           1938 ;	AOP_STK for _rsdecode_e1_1_1
   07B7 DD 75 F2           1939 	ld	-14(ix),l
                           1940 ;ecc/rslib.c:206: if (n0 < 249)
                           1941 ;	genCmpLt
                           1942 ;	AOP_STK for _rsdecode_n0_1_1
   07BA DD 7E F1           1943 	ld	a,-15(ix)
   07BD D6 F9              1944 	sub	a,#0xF9
   07BF D2rD6s07           1945 	jp	nc,00112$
                           1946 ;ecc/rslib.c:207: mesg[n0] = gfadd (mesg[n0], e0);
                           1947 ;	genPlus
                           1948 ;	AOP_STK for 
                           1949 ;	AOP_STK for _rsdecode_n0_1_1
                           1950 ;	Can't optimise plus by inc, falling back to the normal way
   07C2 DD 7E 06           1951 	ld	a,6(ix)
   07C5 DD 86 F1           1952 	add	a,-15(ix)
   07C8 5F                 1953 	ld	e,a
   07C9 DD 7E 07           1954 	ld	a,7(ix)
   07CC CE 00              1955 	adc	a,#0x00
   07CE 57                 1956 	ld	d,a
                           1957 ;	genPointerGet
   07CF 1A                 1958 	ld	a,(de)
   07D0 47                 1959 	ld	b,a
                           1960 ;	genXor
                           1961 ;	AOP_STK for _rsdecode_e0_1_1
   07D1 DD 7E F3           1962 	ld	a,-13(ix)
   07D4 A8                 1963 	xor	a,b
                           1964 ;	genAssign (pointer)
                           1965 ;	isBitvar = 0
   07D5 12                 1966 	ld	(de),a
                           1967 ;	genLabel
   07D6                    1968 00112$:
                           1969 ;ecc/rslib.c:208: if (n1 < 249)
                           1970 ;	genCmpLt
                           1971 ;	AOP_STK for _rsdecode_n1_1_1
   07D6 DD 7E F0           1972 	ld	a,-16(ix)
   07D9 D6 F9              1973 	sub	a,#0xF9
   07DB D2rF2s07           1974 	jp	nc,00114$
                           1975 ;ecc/rslib.c:209: mesg[n1] = gfadd (mesg[n1], e1);
                           1976 ;	genPlus
                           1977 ;	AOP_STK for 
                           1978 ;	AOP_STK for _rsdecode_n1_1_1
                           1979 ;	Can't optimise plus by inc, falling back to the normal way
   07DE DD 7E 06           1980 	ld	a,6(ix)
   07E1 DD 86 F0           1981 	add	a,-16(ix)
   07E4 5F                 1982 	ld	e,a
   07E5 DD 7E 07           1983 	ld	a,7(ix)
   07E8 CE 00              1984 	adc	a,#0x00
   07EA 57                 1985 	ld	d,a
                           1986 ;	genPointerGet
   07EB 1A                 1987 	ld	a,(de)
   07EC 47                 1988 	ld	b,a
                           1989 ;	genXor
                           1990 ;	AOP_STK for _rsdecode_e1_1_1
   07ED DD 7E F2           1991 	ld	a,-14(ix)
   07F0 A8                 1992 	xor	a,b
                           1993 ;	genAssign (pointer)
                           1994 ;	isBitvar = 0
   07F1 12                 1995 	ld	(de),a
                           1996 ;	genLabel
   07F2                    1997 00114$:
                           1998 ;ecc/rslib.c:210: return;
                           1999 ;	genRet
   07F2 C3r4Es10           2000 	jp	00130$
                           2001 ;ecc/rslib.c:214: z[3] = 1;
                           2002 ;	genLabel
   07F5                    2003 00115$:
                           2004 ;	genAddrOf
                           2005 ;	AOP_STK for _rsdecode__1_0
   07F5 21 20 00           2006 	ld	hl,#0x0020
   07F8 39                 2007 	add	hl,sp
   07F9 DD 75 DC           2008 	ld	-36(ix),l
   07FC DD 74 DD           2009 	ld	-35(ix),h
                           2010 ;	genPlus
                           2011 ;	AOP_STK for _rsdecode__1_0
                           2012 ;	genPlusIncr
                           2013 ;	Can't optimise plus by inc, falling back to the normal way
   07FF DD 7E DC           2014 	ld	a,-36(ix)
   0802 C6 03              2015 	add	a,#0x03
   0804 6F                 2016 	ld	l,a
   0805 DD 7E DD           2017 	ld	a,-35(ix)
   0808 CE 00              2018 	adc	a,#0x00
   080A 67                 2019 	ld	h,a
                           2020 ;	genAssign (pointer)
                           2021 ;	isBitvar = 0
   080B 36 01              2022 	ld	(hl),#0x01
                           2023 ;ecc/rslib.c:215: z[2] = gfmul (syn[1], gfmul (syn[4], syn[6]));
                           2024 ;	genPlus
                           2025 ;	AOP_STK for _rsdecode__1_0
                           2026 ;	AOP_STK for _rsdecode__1_0
                           2027 ;	genPlusIncr
                           2028 ;	Can't optimise plus by inc, falling back to the normal way
   080D DD 7E DC           2029 	ld	a,-36(ix)
   0810 C6 02              2030 	add	a,#0x02
   0812 DD 77 DA           2031 	ld	-38(ix),a
   0815 DD 7E DD           2032 	ld	a,-35(ix)
   0818 CE 00              2033 	adc	a,#0x00
   081A DD 77 DB           2034 	ld	-37(ix),a
                           2035 ;	genPlus
                           2036 ;	AOP_STK for _rsdecode__1_0
                           2037 ;	AOP_STK for _rsdecode__1_0
                           2038 ;	genPlusIncr
                           2039 ;	Can't optimise plus by inc, falling back to the normal way
   081D DD 7E E0           2040 	ld	a,-32(ix)
   0820 C6 06              2041 	add	a,#0x06
   0822 DD 77 E3           2042 	ld	-29(ix),a
   0825 DD 7E E1           2043 	ld	a,-31(ix)
   0828 CE 00              2044 	adc	a,#0x00
   082A DD 77 E4           2045 	ld	-28(ix),a
                           2046 ;	genPointerGet
                           2047 ;	AOP_STK for _rsdecode__1_0
   082D DD 6E E3           2048 	ld	l,-29(ix)
   0830 DD 66 E4           2049 	ld	h,-28(ix)
   0833 46                 2050 	ld	b,(hl)
                           2051 ;	genPlus
                           2052 ;	AOP_STK for _rsdecode__1_0
                           2053 ;	AOP_STK for _rsdecode__1_0
                           2054 ;	genPlusIncr
                           2055 ;	Can't optimise plus by inc, falling back to the normal way
   0834 DD 7E E0           2056 	ld	a,-32(ix)
   0837 C6 04              2057 	add	a,#0x04
   0839 DD 77 D4           2058 	ld	-44(ix),a
   083C DD 7E E1           2059 	ld	a,-31(ix)
   083F CE 00              2060 	adc	a,#0x00
   0841 DD 77 D5           2061 	ld	-43(ix),a
                           2062 ;	genPointerGet
                           2063 ;	AOP_STK for _rsdecode__1_0
   0844 DD 6E D4           2064 	ld	l,-44(ix)
   0847 DD 66 D5           2065 	ld	h,-43(ix)
   084A 4E                 2066 	ld	c,(hl)
                           2067 ;	genIpush
                           2068 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   084B C5                 2069 	push    bc
   084C 33                 2070 	inc     sp
                           2071 ;	genIpush
   084D 79                 2072 	ld	a,c
   084E F5                 2073 	push	af
   084F 33                 2074 	inc	sp
                           2075 ;	genCall
   0850 CDr00s00           2076 	call	_gfmul
   0853 4D                 2077 	ld	c,l
   0854 F1                 2078 	pop	af
                           2079 ;	genPlus
                           2080 ;	AOP_STK for _rsdecode__1_0
                           2081 ;	AOP_STK for _rsdecode__1_0
                           2082 ;	genPlusIncr
                           2083 ;	Can't optimise plus by inc, falling back to the normal way
   0855 DD 7E E0           2084 	ld	a,-32(ix)
   0858 C6 01              2085 	add	a,#0x01
   085A DD 77 DE           2086 	ld	-34(ix),a
   085D DD 7E E1           2087 	ld	a,-31(ix)
   0860 CE 00              2088 	adc	a,#0x00
   0862 DD 77 DF           2089 	ld	-33(ix),a
                           2090 ;	genPointerGet
                           2091 ;	AOP_STK for _rsdecode__1_0
   0865 DD 6E DE           2092 	ld	l,-34(ix)
   0868 DD 66 DF           2093 	ld	h,-33(ix)
   086B 46                 2094 	ld	b,(hl)
                           2095 ;	genIpush
                           2096 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   086C 79                 2097 	ld	a,c
   086D F5                 2098 	push	af
   086E 33                 2099 	inc	sp
                           2100 ;	genIpush
   086F C5                 2101 	push    bc
   0870 33                 2102 	inc     sp
                           2103 ;	genCall
   0871 CDr00s00           2104 	call	_gfmul
   0874 5D                 2105 	ld	e,l
   0875 F1                 2106 	pop	af
                           2107 ;	genAssign (pointer)
                           2108 ;	AOP_STK for _rsdecode__1_0
                           2109 ;	isBitvar = 0
   0876 DD 6E DA           2110 	ld	l,-38(ix)
   0879 DD 66 DB           2111 	ld	h,-37(ix)
   087C 73                 2112 	ld	(hl),e
                           2113 ;ecc/rslib.c:216: z[2] = gfadd (z[2], gfmul (syn[1], gfmul (syn[5], syn[5])));
                           2114 ;	genPlus
                           2115 ;	AOP_STK for _rsdecode__1_0
                           2116 ;	AOP_STK for _rsdecode__1_0
                           2117 ;	genPlusIncr
                           2118 ;	Can't optimise plus by inc, falling back to the normal way
   087D DD 7E E0           2119 	ld	a,-32(ix)
   0880 C6 05              2120 	add	a,#0x05
   0882 DD 77 D8           2121 	ld	-40(ix),a
   0885 DD 7E E1           2122 	ld	a,-31(ix)
   0888 CE 00              2123 	adc	a,#0x00
   088A DD 77 D9           2124 	ld	-39(ix),a
                           2125 ;	genPointerGet
                           2126 ;	AOP_STK for _rsdecode__1_0
   088D DD 6E D8           2127 	ld	l,-40(ix)
   0890 DD 66 D9           2128 	ld	h,-39(ix)
   0893 6E                 2129 	ld	l,(hl)
                           2130 ;	genIpush
                           2131 ; _saveRegsForCall: sendSetSize: 0 deInUse: 1 bcInUse: 0 deSending: 0
   0894 D5                 2132 	push	de
   0895 7D                 2133 	ld	a,l
   0896 F5                 2134 	push	af
   0897 33                 2135 	inc	sp
                           2136 ;	genIpush
   0898 7D                 2137 	ld	a,l
   0899 F5                 2138 	push	af
   089A 33                 2139 	inc	sp
                           2140 ;	genCall
   089B CDr00s00           2141 	call	_gfmul
   089E 4D                 2142 	ld	c,l
   089F F1                 2143 	pop	af
   08A0 D1                 2144 	pop	de
                           2145 ;	genPointerGet
                           2146 ;	AOP_STK for _rsdecode__1_0
   08A1 DD 6E DE           2147 	ld	l,-34(ix)
   08A4 DD 66 DF           2148 	ld	h,-33(ix)
   08A7 46                 2149 	ld	b,(hl)
                           2150 ;	genIpush
                           2151 ; _saveRegsForCall: sendSetSize: 0 deInUse: 1 bcInUse: 0 deSending: 0
   08A8 D5                 2152 	push	de
   08A9 79                 2153 	ld	a,c
   08AA F5                 2154 	push	af
   08AB 33                 2155 	inc	sp
                           2156 ;	genIpush
   08AC C5                 2157 	push    bc
   08AD 33                 2158 	inc     sp
                           2159 ;	genCall
   08AE CDr00s00           2160 	call	_gfmul
   08B1 4D                 2161 	ld	c,l
   08B2 F1                 2162 	pop	af
   08B3 D1                 2163 	pop	de
                           2164 ;	genXor
   08B4 7B                 2165 	ld	a,e
   08B5 A9                 2166 	xor	a,c
   08B6 4F                 2167 	ld	c,a
                           2168 ;	genAssign (pointer)
                           2169 ;	AOP_STK for _rsdecode__1_0
                           2170 ;	isBitvar = 0
   08B7 DD 6E DA           2171 	ld	l,-38(ix)
   08BA DD 66 DB           2172 	ld	h,-37(ix)
   08BD 71                 2173 	ld	(hl),c
                           2174 ;ecc/rslib.c:217: z[2] = gfadd (z[2], gfmul (syn[5], gfmul (syn[3], syn[3])));
                           2175 ;	genPlus
                           2176 ;	AOP_STK for _rsdecode__1_0
                           2177 ;	AOP_STK for _rsdecode__1_0
                           2178 ;	genPlusIncr
                           2179 ;	Can't optimise plus by inc, falling back to the normal way
   08BE DD 7E E0           2180 	ld	a,-32(ix)
   08C1 C6 03              2181 	add	a,#0x03
   08C3 DD 77 D6           2182 	ld	-42(ix),a
   08C6 DD 7E E1           2183 	ld	a,-31(ix)
   08C9 CE 00              2184 	adc	a,#0x00
   08CB DD 77 D7           2185 	ld	-41(ix),a
                           2186 ;	genPointerGet
                           2187 ;	AOP_STK for _rsdecode__1_0
   08CE DD 6E D6           2188 	ld	l,-42(ix)
   08D1 DD 66 D7           2189 	ld	h,-41(ix)
   08D4 6E                 2190 	ld	l,(hl)
                           2191 ;	genIpush
                           2192 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   08D5 C5                 2193 	push	bc
   08D6 7D                 2194 	ld	a,l
   08D7 F5                 2195 	push	af
   08D8 33                 2196 	inc	sp
                           2197 ;	genIpush
   08D9 7D                 2198 	ld	a,l
   08DA F5                 2199 	push	af
   08DB 33                 2200 	inc	sp
                           2201 ;	genCall
   08DC CDr00s00           2202 	call	_gfmul
   08DF 5D                 2203 	ld	e,l
   08E0 F1                 2204 	pop	af
   08E1 C1                 2205 	pop	bc
                           2206 ;	genPointerGet
                           2207 ;	AOP_STK for _rsdecode__1_0
   08E2 DD 6E D8           2208 	ld	l,-40(ix)
   08E5 DD 66 D9           2209 	ld	h,-39(ix)
   08E8 46                 2210 	ld	b,(hl)
                           2211 ;	genIpush
                           2212 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   08E9 C5                 2213 	push	bc
   08EA 7B                 2214 	ld	a,e
   08EB F5                 2215 	push	af
   08EC 33                 2216 	inc	sp
                           2217 ;	genIpush
   08ED C5                 2218 	push    bc
   08EE 33                 2219 	inc     sp
                           2220 ;	genCall
   08EF CDr00s00           2221 	call	_gfmul
   08F2 45                 2222 	ld	b,l
   08F3 F1                 2223 	pop	af
   08F4 78                 2224 	ld	a,b
   08F5 C1                 2225 	pop	bc
                           2226 ;	genXor
   08F6 47                 2227 	ld	b,a
   08F7 A9                 2228 	xor	a,c
   08F8 4F                 2229 	ld	c,a
                           2230 ;	genAssign (pointer)
                           2231 ;	AOP_STK for _rsdecode__1_0
                           2232 ;	isBitvar = 0
   08F9 DD 6E DA           2233 	ld	l,-38(ix)
   08FC DD 66 DB           2234 	ld	h,-37(ix)
   08FF 71                 2235 	ld	(hl),c
                           2236 ;ecc/rslib.c:218: z[2] = gfadd (z[2], gfmul (syn[3], gfmul (syn[4], syn[4])));
                           2237 ;	genPointerGet
                           2238 ;	AOP_STK for _rsdecode__1_0
   0900 DD 6E D4           2239 	ld	l,-44(ix)
   0903 DD 66 D5           2240 	ld	h,-43(ix)
   0906 6E                 2241 	ld	l,(hl)
                           2242 ;	genIpush
                           2243 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0907 C5                 2244 	push	bc
   0908 7D                 2245 	ld	a,l
   0909 F5                 2246 	push	af
   090A 33                 2247 	inc	sp
                           2248 ;	genIpush
   090B 7D                 2249 	ld	a,l
   090C F5                 2250 	push	af
   090D 33                 2251 	inc	sp
                           2252 ;	genCall
   090E CDr00s00           2253 	call	_gfmul
   0911 5D                 2254 	ld	e,l
   0912 F1                 2255 	pop	af
   0913 C1                 2256 	pop	bc
                           2257 ;	genPointerGet
                           2258 ;	AOP_STK for _rsdecode__1_0
   0914 DD 6E D6           2259 	ld	l,-42(ix)
   0917 DD 66 D7           2260 	ld	h,-41(ix)
   091A 46                 2261 	ld	b,(hl)
                           2262 ;	genIpush
                           2263 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   091B C5                 2264 	push	bc
   091C 7B                 2265 	ld	a,e
   091D F5                 2266 	push	af
   091E 33                 2267 	inc	sp
                           2268 ;	genIpush
   091F C5                 2269 	push    bc
   0920 33                 2270 	inc     sp
                           2271 ;	genCall
   0921 CDr00s00           2272 	call	_gfmul
   0924 45                 2273 	ld	b,l
   0925 F1                 2274 	pop	af
   0926 78                 2275 	ld	a,b
   0927 C1                 2276 	pop	bc
                           2277 ;	genXor
   0928 47                 2278 	ld	b,a
   0929 A9                 2279 	xor	a,c
   092A 4F                 2280 	ld	c,a
                           2281 ;	genAssign (pointer)
                           2282 ;	AOP_STK for _rsdecode__1_0
                           2283 ;	isBitvar = 0
   092B DD 6E DA           2284 	ld	l,-38(ix)
   092E DD 66 DB           2285 	ld	h,-37(ix)
   0931 71                 2286 	ld	(hl),c
                           2287 ;ecc/rslib.c:219: z[2] = gfadd (z[2], gfmul (syn[2], gfmul (syn[5], syn[4])));
                           2288 ;	genPointerGet
                           2289 ;	AOP_STK for _rsdecode__1_0
   0932 DD 6E D4           2290 	ld	l,-44(ix)
   0935 DD 66 D5           2291 	ld	h,-43(ix)
   0938 5E                 2292 	ld	e,(hl)
                           2293 ;	genPointerGet
                           2294 ;	AOP_STK for _rsdecode__1_0
   0939 DD 6E D8           2295 	ld	l,-40(ix)
   093C DD 66 D9           2296 	ld	h,-39(ix)
   093F 46                 2297 	ld	b,(hl)
                           2298 ;	genIpush
                           2299 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0940 C5                 2300 	push	bc
   0941 7B                 2301 	ld	a,e
   0942 F5                 2302 	push	af
   0943 33                 2303 	inc	sp
                           2304 ;	genIpush
   0944 C5                 2305 	push    bc
   0945 33                 2306 	inc     sp
                           2307 ;	genCall
   0946 CDr00s00           2308 	call	_gfmul
   0949 5D                 2309 	ld	e,l
   094A F1                 2310 	pop	af
   094B C1                 2311 	pop	bc
                           2312 ;	genPlus
                           2313 ;	AOP_STK for _rsdecode__1_0
                           2314 ;	genPlusIncr
                           2315 ;	Can't optimise plus by inc, falling back to the normal way
   094C DD 7E E0           2316 	ld	a,-32(ix)
   094F C6 02              2317 	add	a,#0x02
   0951 DD 77 E0           2318 	ld	-32(ix),a
   0954 DD 7E E1           2319 	ld	a,-31(ix)
   0957 CE 00              2320 	adc	a,#0x00
   0959 DD 77 E1           2321 	ld	-31(ix),a
                           2322 ;	genPointerGet
                           2323 ;	AOP_STK for _rsdecode__1_0
   095C DD 6E E0           2324 	ld	l,-32(ix)
   095F DD 66 E1           2325 	ld	h,-31(ix)
   0962 46                 2326 	ld	b,(hl)
                           2327 ;	genIpush
                           2328 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0963 C5                 2329 	push	bc
   0964 7B                 2330 	ld	a,e
   0965 F5                 2331 	push	af
   0966 33                 2332 	inc	sp
                           2333 ;	genIpush
   0967 C5                 2334 	push    bc
   0968 33                 2335 	inc     sp
                           2336 ;	genCall
   0969 CDr00s00           2337 	call	_gfmul
   096C 45                 2338 	ld	b,l
   096D F1                 2339 	pop	af
   096E 78                 2340 	ld	a,b
   096F C1                 2341 	pop	bc
                           2342 ;	genXor
   0970 47                 2343 	ld	b,a
   0971 A9                 2344 	xor	a,c
   0972 4F                 2345 	ld	c,a
                           2346 ;	genAssign (pointer)
                           2347 ;	AOP_STK for _rsdecode__1_0
                           2348 ;	isBitvar = 0
   0973 DD 6E DA           2349 	ld	l,-38(ix)
   0976 DD 66 DB           2350 	ld	h,-37(ix)
   0979 71                 2351 	ld	(hl),c
                           2352 ;ecc/rslib.c:220: z[2] = gfadd (z[2], gfmul (syn[2], gfmul (syn[3], syn[6])));
                           2353 ;	genPointerGet
                           2354 ;	AOP_STK for _rsdecode__1_0
   097A DD 6E E3           2355 	ld	l,-29(ix)
   097D DD 66 E4           2356 	ld	h,-28(ix)
   0980 5E                 2357 	ld	e,(hl)
                           2358 ;	genPointerGet
                           2359 ;	AOP_STK for _rsdecode__1_0
   0981 DD 6E D6           2360 	ld	l,-42(ix)
   0984 DD 66 D7           2361 	ld	h,-41(ix)
   0987 46                 2362 	ld	b,(hl)
                           2363 ;	genIpush
                           2364 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0988 C5                 2365 	push	bc
   0989 7B                 2366 	ld	a,e
   098A F5                 2367 	push	af
   098B 33                 2368 	inc	sp
                           2369 ;	genIpush
   098C C5                 2370 	push    bc
   098D 33                 2371 	inc     sp
                           2372 ;	genCall
   098E CDr00s00           2373 	call	_gfmul
   0991 5D                 2374 	ld	e,l
   0992 F1                 2375 	pop	af
   0993 C1                 2376 	pop	bc
                           2377 ;	genPointerGet
                           2378 ;	AOP_STK for _rsdecode__1_0
   0994 DD 6E E0           2379 	ld	l,-32(ix)
   0997 DD 66 E1           2380 	ld	h,-31(ix)
   099A 46                 2381 	ld	b,(hl)
                           2382 ;	genIpush
                           2383 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   099B C5                 2384 	push	bc
   099C 7B                 2385 	ld	a,e
   099D F5                 2386 	push	af
   099E 33                 2387 	inc	sp
                           2388 ;	genIpush
   099F C5                 2389 	push    bc
   09A0 33                 2390 	inc     sp
                           2391 ;	genCall
   09A1 CDr00s00           2392 	call	_gfmul
   09A4 45                 2393 	ld	b,l
   09A5 F1                 2394 	pop	af
   09A6 78                 2395 	ld	a,b
   09A7 C1                 2396 	pop	bc
                           2397 ;	genXor
   09A8 47                 2398 	ld	b,a
   09A9 A9                 2399 	xor	a,c
   09AA 4F                 2400 	ld	c,a
                           2401 ;	genAssign (pointer)
                           2402 ;	AOP_STK for _rsdecode__1_0
                           2403 ;	isBitvar = 0
   09AB DD 6E DA           2404 	ld	l,-38(ix)
   09AE DD 66 DB           2405 	ld	h,-37(ix)
   09B1 71                 2406 	ld	(hl),c
                           2407 ;ecc/rslib.c:221: z[2] = gfmul (z[2], gfinv (deter));
                           2408 ;	genIpush
                           2409 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   09B2 C5                 2410 	push	bc
                           2411 ;	AOP_STK for _rsdecode_deter_1_1
   09B3 DD 7E F8           2412 	ld	a,-8(ix)
   09B6 F5                 2413 	push	af
   09B7 33                 2414 	inc	sp
                           2415 ;	genCall
   09B8 CDr00s00           2416 	call	_gfinv
   09BB 33                 2417 	inc	sp
   09BC C1                 2418 	pop	bc
                           2419 ;	genIpush
                           2420 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   09BD 7D                 2421 	ld	a,l
   09BE F5                 2422 	push	af
   09BF 33                 2423 	inc	sp
                           2424 ;	genIpush
   09C0 79                 2425 	ld	a,c
   09C1 F5                 2426 	push	af
   09C2 33                 2427 	inc	sp
                           2428 ;	genCall
   09C3 CDr00s00           2429 	call	_gfmul
   09C6 4D                 2430 	ld	c,l
   09C7 F1                 2431 	pop	af
                           2432 ;	genAssign (pointer)
                           2433 ;	AOP_STK for _rsdecode__1_0
                           2434 ;	isBitvar = 0
   09C8 DD 6E DA           2435 	ld	l,-38(ix)
   09CB DD 66 DB           2436 	ld	h,-37(ix)
   09CE 71                 2437 	ld	(hl),c
                           2438 ;ecc/rslib.c:223: z[1] = gfmul (syn[1], gfmul (syn[3], syn[6]));
                           2439 ;	genPlus
                           2440 ;	AOP_STK for _rsdecode__1_0
                           2441 ;	genPlusIncr
   09CF DD 4E DC           2442 	ld	c,-36(ix)
   09D2 DD 46 DD           2443 	ld	b,-35(ix)
   09D5 03                 2444 	inc	bc
                           2445 ;	genPointerGet
                           2446 ;	AOP_STK for _rsdecode__1_0
   09D6 DD 6E E3           2447 	ld	l,-29(ix)
   09D9 DD 66 E4           2448 	ld	h,-28(ix)
   09DC 5E                 2449 	ld	e,(hl)
                           2450 ;	genPointerGet
                           2451 ;	AOP_STK for _rsdecode__1_0
   09DD DD 6E D6           2452 	ld	l,-42(ix)
   09E0 DD 66 D7           2453 	ld	h,-41(ix)
   09E3 56                 2454 	ld	d,(hl)
                           2455 ;	genIpush
                           2456 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   09E4 C5                 2457 	push	bc
   09E5 7B                 2458 	ld	a,e
   09E6 F5                 2459 	push	af
   09E7 33                 2460 	inc	sp
                           2461 ;	genIpush
   09E8 D5                 2462 	push    de
   09E9 33                 2463 	inc     sp
                           2464 ;	genCall
   09EA CDr00s00           2465 	call	_gfmul
   09ED 5D                 2466 	ld	e,l
   09EE F1                 2467 	pop	af
   09EF C1                 2468 	pop	bc
                           2469 ;	genPointerGet
                           2470 ;	AOP_STK for _rsdecode__1_0
   09F0 DD 6E DE           2471 	ld	l,-34(ix)
   09F3 DD 66 DF           2472 	ld	h,-33(ix)
   09F6 56                 2473 	ld	d,(hl)
                           2474 ;	genIpush
                           2475 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   09F7 C5                 2476 	push	bc
   09F8 7B                 2477 	ld	a,e
   09F9 F5                 2478 	push	af
   09FA 33                 2479 	inc	sp
                           2480 ;	genIpush
   09FB D5                 2481 	push    de
   09FC 33                 2482 	inc     sp
                           2483 ;	genCall
   09FD CDr00s00           2484 	call	_gfmul
   0A00 5D                 2485 	ld	e,l
   0A01 F1                 2486 	pop	af
   0A02 C1                 2487 	pop	bc
                           2488 ;	genAssign (pointer)
                           2489 ;	isBitvar = 0
   0A03 7B                 2490 	ld	a,e
   0A04 02                 2491 	ld	(bc),a
                           2492 ;ecc/rslib.c:224: z[1] = gfadd (z[1], gfmul (syn[1], gfmul (syn[5], syn[4])));
                           2493 ;	genPointerGet
                           2494 ;	AOP_STK for _rsdecode__1_0
                           2495 ;	AOP_STK for _rsdecode__1_0
   0A05 DD 6E D4           2496 	ld	l,-44(ix)
   0A08 DD 66 D5           2497 	ld	h,-43(ix)
   0A0B 7E                 2498 	ld	a,(hl)
   0A0C DD 77 E2           2499 	ld	-30(ix),a
                           2500 ;	genPointerGet
                           2501 ;	AOP_STK for _rsdecode__1_0
   0A0F DD 6E D8           2502 	ld	l,-40(ix)
   0A12 DD 66 D9           2503 	ld	h,-39(ix)
   0A15 56                 2504 	ld	d,(hl)
                           2505 ;	genIpush
                           2506 ; _saveRegsForCall: sendSetSize: 0 deInUse: 1 bcInUse: 1 deSending: 0
   0A16 C5                 2507 	push	bc
   0A17 D5                 2508 	push	de
                           2509 ;	AOP_STK for _rsdecode__1_0
   0A18 DD 7E E2           2510 	ld	a,-30(ix)
   0A1B F5                 2511 	push	af
   0A1C 33                 2512 	inc	sp
                           2513 ;	genIpush
   0A1D D5                 2514 	push    de
   0A1E 33                 2515 	inc     sp
                           2516 ;	genCall
   0A1F CDr00s00           2517 	call	_gfmul
                           2518 ;	AOP_STK for _rsdecode__1_0
   0A22 DD 75 E2           2519 	ld	-30(ix),l
   0A25 F1                 2520 	pop	af
   0A26 D1                 2521 	pop	de
   0A27 C1                 2522 	pop	bc
                           2523 ;	genPointerGet
                           2524 ;	AOP_STK for _rsdecode__1_0
   0A28 DD 6E DE           2525 	ld	l,-34(ix)
   0A2B DD 66 DF           2526 	ld	h,-33(ix)
   0A2E 56                 2527 	ld	d,(hl)
                           2528 ;	genIpush
                           2529 ; _saveRegsForCall: sendSetSize: 0 deInUse: 1 bcInUse: 1 deSending: 0
   0A2F C5                 2530 	push	bc
   0A30 D5                 2531 	push	de
                           2532 ;	AOP_STK for _rsdecode__1_0
   0A31 DD 7E E2           2533 	ld	a,-30(ix)
   0A34 F5                 2534 	push	af
   0A35 33                 2535 	inc	sp
                           2536 ;	genIpush
   0A36 D5                 2537 	push    de
   0A37 33                 2538 	inc     sp
                           2539 ;	genCall
   0A38 CDr00s00           2540 	call	_gfmul
   0A3B 55                 2541 	ld	d,l
   0A3C F1                 2542 	pop	af
   0A3D 7A                 2543 	ld	a,d
   0A3E D1                 2544 	pop	de
   0A3F 57                 2545 	ld	d,a
   0A40 C1                 2546 	pop	bc
                           2547 ;	genXor
   0A41 7A                 2548 	ld	a,d
   0A42 AB                 2549 	xor	a,e
                           2550 ;	genAssign (pointer)
                           2551 ;	isBitvar = 0
   0A43 5F                 2552 	ld	e,a
   0A44 02                 2553 	ld	(bc),a
                           2554 ;ecc/rslib.c:225: z[1] = gfadd (z[1], gfmul (syn[4], gfmul (syn[3], syn[3])));
                           2555 ;	genPointerGet
                           2556 ;	AOP_STK for _rsdecode__1_0
   0A45 DD 6E D6           2557 	ld	l,-42(ix)
   0A48 DD 66 D7           2558 	ld	h,-41(ix)
   0A4B 6E                 2559 	ld	l,(hl)
                           2560 ;	genIpush
                           2561 ; _saveRegsForCall: sendSetSize: 0 deInUse: 1 bcInUse: 1 deSending: 0
   0A4C C5                 2562 	push	bc
   0A4D D5                 2563 	push	de
   0A4E 7D                 2564 	ld	a,l
   0A4F F5                 2565 	push	af
   0A50 33                 2566 	inc	sp
                           2567 ;	genIpush
   0A51 7D                 2568 	ld	a,l
   0A52 F5                 2569 	push	af
   0A53 33                 2570 	inc	sp
                           2571 ;	genCall
   0A54 CDr00s00           2572 	call	_gfmul
                           2573 ;	AOP_STK for _rsdecode__1_0
   0A57 DD 75 E2           2574 	ld	-30(ix),l
   0A5A F1                 2575 	pop	af
   0A5B D1                 2576 	pop	de
   0A5C C1                 2577 	pop	bc
                           2578 ;	genPointerGet
                           2579 ;	AOP_STK for _rsdecode__1_0
   0A5D DD 6E D4           2580 	ld	l,-44(ix)
   0A60 DD 66 D5           2581 	ld	h,-43(ix)
   0A63 56                 2582 	ld	d,(hl)
                           2583 ;	genIpush
                           2584 ; _saveRegsForCall: sendSetSize: 0 deInUse: 1 bcInUse: 1 deSending: 0
   0A64 C5                 2585 	push	bc
   0A65 D5                 2586 	push	de
                           2587 ;	AOP_STK for _rsdecode__1_0
   0A66 DD 7E E2           2588 	ld	a,-30(ix)
   0A69 F5                 2589 	push	af
   0A6A 33                 2590 	inc	sp
                           2591 ;	genIpush
   0A6B D5                 2592 	push    de
   0A6C 33                 2593 	inc     sp
                           2594 ;	genCall
   0A6D CDr00s00           2595 	call	_gfmul
   0A70 55                 2596 	ld	d,l
   0A71 F1                 2597 	pop	af
   0A72 7A                 2598 	ld	a,d
   0A73 D1                 2599 	pop	de
   0A74 57                 2600 	ld	d,a
   0A75 C1                 2601 	pop	bc
                           2602 ;	genXor
   0A76 7A                 2603 	ld	a,d
   0A77 AB                 2604 	xor	a,e
                           2605 ;	genAssign (pointer)
                           2606 ;	isBitvar = 0
   0A78 5F                 2607 	ld	e,a
   0A79 02                 2608 	ld	(bc),a
                           2609 ;ecc/rslib.c:226: z[1] = gfadd (z[1], gfmul (syn[2], gfmul (syn[4], syn[4])));
                           2610 ;	genPointerGet
                           2611 ;	AOP_STK for _rsdecode__1_0
   0A7A DD 6E D4           2612 	ld	l,-44(ix)
   0A7D DD 66 D5           2613 	ld	h,-43(ix)
   0A80 6E                 2614 	ld	l,(hl)
                           2615 ;	genIpush
                           2616 ; _saveRegsForCall: sendSetSize: 0 deInUse: 1 bcInUse: 1 deSending: 0
   0A81 C5                 2617 	push	bc
   0A82 D5                 2618 	push	de
   0A83 7D                 2619 	ld	a,l
   0A84 F5                 2620 	push	af
   0A85 33                 2621 	inc	sp
                           2622 ;	genIpush
   0A86 7D                 2623 	ld	a,l
   0A87 F5                 2624 	push	af
   0A88 33                 2625 	inc	sp
                           2626 ;	genCall
   0A89 CDr00s00           2627 	call	_gfmul
                           2628 ;	AOP_STK for _rsdecode__1_0
   0A8C DD 75 E2           2629 	ld	-30(ix),l
   0A8F F1                 2630 	pop	af
   0A90 D1                 2631 	pop	de
   0A91 C1                 2632 	pop	bc
                           2633 ;	genPointerGet
                           2634 ;	AOP_STK for _rsdecode__1_0
   0A92 DD 6E E0           2635 	ld	l,-32(ix)
   0A95 DD 66 E1           2636 	ld	h,-31(ix)
   0A98 56                 2637 	ld	d,(hl)
                           2638 ;	genIpush
                           2639 ; _saveRegsForCall: sendSetSize: 0 deInUse: 1 bcInUse: 1 deSending: 0
   0A99 C5                 2640 	push	bc
   0A9A D5                 2641 	push	de
                           2642 ;	AOP_STK for _rsdecode__1_0
   0A9B DD 7E E2           2643 	ld	a,-30(ix)
   0A9E F5                 2644 	push	af
   0A9F 33                 2645 	inc	sp
                           2646 ;	genIpush
   0AA0 D5                 2647 	push    de
   0AA1 33                 2648 	inc     sp
                           2649 ;	genCall
   0AA2 CDr00s00           2650 	call	_gfmul
   0AA5 55                 2651 	ld	d,l
   0AA6 F1                 2652 	pop	af
   0AA7 7A                 2653 	ld	a,d
   0AA8 D1                 2654 	pop	de
   0AA9 57                 2655 	ld	d,a
   0AAA C1                 2656 	pop	bc
                           2657 ;	genXor
   0AAB 7A                 2658 	ld	a,d
   0AAC AB                 2659 	xor	a,e
                           2660 ;	genAssign (pointer)
                           2661 ;	isBitvar = 0
   0AAD 5F                 2662 	ld	e,a
   0AAE 02                 2663 	ld	(bc),a
                           2664 ;ecc/rslib.c:227: z[1] = gfadd (z[1], gfmul (syn[2], gfmul (syn[3], syn[5])));
                           2665 ;	genPointerGet
                           2666 ;	AOP_STK for _rsdecode__1_0
                           2667 ;	AOP_STK for _rsdecode__1_0
   0AAF DD 6E D8           2668 	ld	l,-40(ix)
   0AB2 DD 66 D9           2669 	ld	h,-39(ix)
   0AB5 7E                 2670 	ld	a,(hl)
   0AB6 DD 77 E2           2671 	ld	-30(ix),a
                           2672 ;	genPointerGet
                           2673 ;	AOP_STK for _rsdecode__1_0
   0AB9 DD 6E D6           2674 	ld	l,-42(ix)
   0ABC DD 66 D7           2675 	ld	h,-41(ix)
   0ABF 56                 2676 	ld	d,(hl)
                           2677 ;	genIpush
                           2678 ; _saveRegsForCall: sendSetSize: 0 deInUse: 1 bcInUse: 1 deSending: 0
   0AC0 C5                 2679 	push	bc
   0AC1 D5                 2680 	push	de
                           2681 ;	AOP_STK for _rsdecode__1_0
   0AC2 DD 7E E2           2682 	ld	a,-30(ix)
   0AC5 F5                 2683 	push	af
   0AC6 33                 2684 	inc	sp
                           2685 ;	genIpush
   0AC7 D5                 2686 	push    de
   0AC8 33                 2687 	inc     sp
                           2688 ;	genCall
   0AC9 CDr00s00           2689 	call	_gfmul
                           2690 ;	AOP_STK for _rsdecode__1_0
   0ACC DD 75 E2           2691 	ld	-30(ix),l
   0ACF F1                 2692 	pop	af
   0AD0 D1                 2693 	pop	de
   0AD1 C1                 2694 	pop	bc
                           2695 ;	genPointerGet
                           2696 ;	AOP_STK for _rsdecode__1_0
   0AD2 DD 6E E0           2697 	ld	l,-32(ix)
   0AD5 DD 66 E1           2698 	ld	h,-31(ix)
   0AD8 56                 2699 	ld	d,(hl)
                           2700 ;	genIpush
                           2701 ; _saveRegsForCall: sendSetSize: 0 deInUse: 1 bcInUse: 1 deSending: 0
   0AD9 C5                 2702 	push	bc
   0ADA D5                 2703 	push	de
                           2704 ;	AOP_STK for _rsdecode__1_0
   0ADB DD 7E E2           2705 	ld	a,-30(ix)
   0ADE F5                 2706 	push	af
   0ADF 33                 2707 	inc	sp
                           2708 ;	genIpush
   0AE0 D5                 2709 	push    de
   0AE1 33                 2710 	inc     sp
                           2711 ;	genCall
   0AE2 CDr00s00           2712 	call	_gfmul
   0AE5 55                 2713 	ld	d,l
   0AE6 F1                 2714 	pop	af
   0AE7 7A                 2715 	ld	a,d
   0AE8 D1                 2716 	pop	de
   0AE9 57                 2717 	ld	d,a
   0AEA C1                 2718 	pop	bc
                           2719 ;	genXor
   0AEB 7A                 2720 	ld	a,d
   0AEC AB                 2721 	xor	a,e
                           2722 ;	genAssign (pointer)
                           2723 ;	isBitvar = 0
   0AED 5F                 2724 	ld	e,a
   0AEE 02                 2725 	ld	(bc),a
                           2726 ;ecc/rslib.c:228: z[1] = gfadd (z[1], gfmul (syn[2], gfmul (syn[2], syn[6])));
                           2727 ;	genPointerGet
                           2728 ;	AOP_STK for _rsdecode__1_0
                           2729 ;	AOP_STK for _rsdecode__1_0
   0AEF DD 6E E3           2730 	ld	l,-29(ix)
   0AF2 DD 66 E4           2731 	ld	h,-28(ix)
   0AF5 7E                 2732 	ld	a,(hl)
   0AF6 DD 77 E2           2733 	ld	-30(ix),a
                           2734 ;	genPointerGet
                           2735 ;	AOP_STK for _rsdecode__1_0
   0AF9 DD 6E E0           2736 	ld	l,-32(ix)
   0AFC DD 66 E1           2737 	ld	h,-31(ix)
   0AFF 56                 2738 	ld	d,(hl)
                           2739 ;	genIpush
                           2740 ; _saveRegsForCall: sendSetSize: 0 deInUse: 1 bcInUse: 1 deSending: 0
   0B00 C5                 2741 	push	bc
   0B01 D5                 2742 	push	de
                           2743 ;	AOP_STK for _rsdecode__1_0
   0B02 DD 7E E2           2744 	ld	a,-30(ix)
   0B05 F5                 2745 	push	af
   0B06 33                 2746 	inc	sp
                           2747 ;	genIpush
   0B07 D5                 2748 	push    de
   0B08 33                 2749 	inc     sp
                           2750 ;	genCall
   0B09 CDr00s00           2751 	call	_gfmul
                           2752 ;	AOP_STK for _rsdecode__1_0
   0B0C DD 75 E2           2753 	ld	-30(ix),l
   0B0F F1                 2754 	pop	af
   0B10 D1                 2755 	pop	de
   0B11 C1                 2756 	pop	bc
                           2757 ;	genPointerGet
                           2758 ;	AOP_STK for _rsdecode__1_0
   0B12 DD 6E E0           2759 	ld	l,-32(ix)
   0B15 DD 66 E1           2760 	ld	h,-31(ix)
   0B18 56                 2761 	ld	d,(hl)
                           2762 ;	genIpush
                           2763 ; _saveRegsForCall: sendSetSize: 0 deInUse: 1 bcInUse: 1 deSending: 0
   0B19 C5                 2764 	push	bc
   0B1A D5                 2765 	push	de
                           2766 ;	AOP_STK for _rsdecode__1_0
   0B1B DD 7E E2           2767 	ld	a,-30(ix)
   0B1E F5                 2768 	push	af
   0B1F 33                 2769 	inc	sp
                           2770 ;	genIpush
   0B20 D5                 2771 	push    de
   0B21 33                 2772 	inc     sp
                           2773 ;	genCall
   0B22 CDr00s00           2774 	call	_gfmul
   0B25 55                 2775 	ld	d,l
   0B26 F1                 2776 	pop	af
   0B27 7A                 2777 	ld	a,d
   0B28 D1                 2778 	pop	de
   0B29 57                 2779 	ld	d,a
   0B2A C1                 2780 	pop	bc
                           2781 ;	genXor
   0B2B 7A                 2782 	ld	a,d
   0B2C AB                 2783 	xor	a,e
                           2784 ;	genAssign (pointer)
                           2785 ;	isBitvar = 0
   0B2D 5F                 2786 	ld	e,a
   0B2E 02                 2787 	ld	(bc),a
                           2788 ;ecc/rslib.c:229: z[1] = gfmul (z[1], gfinv (deter));
                           2789 ;	genIpush
                           2790 ; _saveRegsForCall: sendSetSize: 0 deInUse: 1 bcInUse: 1 deSending: 0
   0B2F C5                 2791 	push	bc
   0B30 D5                 2792 	push	de
                           2793 ;	AOP_STK for _rsdecode_deter_1_1
   0B31 DD 7E F8           2794 	ld	a,-8(ix)
   0B34 F5                 2795 	push	af
   0B35 33                 2796 	inc	sp
                           2797 ;	genCall
   0B36 CDr00s00           2798 	call	_gfinv
   0B39 33                 2799 	inc	sp
   0B3A D1                 2800 	pop	de
   0B3B C1                 2801 	pop	bc
                           2802 ;	genIpush
                           2803 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0B3C C5                 2804 	push	bc
   0B3D 7D                 2805 	ld	a,l
   0B3E F5                 2806 	push	af
   0B3F 33                 2807 	inc	sp
                           2808 ;	genIpush
   0B40 7B                 2809 	ld	a,e
   0B41 F5                 2810 	push	af
   0B42 33                 2811 	inc	sp
                           2812 ;	genCall
   0B43 CDr00s00           2813 	call	_gfmul
   0B46 5D                 2814 	ld	e,l
   0B47 F1                 2815 	pop	af
   0B48 C1                 2816 	pop	bc
                           2817 ;	genAssign (pointer)
                           2818 ;	isBitvar = 0
   0B49 7B                 2819 	ld	a,e
   0B4A 02                 2820 	ld	(bc),a
                           2821 ;ecc/rslib.c:231: z[0] = gfmul (syn[2], gfmul (syn[3], syn[4]));
                           2822 ;	genPointerGet
                           2823 ;	AOP_STK for _rsdecode__1_0
   0B4B DD 6E D4           2824 	ld	l,-44(ix)
   0B4E DD 66 D5           2825 	ld	h,-43(ix)
   0B51 5E                 2826 	ld	e,(hl)
                           2827 ;	genPointerGet
                           2828 ;	AOP_STK for _rsdecode__1_0
   0B52 DD 6E D6           2829 	ld	l,-42(ix)
   0B55 DD 66 D7           2830 	ld	h,-41(ix)
   0B58 56                 2831 	ld	d,(hl)
                           2832 ;	genIpush
                           2833 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0B59 C5                 2834 	push	bc
   0B5A 7B                 2835 	ld	a,e
   0B5B F5                 2836 	push	af
   0B5C 33                 2837 	inc	sp
                           2838 ;	genIpush
   0B5D D5                 2839 	push    de
   0B5E 33                 2840 	inc     sp
                           2841 ;	genCall
   0B5F CDr00s00           2842 	call	_gfmul
   0B62 5D                 2843 	ld	e,l
   0B63 F1                 2844 	pop	af
   0B64 C1                 2845 	pop	bc
                           2846 ;	genPointerGet
                           2847 ;	AOP_STK for _rsdecode__1_0
   0B65 DD 6E E0           2848 	ld	l,-32(ix)
   0B68 DD 66 E1           2849 	ld	h,-31(ix)
   0B6B 56                 2850 	ld	d,(hl)
                           2851 ;	genIpush
                           2852 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0B6C C5                 2853 	push	bc
   0B6D 7B                 2854 	ld	a,e
   0B6E F5                 2855 	push	af
   0B6F 33                 2856 	inc	sp
                           2857 ;	genIpush
   0B70 D5                 2858 	push    de
   0B71 33                 2859 	inc     sp
                           2860 ;	genCall
   0B72 CDr00s00           2861 	call	_gfmul
   0B75 5D                 2862 	ld	e,l
   0B76 F1                 2863 	pop	af
   0B77 C1                 2864 	pop	bc
                           2865 ;	genAssign (pointer)
                           2866 ;	AOP_STK for _rsdecode__1_0
                           2867 ;	isBitvar = 0
   0B78 DD 6E DC           2868 	ld	l,-36(ix)
   0B7B DD 66 DD           2869 	ld	h,-35(ix)
   0B7E 73                 2870 	ld	(hl),e
                           2871 ;ecc/rslib.c:232: z[0] = gfadd (z[0], gfmul (syn[3], gfmul (syn[2], syn[4])));
                           2872 ;	genPointerGet
                           2873 ;	AOP_STK for _rsdecode__1_0
                           2874 ;	AOP_STK for _rsdecode__1_0
   0B7F DD 6E D4           2875 	ld	l,-44(ix)
   0B82 DD 66 D5           2876 	ld	h,-43(ix)
   0B85 7E                 2877 	ld	a,(hl)
   0B86 DD 77 E2           2878 	ld	-30(ix),a
                           2879 ;	genPointerGet
                           2880 ;	AOP_STK for _rsdecode__1_0
   0B89 DD 6E E0           2881 	ld	l,-32(ix)
   0B8C DD 66 E1           2882 	ld	h,-31(ix)
   0B8F 56                 2883 	ld	d,(hl)
                           2884 ;	genIpush
                           2885 ; _saveRegsForCall: sendSetSize: 0 deInUse: 1 bcInUse: 1 deSending: 0
   0B90 C5                 2886 	push	bc
   0B91 D5                 2887 	push	de
                           2888 ;	AOP_STK for _rsdecode__1_0
   0B92 DD 7E E2           2889 	ld	a,-30(ix)
   0B95 F5                 2890 	push	af
   0B96 33                 2891 	inc	sp
                           2892 ;	genIpush
   0B97 D5                 2893 	push    de
   0B98 33                 2894 	inc     sp
                           2895 ;	genCall
   0B99 CDr00s00           2896 	call	_gfmul
                           2897 ;	AOP_STK for _rsdecode__1_0
   0B9C DD 75 E2           2898 	ld	-30(ix),l
   0B9F F1                 2899 	pop	af
   0BA0 D1                 2900 	pop	de
   0BA1 C1                 2901 	pop	bc
                           2902 ;	genPointerGet
                           2903 ;	AOP_STK for _rsdecode__1_0
   0BA2 DD 6E D6           2904 	ld	l,-42(ix)
   0BA5 DD 66 D7           2905 	ld	h,-41(ix)
   0BA8 56                 2906 	ld	d,(hl)
                           2907 ;	genIpush
                           2908 ; _saveRegsForCall: sendSetSize: 0 deInUse: 1 bcInUse: 1 deSending: 0
   0BA9 C5                 2909 	push	bc
   0BAA D5                 2910 	push	de
                           2911 ;	AOP_STK for _rsdecode__1_0
   0BAB DD 7E E2           2912 	ld	a,-30(ix)
   0BAE F5                 2913 	push	af
   0BAF 33                 2914 	inc	sp
                           2915 ;	genIpush
   0BB0 D5                 2916 	push    de
   0BB1 33                 2917 	inc     sp
                           2918 ;	genCall
   0BB2 CDr00s00           2919 	call	_gfmul
   0BB5 55                 2920 	ld	d,l
   0BB6 F1                 2921 	pop	af
   0BB7 7A                 2922 	ld	a,d
   0BB8 D1                 2923 	pop	de
   0BB9 57                 2924 	ld	d,a
   0BBA C1                 2925 	pop	bc
                           2926 ;	genXor
   0BBB 7A                 2927 	ld	a,d
   0BBC AB                 2928 	xor	a,e
   0BBD 5F                 2929 	ld	e,a
                           2930 ;	genAssign (pointer)
                           2931 ;	AOP_STK for _rsdecode__1_0
                           2932 ;	isBitvar = 0
   0BBE DD 6E DC           2933 	ld	l,-36(ix)
   0BC1 DD 66 DD           2934 	ld	h,-35(ix)
   0BC4 73                 2935 	ld	(hl),e
                           2936 ;ecc/rslib.c:233: z[0] = gfadd (z[0], gfmul (syn[3], gfmul (syn[5], syn[1])));
                           2937 ;	genPointerGet
                           2938 ;	AOP_STK for _rsdecode__1_0
                           2939 ;	AOP_STK for _rsdecode__1_0
   0BC5 DD 6E DE           2940 	ld	l,-34(ix)
   0BC8 DD 66 DF           2941 	ld	h,-33(ix)
   0BCB 7E                 2942 	ld	a,(hl)
   0BCC DD 77 E2           2943 	ld	-30(ix),a
                           2944 ;	genPointerGet
                           2945 ;	AOP_STK for _rsdecode__1_0
   0BCF DD 6E D8           2946 	ld	l,-40(ix)
   0BD2 DD 66 D9           2947 	ld	h,-39(ix)
   0BD5 56                 2948 	ld	d,(hl)
                           2949 ;	genIpush
                           2950 ; _saveRegsForCall: sendSetSize: 0 deInUse: 1 bcInUse: 1 deSending: 0
   0BD6 C5                 2951 	push	bc
   0BD7 D5                 2952 	push	de
                           2953 ;	AOP_STK for _rsdecode__1_0
   0BD8 DD 7E E2           2954 	ld	a,-30(ix)
   0BDB F5                 2955 	push	af
   0BDC 33                 2956 	inc	sp
                           2957 ;	genIpush
   0BDD D5                 2958 	push    de
   0BDE 33                 2959 	inc     sp
                           2960 ;	genCall
   0BDF CDr00s00           2961 	call	_gfmul
                           2962 ;	AOP_STK for _rsdecode__1_0
   0BE2 DD 75 E2           2963 	ld	-30(ix),l
   0BE5 F1                 2964 	pop	af
   0BE6 D1                 2965 	pop	de
   0BE7 C1                 2966 	pop	bc
                           2967 ;	genPointerGet
                           2968 ;	AOP_STK for _rsdecode__1_0
   0BE8 DD 6E D6           2969 	ld	l,-42(ix)
   0BEB DD 66 D7           2970 	ld	h,-41(ix)
   0BEE 56                 2971 	ld	d,(hl)
                           2972 ;	genIpush
                           2973 ; _saveRegsForCall: sendSetSize: 0 deInUse: 1 bcInUse: 1 deSending: 0
   0BEF C5                 2974 	push	bc
   0BF0 D5                 2975 	push	de
                           2976 ;	AOP_STK for _rsdecode__1_0
   0BF1 DD 7E E2           2977 	ld	a,-30(ix)
   0BF4 F5                 2978 	push	af
   0BF5 33                 2979 	inc	sp
                           2980 ;	genIpush
   0BF6 D5                 2981 	push    de
   0BF7 33                 2982 	inc     sp
                           2983 ;	genCall
   0BF8 CDr00s00           2984 	call	_gfmul
   0BFB 55                 2985 	ld	d,l
   0BFC F1                 2986 	pop	af
   0BFD 7A                 2987 	ld	a,d
   0BFE D1                 2988 	pop	de
   0BFF 57                 2989 	ld	d,a
   0C00 C1                 2990 	pop	bc
                           2991 ;	genXor
   0C01 7A                 2992 	ld	a,d
   0C02 AB                 2993 	xor	a,e
   0C03 5F                 2994 	ld	e,a
                           2995 ;	genAssign (pointer)
                           2996 ;	AOP_STK for _rsdecode__1_0
                           2997 ;	isBitvar = 0
   0C04 DD 6E DC           2998 	ld	l,-36(ix)
   0C07 DD 66 DD           2999 	ld	h,-35(ix)
   0C0A 73                 3000 	ld	(hl),e
                           3001 ;ecc/rslib.c:234: z[0] = gfadd (z[0], gfmul (syn[4], gfmul (syn[4], syn[1])));
                           3002 ;	genPointerGet
                           3003 ;	AOP_STK for _rsdecode__1_0
                           3004 ;	AOP_STK for _rsdecode__1_0
   0C0B DD 6E DE           3005 	ld	l,-34(ix)
   0C0E DD 66 DF           3006 	ld	h,-33(ix)
   0C11 7E                 3007 	ld	a,(hl)
   0C12 DD 77 E2           3008 	ld	-30(ix),a
                           3009 ;	genPointerGet
                           3010 ;	AOP_STK for _rsdecode__1_0
   0C15 DD 6E D4           3011 	ld	l,-44(ix)
   0C18 DD 66 D5           3012 	ld	h,-43(ix)
   0C1B 56                 3013 	ld	d,(hl)
                           3014 ;	genIpush
                           3015 ; _saveRegsForCall: sendSetSize: 0 deInUse: 1 bcInUse: 1 deSending: 0
   0C1C C5                 3016 	push	bc
   0C1D D5                 3017 	push	de
                           3018 ;	AOP_STK for _rsdecode__1_0
   0C1E DD 7E E2           3019 	ld	a,-30(ix)
   0C21 F5                 3020 	push	af
   0C22 33                 3021 	inc	sp
                           3022 ;	genIpush
   0C23 D5                 3023 	push    de
   0C24 33                 3024 	inc     sp
                           3025 ;	genCall
   0C25 CDr00s00           3026 	call	_gfmul
                           3027 ;	AOP_STK for _rsdecode__1_0
   0C28 DD 75 E2           3028 	ld	-30(ix),l
   0C2B F1                 3029 	pop	af
   0C2C D1                 3030 	pop	de
   0C2D C1                 3031 	pop	bc
                           3032 ;	genPointerGet
                           3033 ;	AOP_STK for _rsdecode__1_0
   0C2E DD 6E D4           3034 	ld	l,-44(ix)
   0C31 DD 66 D5           3035 	ld	h,-43(ix)
   0C34 56                 3036 	ld	d,(hl)
                           3037 ;	genIpush
                           3038 ; _saveRegsForCall: sendSetSize: 0 deInUse: 1 bcInUse: 1 deSending: 0
   0C35 C5                 3039 	push	bc
   0C36 D5                 3040 	push	de
                           3041 ;	AOP_STK for _rsdecode__1_0
   0C37 DD 7E E2           3042 	ld	a,-30(ix)
   0C3A F5                 3043 	push	af
   0C3B 33                 3044 	inc	sp
                           3045 ;	genIpush
   0C3C D5                 3046 	push    de
   0C3D 33                 3047 	inc     sp
                           3048 ;	genCall
   0C3E CDr00s00           3049 	call	_gfmul
   0C41 55                 3050 	ld	d,l
   0C42 F1                 3051 	pop	af
   0C43 7A                 3052 	ld	a,d
   0C44 D1                 3053 	pop	de
   0C45 57                 3054 	ld	d,a
   0C46 C1                 3055 	pop	bc
                           3056 ;	genXor
   0C47 7A                 3057 	ld	a,d
   0C48 AB                 3058 	xor	a,e
   0C49 5F                 3059 	ld	e,a
                           3060 ;	genAssign (pointer)
                           3061 ;	AOP_STK for _rsdecode__1_0
                           3062 ;	isBitvar = 0
   0C4A DD 6E DC           3063 	ld	l,-36(ix)
   0C4D DD 66 DD           3064 	ld	h,-35(ix)
   0C50 73                 3065 	ld	(hl),e
                           3066 ;ecc/rslib.c:235: z[0] = gfadd (z[0], gfmul (syn[3], gfmul (syn[3], syn[3])));
                           3067 ;	genPointerGet
                           3068 ;	AOP_STK for _rsdecode__1_0
   0C51 DD 6E D6           3069 	ld	l,-42(ix)
   0C54 DD 66 D7           3070 	ld	h,-41(ix)
   0C57 6E                 3071 	ld	l,(hl)
                           3072 ;	genIpush
                           3073 ; _saveRegsForCall: sendSetSize: 0 deInUse: 1 bcInUse: 1 deSending: 0
   0C58 C5                 3074 	push	bc
   0C59 D5                 3075 	push	de
   0C5A 7D                 3076 	ld	a,l
   0C5B F5                 3077 	push	af
   0C5C 33                 3078 	inc	sp
                           3079 ;	genIpush
   0C5D 7D                 3080 	ld	a,l
   0C5E F5                 3081 	push	af
   0C5F 33                 3082 	inc	sp
                           3083 ;	genCall
   0C60 CDr00s00           3084 	call	_gfmul
                           3085 ;	AOP_STK for _rsdecode__1_0
   0C63 DD 75 D4           3086 	ld	-44(ix),l
   0C66 F1                 3087 	pop	af
   0C67 D1                 3088 	pop	de
   0C68 C1                 3089 	pop	bc
                           3090 ;	genPointerGet
                           3091 ;	AOP_STK for _rsdecode__1_0
   0C69 DD 6E D6           3092 	ld	l,-42(ix)
   0C6C DD 66 D7           3093 	ld	h,-41(ix)
   0C6F 56                 3094 	ld	d,(hl)
                           3095 ;	genIpush
                           3096 ; _saveRegsForCall: sendSetSize: 0 deInUse: 1 bcInUse: 1 deSending: 0
   0C70 C5                 3097 	push	bc
   0C71 D5                 3098 	push	de
                           3099 ;	AOP_STK for _rsdecode__1_0
   0C72 DD 7E D4           3100 	ld	a,-44(ix)
   0C75 F5                 3101 	push	af
   0C76 33                 3102 	inc	sp
                           3103 ;	genIpush
   0C77 D5                 3104 	push    de
   0C78 33                 3105 	inc     sp
                           3106 ;	genCall
   0C79 CDr00s00           3107 	call	_gfmul
   0C7C 55                 3108 	ld	d,l
   0C7D F1                 3109 	pop	af
   0C7E 7A                 3110 	ld	a,d
   0C7F D1                 3111 	pop	de
   0C80 57                 3112 	ld	d,a
   0C81 C1                 3113 	pop	bc
                           3114 ;	genXor
   0C82 7A                 3115 	ld	a,d
   0C83 AB                 3116 	xor	a,e
   0C84 5F                 3117 	ld	e,a
                           3118 ;	genAssign (pointer)
                           3119 ;	AOP_STK for _rsdecode__1_0
                           3120 ;	isBitvar = 0
   0C85 DD 6E DC           3121 	ld	l,-36(ix)
   0C88 DD 66 DD           3122 	ld	h,-35(ix)
   0C8B 73                 3123 	ld	(hl),e
                           3124 ;ecc/rslib.c:236: z[0] = gfadd (z[0], gfmul (syn[2], gfmul (syn[2], syn[5])));
                           3125 ;	genPointerGet
                           3126 ;	AOP_STK for _rsdecode__1_0
                           3127 ;	AOP_STK for _rsdecode__1_0
   0C8C DD 6E D8           3128 	ld	l,-40(ix)
   0C8F DD 66 D9           3129 	ld	h,-39(ix)
   0C92 7E                 3130 	ld	a,(hl)
   0C93 DD 77 D4           3131 	ld	-44(ix),a
                           3132 ;	genPointerGet
                           3133 ;	AOP_STK for _rsdecode__1_0
   0C96 DD 6E E0           3134 	ld	l,-32(ix)
   0C99 DD 66 E1           3135 	ld	h,-31(ix)
   0C9C 56                 3136 	ld	d,(hl)
                           3137 ;	genIpush
                           3138 ; _saveRegsForCall: sendSetSize: 0 deInUse: 1 bcInUse: 1 deSending: 0
   0C9D C5                 3139 	push	bc
   0C9E D5                 3140 	push	de
                           3141 ;	AOP_STK for _rsdecode__1_0
   0C9F DD 7E D4           3142 	ld	a,-44(ix)
   0CA2 F5                 3143 	push	af
   0CA3 33                 3144 	inc	sp
                           3145 ;	genIpush
   0CA4 D5                 3146 	push    de
   0CA5 33                 3147 	inc     sp
                           3148 ;	genCall
   0CA6 CDr00s00           3149 	call	_gfmul
                           3150 ;	AOP_STK for _rsdecode__1_0
   0CA9 DD 75 D4           3151 	ld	-44(ix),l
   0CAC F1                 3152 	pop	af
   0CAD D1                 3153 	pop	de
   0CAE C1                 3154 	pop	bc
                           3155 ;	genPointerGet
                           3156 ;	AOP_STK for _rsdecode__1_0
   0CAF DD 6E E0           3157 	ld	l,-32(ix)
   0CB2 DD 66 E1           3158 	ld	h,-31(ix)
   0CB5 56                 3159 	ld	d,(hl)
                           3160 ;	genIpush
                           3161 ; _saveRegsForCall: sendSetSize: 0 deInUse: 1 bcInUse: 1 deSending: 0
   0CB6 C5                 3162 	push	bc
   0CB7 D5                 3163 	push	de
                           3164 ;	AOP_STK for _rsdecode__1_0
   0CB8 DD 7E D4           3165 	ld	a,-44(ix)
   0CBB F5                 3166 	push	af
   0CBC 33                 3167 	inc	sp
                           3168 ;	genIpush
   0CBD D5                 3169 	push    de
   0CBE 33                 3170 	inc     sp
                           3171 ;	genCall
   0CBF CDr00s00           3172 	call	_gfmul
   0CC2 55                 3173 	ld	d,l
   0CC3 F1                 3174 	pop	af
   0CC4 7A                 3175 	ld	a,d
   0CC5 D1                 3176 	pop	de
   0CC6 57                 3177 	ld	d,a
   0CC7 C1                 3178 	pop	bc
                           3179 ;	genXor
   0CC8 7A                 3180 	ld	a,d
   0CC9 AB                 3181 	xor	a,e
   0CCA 5F                 3182 	ld	e,a
                           3183 ;	genAssign (pointer)
                           3184 ;	AOP_STK for _rsdecode__1_0
                           3185 ;	isBitvar = 0
   0CCB DD 6E DC           3186 	ld	l,-36(ix)
   0CCE DD 66 DD           3187 	ld	h,-35(ix)
   0CD1 73                 3188 	ld	(hl),e
                           3189 ;ecc/rslib.c:237: z[0] = gfmul (z[0], gfinv (deter));
                           3190 ;	genIpush
                           3191 ; _saveRegsForCall: sendSetSize: 0 deInUse: 1 bcInUse: 1 deSending: 0
   0CD2 C5                 3192 	push	bc
   0CD3 D5                 3193 	push	de
                           3194 ;	AOP_STK for _rsdecode_deter_1_1
   0CD4 DD 7E F8           3195 	ld	a,-8(ix)
   0CD7 F5                 3196 	push	af
   0CD8 33                 3197 	inc	sp
                           3198 ;	genCall
   0CD9 CDr00s00           3199 	call	_gfinv
   0CDC 33                 3200 	inc	sp
   0CDD D1                 3201 	pop	de
   0CDE C1                 3202 	pop	bc
                           3203 ;	genIpush
                           3204 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0CDF C5                 3205 	push	bc
   0CE0 7D                 3206 	ld	a,l
   0CE1 F5                 3207 	push	af
   0CE2 33                 3208 	inc	sp
                           3209 ;	genIpush
   0CE3 7B                 3210 	ld	a,e
   0CE4 F5                 3211 	push	af
   0CE5 33                 3212 	inc	sp
                           3213 ;	genCall
   0CE6 CDr00s00           3214 	call	_gfmul
   0CE9 5D                 3215 	ld	e,l
   0CEA F1                 3216 	pop	af
   0CEB C1                 3217 	pop	bc
                           3218 ;	genAssign (pointer)
                           3219 ;	AOP_STK for _rsdecode__1_0
                           3220 ;	isBitvar = 0
   0CEC DD 6E DC           3221 	ld	l,-36(ix)
   0CEF DD 66 DD           3222 	ld	h,-35(ix)
   0CF2 73                 3223 	ld	(hl),e
                           3224 ;ecc/rslib.c:239: polysolve (z, x, &sols);
                           3225 ;	genAddrOf
   0CF3 21 13 00           3226 	ld	hl,#0x0013
   0CF6 39                 3227 	add	hl,sp
   0CF7 5D                 3228 	ld	e,l
   0CF8 54                 3229 	ld	d,h
                           3230 ;	genAddrOf
                           3231 ;	AOP_STK for _rsdecode__1_0
   0CF9 21 15 00           3232 	ld	hl,#0x0015
   0CFC 39                 3233 	add	hl,sp
   0CFD DD 75 D4           3234 	ld	-44(ix),l
   0D00 DD 74 D5           3235 	ld	-43(ix),h
                           3236 ;	genIpush
                           3237 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0D03 C5                 3238 	push	bc
   0D04 D5                 3239 	push	de
                           3240 ;	genIpush
                           3241 ;	AOP_STK for _rsdecode__1_0
   0D05 DD 6E D4           3242 	ld	l,-44(ix)
   0D08 DD 66 D5           3243 	ld	h,-43(ix)
   0D0B E5                 3244 	push	hl
                           3245 ;	genIpush
                           3246 ;	AOP_STK for _rsdecode__1_0
   0D0C DD 6E DC           3247 	ld	l,-36(ix)
   0D0F DD 66 DD           3248 	ld	h,-35(ix)
   0D12 E5                 3249 	push	hl
                           3250 ;	genCall
   0D13 CDr53s10           3251 	call	_polysolve
   0D16 F1                 3252 	pop	af
   0D17 F1                 3253 	pop	af
   0D18 F1                 3254 	pop	af
   0D19 C1                 3255 	pop	bc
                           3256 ;ecc/rslib.c:240: if (sols != 3)
                           3257 ;	genCmpEq
                           3258 ;	AOP_STK for _rsdecode_sols_1_1
                           3259 ; genCmpEq: left 2, right 2, result 0
   0D1A DD 7E E7           3260 	ld	a,-25(ix)
   0D1D FE 03              3261 	cp	a,#0x03
   0D1F C2r29s0D           3262 	jp	nz,00155$
   0D22 DD 7E E8           3263 	ld	a,-24(ix)
   0D25 B7                 3264 	or	a,a
   0D26 CAr37s0D           3265 	jp	z,00117$
   0D29                    3266 00155$:
                           3267 ;ecc/rslib.c:242: *errcode = 4;
                           3268 ;	genAssign (pointer)
                           3269 ;	AOP_STK for _rsdecode__1_0
                           3270 ;	isBitvar = 0
   0D29 DD 6E E5           3271 	ld	l,-27(ix)
   0D2C DD 66 E6           3272 	ld	h,-26(ix)
   0D2F 36 04              3273 	ld	(hl),#0x04
   0D31 23                 3274 	inc	hl
   0D32 36 00              3275 	ld	(hl),#0x00
                           3276 ;ecc/rslib.c:243: return;
                           3277 ;	genRet
   0D34 C3r4Es10           3278 	jp	00130$
                           3279 ;	genLabel
   0D37                    3280 00117$:
                           3281 ;ecc/rslib.c:246: w0 = gfmul (z[0], syn[1]);
                           3282 ;	genPointerGet
                           3283 ;	AOP_STK for _rsdecode__1_0
   0D37 DD 6E DE           3284 	ld	l,-34(ix)
   0D3A DD 66 DF           3285 	ld	h,-33(ix)
   0D3D 5E                 3286 	ld	e,(hl)
                           3287 ;	genPointerGet
                           3288 ;	AOP_STK for _rsdecode__1_0
   0D3E DD 6E DC           3289 	ld	l,-36(ix)
   0D41 DD 66 DD           3290 	ld	h,-35(ix)
   0D44 56                 3291 	ld	d,(hl)
                           3292 ;	genIpush
                           3293 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0D45 C5                 3294 	push	bc
   0D46 7B                 3295 	ld	a,e
   0D47 F5                 3296 	push	af
   0D48 33                 3297 	inc	sp
                           3298 ;	genIpush
   0D49 D5                 3299 	push    de
   0D4A 33                 3300 	inc     sp
                           3301 ;	genCall
   0D4B CDr00s00           3302 	call	_gfmul
   0D4E F1                 3303 	pop	af
   0D4F C1                 3304 	pop	bc
                           3305 ;	genAssign
                           3306 ;	AOP_STK for _rsdecode_w0_1_1
   0D50 DD 75 EE           3307 	ld	-18(ix),l
                           3308 ;ecc/rslib.c:247: w1 = gfadd (gfmul (z[0], syn[2]), gfmul (z[1], syn[1]));
                           3309 ;	genPointerGet
                           3310 ;	AOP_STK for _rsdecode__1_0
   0D53 DD 6E E0           3311 	ld	l,-32(ix)
   0D56 DD 66 E1           3312 	ld	h,-31(ix)
   0D59 5E                 3313 	ld	e,(hl)
                           3314 ;	genPointerGet
                           3315 ;	AOP_STK for _rsdecode__1_0
   0D5A DD 6E DC           3316 	ld	l,-36(ix)
   0D5D DD 66 DD           3317 	ld	h,-35(ix)
   0D60 56                 3318 	ld	d,(hl)
                           3319 ;	genIpush
                           3320 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0D61 C5                 3321 	push	bc
   0D62 7B                 3322 	ld	a,e
   0D63 F5                 3323 	push	af
   0D64 33                 3324 	inc	sp
                           3325 ;	genIpush
   0D65 D5                 3326 	push    de
   0D66 33                 3327 	inc     sp
                           3328 ;	genCall
   0D67 CDr00s00           3329 	call	_gfmul
   0D6A 5D                 3330 	ld	e,l
   0D6B F1                 3331 	pop	af
   0D6C C1                 3332 	pop	bc
                           3333 ;	genPointerGet
                           3334 ;	AOP_STK for _rsdecode__1_0
                           3335 ;	AOP_STK for _rsdecode__1_0
   0D6D DD 6E DE           3336 	ld	l,-34(ix)
   0D70 DD 66 DF           3337 	ld	h,-33(ix)
   0D73 7E                 3338 	ld	a,(hl)
   0D74 DD 77 D8           3339 	ld	-40(ix),a
                           3340 ;	genPointerGet
   0D77 0A                 3341 	ld	a,(bc)
   0D78 57                 3342 	ld	d,a
                           3343 ;	genIpush
                           3344 ; _saveRegsForCall: sendSetSize: 0 deInUse: 1 bcInUse: 1 deSending: 0
   0D79 C5                 3345 	push	bc
   0D7A D5                 3346 	push	de
                           3347 ;	AOP_STK for _rsdecode__1_0
   0D7B DD 7E D8           3348 	ld	a,-40(ix)
   0D7E F5                 3349 	push	af
   0D7F 33                 3350 	inc	sp
                           3351 ;	genIpush
   0D80 D5                 3352 	push    de
   0D81 33                 3353 	inc     sp
                           3354 ;	genCall
   0D82 CDr00s00           3355 	call	_gfmul
   0D85 55                 3356 	ld	d,l
   0D86 F1                 3357 	pop	af
   0D87 7A                 3358 	ld	a,d
   0D88 D1                 3359 	pop	de
   0D89 57                 3360 	ld	d,a
   0D8A C1                 3361 	pop	bc
                           3362 ;	genXor
   0D8B 7A                 3363 	ld	a,d
   0D8C AB                 3364 	xor	a,e
   0D8D 5F                 3365 	ld	e,a
                           3366 ;	genAssign
                           3367 ;	AOP_STK for _rsdecode_w1_1_1
   0D8E DD 73 ED           3368 	ld	-19(ix),e
                           3369 ;ecc/rslib.c:248: w2 = gfadd (gfmul (z[0], syn[3]), gfadd (gfmul (z[1], syn[2]), gfmul (z[2], syn[1])));
                           3370 ;	genPointerGet
                           3371 ;	AOP_STK for _rsdecode__1_0
   0D91 DD 6E D6           3372 	ld	l,-42(ix)
   0D94 DD 66 D7           3373 	ld	h,-41(ix)
   0D97 5E                 3374 	ld	e,(hl)
                           3375 ;	genPointerGet
                           3376 ;	AOP_STK for _rsdecode__1_0
   0D98 DD 6E DC           3377 	ld	l,-36(ix)
   0D9B DD 66 DD           3378 	ld	h,-35(ix)
   0D9E 56                 3379 	ld	d,(hl)
                           3380 ;	genIpush
                           3381 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0D9F C5                 3382 	push	bc
   0DA0 7B                 3383 	ld	a,e
   0DA1 F5                 3384 	push	af
   0DA2 33                 3385 	inc	sp
                           3386 ;	genIpush
   0DA3 D5                 3387 	push    de
   0DA4 33                 3388 	inc     sp
                           3389 ;	genCall
   0DA5 CDr00s00           3390 	call	_gfmul
   0DA8 5D                 3391 	ld	e,l
   0DA9 F1                 3392 	pop	af
   0DAA C1                 3393 	pop	bc
                           3394 ;	genPointerGet
                           3395 ;	AOP_STK for _rsdecode__1_0
                           3396 ;	AOP_STK for _rsdecode__1_0
   0DAB DD 6E E0           3397 	ld	l,-32(ix)
   0DAE DD 66 E1           3398 	ld	h,-31(ix)
   0DB1 7E                 3399 	ld	a,(hl)
   0DB2 DD 77 D6           3400 	ld	-42(ix),a
                           3401 ;	genPointerGet
   0DB5 0A                 3402 	ld	a,(bc)
   0DB6 57                 3403 	ld	d,a
                           3404 ;	genIpush
                           3405 ; _saveRegsForCall: sendSetSize: 0 deInUse: 1 bcInUse: 1 deSending: 0
   0DB7 C5                 3406 	push	bc
   0DB8 D5                 3407 	push	de
                           3408 ;	AOP_STK for _rsdecode__1_0
   0DB9 DD 7E D6           3409 	ld	a,-42(ix)
   0DBC F5                 3410 	push	af
   0DBD 33                 3411 	inc	sp
                           3412 ;	genIpush
   0DBE D5                 3413 	push    de
   0DBF 33                 3414 	inc     sp
                           3415 ;	genCall
   0DC0 CDr00s00           3416 	call	_gfmul
                           3417 ;	AOP_STK for _rsdecode__1_0
   0DC3 DD 75 D6           3418 	ld	-42(ix),l
   0DC6 F1                 3419 	pop	af
   0DC7 D1                 3420 	pop	de
   0DC8 C1                 3421 	pop	bc
                           3422 ;	genPointerGet
                           3423 ;	AOP_STK for _rsdecode__1_0
                           3424 ;	AOP_STK for _rsdecode__1_0
   0DC9 DD 6E DE           3425 	ld	l,-34(ix)
   0DCC DD 66 DF           3426 	ld	h,-33(ix)
   0DCF 7E                 3427 	ld	a,(hl)
   0DD0 DD 77 D8           3428 	ld	-40(ix),a
                           3429 ;	genPointerGet
                           3430 ;	AOP_STK for _rsdecode__1_0
   0DD3 DD 6E DA           3431 	ld	l,-38(ix)
   0DD6 DD 66 DB           3432 	ld	h,-37(ix)
   0DD9 56                 3433 	ld	d,(hl)
                           3434 ;	genIpush
                           3435 ; _saveRegsForCall: sendSetSize: 0 deInUse: 1 bcInUse: 1 deSending: 0
   0DDA C5                 3436 	push	bc
   0DDB D5                 3437 	push	de
                           3438 ;	AOP_STK for _rsdecode__1_0
   0DDC DD 7E D8           3439 	ld	a,-40(ix)
   0DDF F5                 3440 	push	af
   0DE0 33                 3441 	inc	sp
                           3442 ;	genIpush
   0DE1 D5                 3443 	push    de
   0DE2 33                 3444 	inc     sp
                           3445 ;	genCall
   0DE3 CDr00s00           3446 	call	_gfmul
   0DE6 55                 3447 	ld	d,l
   0DE7 F1                 3448 	pop	af
   0DE8 7A                 3449 	ld	a,d
   0DE9 D1                 3450 	pop	de
   0DEA 57                 3451 	ld	d,a
   0DEB C1                 3452 	pop	bc
                           3453 ;	genXor
                           3454 ;	AOP_STK for _rsdecode__1_0
   0DEC DD 7E D6           3455 	ld	a,-42(ix)
   0DEF AA                 3456 	xor	a,d
                           3457 ;	genXor
   0DF0 57                 3458 	ld	d,a
   0DF1 AB                 3459 	xor	a,e
   0DF2 5F                 3460 	ld	e,a
                           3461 ;	genAssign
                           3462 ;	AOP_STK for _rsdecode_w2_1_1
   0DF3 DD 73 EC           3463 	ld	-20(ix),e
                           3464 ;ecc/rslib.c:250: n0 = 254 - v2e[gfinv (x[0])];
                           3465 ;	genPointerGet
                           3466 ;	AOP_STK for _rsdecode__1_0
   0DF6 DD 6E D4           3467 	ld	l,-44(ix)
   0DF9 DD 66 D5           3468 	ld	h,-43(ix)
   0DFC 6E                 3469 	ld	l,(hl)
                           3470 ;	genIpush
                           3471 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0DFD C5                 3472 	push	bc
   0DFE 7D                 3473 	ld	a,l
   0DFF F5                 3474 	push	af
   0E00 33                 3475 	inc	sp
                           3476 ;	genCall
   0E01 CDr00s00           3477 	call	_gfinv
   0E04 33                 3478 	inc	sp
   0E05 C1                 3479 	pop	bc
                           3480 ;	genPlus
                           3481 ;	Can't optimise plus by inc, falling back to the normal way
   0E06 3Er00              3482 	ld	a,#<_v2e
   0E08 85                 3483 	add	a,l
   0E09 6F                 3484 	ld	l,a
   0E0A 3Es00              3485 	ld	a,#>_v2e
   0E0C CE 00              3486 	adc	a,#0x00
   0E0E 67                 3487 	ld	h,a
                           3488 ;	genPointerGet
   0E0F 6E                 3489 	ld	l,(hl)
                           3490 ;	genMinus
                           3491 ;	AOP_STK for _rsdecode_n0_1_1
   0E10 3E FE              3492 	ld	a,#0xFE
   0E12 95                 3493 	sub	a,l
   0E13 DD 77 F1           3494 	ld	-15(ix),a
                           3495 ;ecc/rslib.c:251: n1 = 254 - v2e[gfinv (x[1])];
                           3496 ;	genPlus
                           3497 ;	AOP_STK for _rsdecode__1_0
                           3498 ;	AOP_STK for _rsdecode__1_0
                           3499 ;	genPlusIncr
                           3500 ;	Can't optimise plus by inc, falling back to the normal way
   0E16 DD 7E D4           3501 	ld	a,-44(ix)
   0E19 C6 01              3502 	add	a,#0x01
   0E1B DD 77 D6           3503 	ld	-42(ix),a
   0E1E DD 7E D5           3504 	ld	a,-43(ix)
   0E21 CE 00              3505 	adc	a,#0x00
   0E23 DD 77 D7           3506 	ld	-41(ix),a
                           3507 ;	genPointerGet
                           3508 ;	AOP_STK for _rsdecode__1_0
   0E26 DD 6E D6           3509 	ld	l,-42(ix)
   0E29 DD 66 D7           3510 	ld	h,-41(ix)
   0E2C 6E                 3511 	ld	l,(hl)
                           3512 ;	genIpush
                           3513 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0E2D C5                 3514 	push	bc
   0E2E 7D                 3515 	ld	a,l
   0E2F F5                 3516 	push	af
   0E30 33                 3517 	inc	sp
                           3518 ;	genCall
   0E31 CDr00s00           3519 	call	_gfinv
   0E34 33                 3520 	inc	sp
   0E35 C1                 3521 	pop	bc
                           3522 ;	genPlus
                           3523 ;	Can't optimise plus by inc, falling back to the normal way
   0E36 3Er00              3524 	ld	a,#<_v2e
   0E38 85                 3525 	add	a,l
   0E39 6F                 3526 	ld	l,a
   0E3A 3Es00              3527 	ld	a,#>_v2e
   0E3C CE 00              3528 	adc	a,#0x00
   0E3E 67                 3529 	ld	h,a
                           3530 ;	genPointerGet
   0E3F 6E                 3531 	ld	l,(hl)
                           3532 ;	genMinus
                           3533 ;	AOP_STK for _rsdecode_n1_1_1
   0E40 3E FE              3534 	ld	a,#0xFE
   0E42 95                 3535 	sub	a,l
   0E43 DD 77 F0           3536 	ld	-16(ix),a
                           3537 ;ecc/rslib.c:252: n2 = 254 - v2e[gfinv (x[2])];
                           3538 ;	genPlus
                           3539 ;	AOP_STK for _rsdecode__1_0
                           3540 ;	AOP_STK for _rsdecode__1_0
                           3541 ;	genPlusIncr
                           3542 ;	Can't optimise plus by inc, falling back to the normal way
   0E46 DD 7E D4           3543 	ld	a,-44(ix)
   0E49 C6 02              3544 	add	a,#0x02
   0E4B DD 77 D8           3545 	ld	-40(ix),a
   0E4E DD 7E D5           3546 	ld	a,-43(ix)
   0E51 CE 00              3547 	adc	a,#0x00
   0E53 DD 77 D9           3548 	ld	-39(ix),a
                           3549 ;	genPointerGet
                           3550 ;	AOP_STK for _rsdecode__1_0
   0E56 DD 6E D8           3551 	ld	l,-40(ix)
   0E59 DD 66 D9           3552 	ld	h,-39(ix)
   0E5C 6E                 3553 	ld	l,(hl)
                           3554 ;	genIpush
                           3555 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0E5D C5                 3556 	push	bc
   0E5E 7D                 3557 	ld	a,l
   0E5F F5                 3558 	push	af
   0E60 33                 3559 	inc	sp
                           3560 ;	genCall
   0E61 CDr00s00           3561 	call	_gfinv
   0E64 33                 3562 	inc	sp
   0E65 C1                 3563 	pop	bc
                           3564 ;	genPlus
                           3565 ;	Can't optimise plus by inc, falling back to the normal way
   0E66 3Er00              3566 	ld	a,#<_v2e
   0E68 85                 3567 	add	a,l
   0E69 6F                 3568 	ld	l,a
   0E6A 3Es00              3569 	ld	a,#>_v2e
   0E6C CE 00              3570 	adc	a,#0x00
   0E6E 67                 3571 	ld	h,a
                           3572 ;	genPointerGet
   0E6F 6E                 3573 	ld	l,(hl)
                           3574 ;	genMinus
                           3575 ;	AOP_STK for _rsdecode_n2_1_1
   0E70 3E FE              3576 	ld	a,#0xFE
   0E72 95                 3577 	sub	a,l
   0E73 DD 77 EF           3578 	ld	-17(ix),a
                           3579 ;ecc/rslib.c:254: e0 = gfadd (w0, gfadd (gfmul (w1, x[0]), gfmul (w2, gfexp (x[0], 2))));
                           3580 ;	genPointerGet
                           3581 ;	AOP_STK for _rsdecode__1_0
   0E76 DD 6E D4           3582 	ld	l,-44(ix)
   0E79 DD 66 D5           3583 	ld	h,-43(ix)
   0E7C 6E                 3584 	ld	l,(hl)
                           3585 ;	genIpush
                           3586 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0E7D C5                 3587 	push	bc
   0E7E 7D                 3588 	ld	a,l
   0E7F F5                 3589 	push	af
   0E80 33                 3590 	inc	sp
                           3591 ;	genIpush
                           3592 ;	AOP_STK for _rsdecode_w1_1_1
   0E81 DD 7E ED           3593 	ld	a,-19(ix)
   0E84 F5                 3594 	push	af
   0E85 33                 3595 	inc	sp
                           3596 ;	genCall
   0E86 CDr00s00           3597 	call	_gfmul
   0E89 5D                 3598 	ld	e,l
   0E8A F1                 3599 	pop	af
   0E8B C1                 3600 	pop	bc
                           3601 ;	genPointerGet
                           3602 ;	AOP_STK for _rsdecode__1_0
   0E8C DD 6E D4           3603 	ld	l,-44(ix)
   0E8F DD 66 D5           3604 	ld	h,-43(ix)
   0E92 56                 3605 	ld	d,(hl)
                           3606 ;	genIpush
                           3607 ; _saveRegsForCall: sendSetSize: 0 deInUse: 1 bcInUse: 1 deSending: 0
   0E93 C5                 3608 	push	bc
   0E94 D5                 3609 	push	de
   0E95 3E 02              3610 	ld	a,#0x02
   0E97 F5                 3611 	push	af
   0E98 33                 3612 	inc	sp
                           3613 ;	genIpush
   0E99 D5                 3614 	push    de
   0E9A 33                 3615 	inc     sp
                           3616 ;	genCall
   0E9B CDr00s00           3617 	call	_gfexp
   0E9E F1                 3618 	pop	af
   0E9F D1                 3619 	pop	de
   0EA0 C1                 3620 	pop	bc
                           3621 ;	genIpush
                           3622 ; _saveRegsForCall: sendSetSize: 0 deInUse: 1 bcInUse: 1 deSending: 0
   0EA1 C5                 3623 	push	bc
   0EA2 D5                 3624 	push	de
   0EA3 7D                 3625 	ld	a,l
   0EA4 F5                 3626 	push	af
   0EA5 33                 3627 	inc	sp
                           3628 ;	genIpush
                           3629 ;	AOP_STK for _rsdecode_w2_1_1
   0EA6 DD 7E EC           3630 	ld	a,-20(ix)
   0EA9 F5                 3631 	push	af
   0EAA 33                 3632 	inc	sp
                           3633 ;	genCall
   0EAB CDr00s00           3634 	call	_gfmul
   0EAE 55                 3635 	ld	d,l
   0EAF F1                 3636 	pop	af
   0EB0 7A                 3637 	ld	a,d
   0EB1 D1                 3638 	pop	de
   0EB2 57                 3639 	ld	d,a
   0EB3 C1                 3640 	pop	bc
                           3641 ;	genXor
   0EB4 7A                 3642 	ld	a,d
   0EB5 AB                 3643 	xor	a,e
   0EB6 5F                 3644 	ld	e,a
                           3645 ;	genXor
                           3646 ;	AOP_STK for _rsdecode_w0_1_1
   0EB7 DD 7E EE           3647 	ld	a,-18(ix)
   0EBA AB                 3648 	xor	a,e
   0EBB 5F                 3649 	ld	e,a
                           3650 ;	genAssign
                           3651 ;	AOP_STK for _rsdecode_e0_1_1
   0EBC DD 73 F3           3652 	ld	-13(ix),e
                           3653 ;ecc/rslib.c:255: e0 = gfmul (e0, gfinv (gfadd (z[1], gfexp (x[0], 2))));
                           3654 ;	genPointerGet
   0EBF 0A                 3655 	ld	a,(bc)
   0EC0 5F                 3656 	ld	e,a
                           3657 ;	genPointerGet
                           3658 ;	AOP_STK for _rsdecode__1_0
   0EC1 DD 6E D4           3659 	ld	l,-44(ix)
   0EC4 DD 66 D5           3660 	ld	h,-43(ix)
   0EC7 56                 3661 	ld	d,(hl)
                           3662 ;	genIpush
                           3663 ; _saveRegsForCall: sendSetSize: 0 deInUse: 1 bcInUse: 1 deSending: 0
   0EC8 C5                 3664 	push	bc
   0EC9 D5                 3665 	push	de
   0ECA 3E 02              3666 	ld	a,#0x02
   0ECC F5                 3667 	push	af
   0ECD 33                 3668 	inc	sp
                           3669 ;	genIpush
   0ECE D5                 3670 	push    de
   0ECF 33                 3671 	inc     sp
                           3672 ;	genCall
   0ED0 CDr00s00           3673 	call	_gfexp
   0ED3 55                 3674 	ld	d,l
   0ED4 F1                 3675 	pop	af
   0ED5 7A                 3676 	ld	a,d
   0ED6 D1                 3677 	pop	de
   0ED7 57                 3678 	ld	d,a
   0ED8 C1                 3679 	pop	bc
                           3680 ;	genXor
   0ED9 7A                 3681 	ld	a,d
   0EDA AB                 3682 	xor	a,e
   0EDB 5F                 3683 	ld	e,a
                           3684 ;	genIpush
                           3685 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0EDC C5                 3686 	push	bc
   0EDD 7B                 3687 	ld	a,e
   0EDE F5                 3688 	push	af
   0EDF 33                 3689 	inc	sp
                           3690 ;	genCall
   0EE0 CDr00s00           3691 	call	_gfinv
   0EE3 33                 3692 	inc	sp
   0EE4 C1                 3693 	pop	bc
                           3694 ;	genIpush
                           3695 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0EE5 C5                 3696 	push	bc
   0EE6 7D                 3697 	ld	a,l
   0EE7 F5                 3698 	push	af
   0EE8 33                 3699 	inc	sp
                           3700 ;	genIpush
                           3701 ;	AOP_STK for _rsdecode_e0_1_1
   0EE9 DD 7E F3           3702 	ld	a,-13(ix)
   0EEC F5                 3703 	push	af
   0EED 33                 3704 	inc	sp
                           3705 ;	genCall
   0EEE CDr00s00           3706 	call	_gfmul
   0EF1 F1                 3707 	pop	af
   0EF2 C1                 3708 	pop	bc
                           3709 ;	genAssign
                           3710 ;	AOP_STK for _rsdecode_e0_1_1
   0EF3 DD 75 F3           3711 	ld	-13(ix),l
                           3712 ;ecc/rslib.c:256: e1 = gfadd (w0, gfadd (gfmul (w1, x[1]), gfmul (w2, gfexp (x[1], 2))));
                           3713 ;	genPointerGet
                           3714 ;	AOP_STK for _rsdecode__1_0
   0EF6 DD 6E D6           3715 	ld	l,-42(ix)
   0EF9 DD 66 D7           3716 	ld	h,-41(ix)
   0EFC 6E                 3717 	ld	l,(hl)
                           3718 ;	genIpush
                           3719 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0EFD C5                 3720 	push	bc
   0EFE 7D                 3721 	ld	a,l
   0EFF F5                 3722 	push	af
   0F00 33                 3723 	inc	sp
                           3724 ;	genIpush
                           3725 ;	AOP_STK for _rsdecode_w1_1_1
   0F01 DD 7E ED           3726 	ld	a,-19(ix)
   0F04 F5                 3727 	push	af
   0F05 33                 3728 	inc	sp
                           3729 ;	genCall
   0F06 CDr00s00           3730 	call	_gfmul
   0F09 5D                 3731 	ld	e,l
   0F0A F1                 3732 	pop	af
   0F0B C1                 3733 	pop	bc
                           3734 ;	genPointerGet
                           3735 ;	AOP_STK for _rsdecode__1_0
   0F0C DD 6E D6           3736 	ld	l,-42(ix)
   0F0F DD 66 D7           3737 	ld	h,-41(ix)
   0F12 56                 3738 	ld	d,(hl)
                           3739 ;	genIpush
                           3740 ; _saveRegsForCall: sendSetSize: 0 deInUse: 1 bcInUse: 1 deSending: 0
   0F13 C5                 3741 	push	bc
   0F14 D5                 3742 	push	de
   0F15 3E 02              3743 	ld	a,#0x02
   0F17 F5                 3744 	push	af
   0F18 33                 3745 	inc	sp
                           3746 ;	genIpush
   0F19 D5                 3747 	push    de
   0F1A 33                 3748 	inc     sp
                           3749 ;	genCall
   0F1B CDr00s00           3750 	call	_gfexp
   0F1E F1                 3751 	pop	af
   0F1F D1                 3752 	pop	de
   0F20 C1                 3753 	pop	bc
                           3754 ;	genIpush
                           3755 ; _saveRegsForCall: sendSetSize: 0 deInUse: 1 bcInUse: 1 deSending: 0
   0F21 C5                 3756 	push	bc
   0F22 D5                 3757 	push	de
   0F23 7D                 3758 	ld	a,l
   0F24 F5                 3759 	push	af
   0F25 33                 3760 	inc	sp
                           3761 ;	genIpush
                           3762 ;	AOP_STK for _rsdecode_w2_1_1
   0F26 DD 7E EC           3763 	ld	a,-20(ix)
   0F29 F5                 3764 	push	af
   0F2A 33                 3765 	inc	sp
                           3766 ;	genCall
   0F2B CDr00s00           3767 	call	_gfmul
   0F2E 55                 3768 	ld	d,l
   0F2F F1                 3769 	pop	af
   0F30 7A                 3770 	ld	a,d
   0F31 D1                 3771 	pop	de
   0F32 57                 3772 	ld	d,a
   0F33 C1                 3773 	pop	bc
                           3774 ;	genXor
   0F34 7A                 3775 	ld	a,d
   0F35 AB                 3776 	xor	a,e
   0F36 5F                 3777 	ld	e,a
                           3778 ;	genXor
                           3779 ;	AOP_STK for _rsdecode_w0_1_1
   0F37 DD 7E EE           3780 	ld	a,-18(ix)
   0F3A AB                 3781 	xor	a,e
   0F3B 5F                 3782 	ld	e,a
                           3783 ;	genAssign
                           3784 ;	AOP_STK for _rsdecode_e1_1_1
   0F3C DD 73 F2           3785 	ld	-14(ix),e
                           3786 ;ecc/rslib.c:257: e1 = gfmul (e1, gfinv (gfadd (z[1], gfexp (x[1], 2))));
                           3787 ;	genPointerGet
   0F3F 0A                 3788 	ld	a,(bc)
   0F40 5F                 3789 	ld	e,a
                           3790 ;	genPointerGet
                           3791 ;	AOP_STK for _rsdecode__1_0
   0F41 DD 6E D6           3792 	ld	l,-42(ix)
   0F44 DD 66 D7           3793 	ld	h,-41(ix)
   0F47 56                 3794 	ld	d,(hl)
                           3795 ;	genIpush
                           3796 ; _saveRegsForCall: sendSetSize: 0 deInUse: 1 bcInUse: 1 deSending: 0
   0F48 C5                 3797 	push	bc
   0F49 D5                 3798 	push	de
   0F4A 3E 02              3799 	ld	a,#0x02
   0F4C F5                 3800 	push	af
   0F4D 33                 3801 	inc	sp
                           3802 ;	genIpush
   0F4E D5                 3803 	push    de
   0F4F 33                 3804 	inc     sp
                           3805 ;	genCall
   0F50 CDr00s00           3806 	call	_gfexp
   0F53 55                 3807 	ld	d,l
   0F54 F1                 3808 	pop	af
   0F55 7A                 3809 	ld	a,d
   0F56 D1                 3810 	pop	de
   0F57 57                 3811 	ld	d,a
   0F58 C1                 3812 	pop	bc
                           3813 ;	genXor
   0F59 7A                 3814 	ld	a,d
   0F5A AB                 3815 	xor	a,e
   0F5B 5F                 3816 	ld	e,a
                           3817 ;	genIpush
                           3818 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0F5C C5                 3819 	push	bc
   0F5D 7B                 3820 	ld	a,e
   0F5E F5                 3821 	push	af
   0F5F 33                 3822 	inc	sp
                           3823 ;	genCall
   0F60 CDr00s00           3824 	call	_gfinv
   0F63 33                 3825 	inc	sp
   0F64 C1                 3826 	pop	bc
                           3827 ;	genIpush
                           3828 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0F65 C5                 3829 	push	bc
   0F66 7D                 3830 	ld	a,l
   0F67 F5                 3831 	push	af
   0F68 33                 3832 	inc	sp
                           3833 ;	genIpush
                           3834 ;	AOP_STK for _rsdecode_e1_1_1
   0F69 DD 7E F2           3835 	ld	a,-14(ix)
   0F6C F5                 3836 	push	af
   0F6D 33                 3837 	inc	sp
                           3838 ;	genCall
   0F6E CDr00s00           3839 	call	_gfmul
   0F71 F1                 3840 	pop	af
   0F72 C1                 3841 	pop	bc
                           3842 ;	genAssign
                           3843 ;	AOP_STK for _rsdecode_e1_1_1
   0F73 DD 75 F2           3844 	ld	-14(ix),l
                           3845 ;ecc/rslib.c:258: e2 = gfadd (w0, gfadd (gfmul (w1, x[2]), gfmul (w2, gfexp (x[2], 2))));
                           3846 ;	genPointerGet
                           3847 ;	AOP_STK for _rsdecode__1_0
   0F76 DD 6E D8           3848 	ld	l,-40(ix)
   0F79 DD 66 D9           3849 	ld	h,-39(ix)
   0F7C 6E                 3850 	ld	l,(hl)
                           3851 ;	genIpush
                           3852 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0F7D C5                 3853 	push	bc
   0F7E 7D                 3854 	ld	a,l
   0F7F F5                 3855 	push	af
   0F80 33                 3856 	inc	sp
                           3857 ;	genIpush
                           3858 ;	AOP_STK for _rsdecode_w1_1_1
   0F81 DD 7E ED           3859 	ld	a,-19(ix)
   0F84 F5                 3860 	push	af
   0F85 33                 3861 	inc	sp
                           3862 ;	genCall
   0F86 CDr00s00           3863 	call	_gfmul
   0F89 5D                 3864 	ld	e,l
   0F8A F1                 3865 	pop	af
   0F8B C1                 3866 	pop	bc
                           3867 ;	genPointerGet
                           3868 ;	AOP_STK for _rsdecode__1_0
   0F8C DD 6E D8           3869 	ld	l,-40(ix)
   0F8F DD 66 D9           3870 	ld	h,-39(ix)
   0F92 56                 3871 	ld	d,(hl)
                           3872 ;	genIpush
                           3873 ; _saveRegsForCall: sendSetSize: 0 deInUse: 1 bcInUse: 1 deSending: 0
   0F93 C5                 3874 	push	bc
   0F94 D5                 3875 	push	de
   0F95 3E 02              3876 	ld	a,#0x02
   0F97 F5                 3877 	push	af
   0F98 33                 3878 	inc	sp
                           3879 ;	genIpush
   0F99 D5                 3880 	push    de
   0F9A 33                 3881 	inc     sp
                           3882 ;	genCall
   0F9B CDr00s00           3883 	call	_gfexp
   0F9E F1                 3884 	pop	af
   0F9F D1                 3885 	pop	de
   0FA0 C1                 3886 	pop	bc
                           3887 ;	genIpush
                           3888 ; _saveRegsForCall: sendSetSize: 0 deInUse: 1 bcInUse: 1 deSending: 0
   0FA1 C5                 3889 	push	bc
   0FA2 D5                 3890 	push	de
   0FA3 7D                 3891 	ld	a,l
   0FA4 F5                 3892 	push	af
   0FA5 33                 3893 	inc	sp
                           3894 ;	genIpush
                           3895 ;	AOP_STK for _rsdecode_w2_1_1
   0FA6 DD 7E EC           3896 	ld	a,-20(ix)
   0FA9 F5                 3897 	push	af
   0FAA 33                 3898 	inc	sp
                           3899 ;	genCall
   0FAB CDr00s00           3900 	call	_gfmul
   0FAE 55                 3901 	ld	d,l
   0FAF F1                 3902 	pop	af
   0FB0 7A                 3903 	ld	a,d
   0FB1 D1                 3904 	pop	de
   0FB2 57                 3905 	ld	d,a
   0FB3 C1                 3906 	pop	bc
                           3907 ;	genXor
   0FB4 7A                 3908 	ld	a,d
   0FB5 AB                 3909 	xor	a,e
   0FB6 5F                 3910 	ld	e,a
                           3911 ;	genXor
                           3912 ;	AOP_STK for _rsdecode_w0_1_1
   0FB7 DD 7E EE           3913 	ld	a,-18(ix)
   0FBA AB                 3914 	xor	a,e
   0FBB 5F                 3915 	ld	e,a
                           3916 ;	genAssign
                           3917 ;	(registers are the same)
                           3918 ;ecc/rslib.c:259: e2 = gfmul (e2, gfinv (gfadd (z[1], gfexp (x[2], 2))));
                           3919 ;	genPointerGet
   0FBC 0A                 3920 	ld	a,(bc)
   0FBD 4F                 3921 	ld	c,a
                           3922 ;	genPointerGet
                           3923 ;	AOP_STK for _rsdecode__1_0
   0FBE DD 6E D8           3924 	ld	l,-40(ix)
   0FC1 DD 66 D9           3925 	ld	h,-39(ix)
   0FC4 46                 3926 	ld	b,(hl)
                           3927 ;	genIpush
                           3928 ; _saveRegsForCall: sendSetSize: 0 deInUse: 1 bcInUse: 1 deSending: 0
   0FC5 C5                 3929 	push	bc
   0FC6 D5                 3930 	push	de
   0FC7 3E 02              3931 	ld	a,#0x02
   0FC9 F5                 3932 	push	af
   0FCA 33                 3933 	inc	sp
                           3934 ;	genIpush
   0FCB C5                 3935 	push    bc
   0FCC 33                 3936 	inc     sp
                           3937 ;	genCall
   0FCD CDr00s00           3938 	call	_gfexp
   0FD0 45                 3939 	ld	b,l
   0FD1 F1                 3940 	pop	af
   0FD2 D1                 3941 	pop	de
   0FD3 78                 3942 	ld	a,b
   0FD4 C1                 3943 	pop	bc
                           3944 ;	genXor
   0FD5 47                 3945 	ld	b,a
   0FD6 A9                 3946 	xor	a,c
   0FD7 4F                 3947 	ld	c,a
                           3948 ;	genIpush
                           3949 ; _saveRegsForCall: sendSetSize: 0 deInUse: 1 bcInUse: 0 deSending: 0
   0FD8 D5                 3950 	push	de
   0FD9 79                 3951 	ld	a,c
   0FDA F5                 3952 	push	af
   0FDB 33                 3953 	inc	sp
                           3954 ;	genCall
   0FDC CDr00s00           3955 	call	_gfinv
   0FDF 33                 3956 	inc	sp
   0FE0 D1                 3957 	pop	de
                           3958 ;	genIpush
                           3959 ; _saveRegsForCall: sendSetSize: 0 deInUse: 1 bcInUse: 0 deSending: 0
   0FE1 D5                 3960 	push	de
   0FE2 7D                 3961 	ld	a,l
   0FE3 F5                 3962 	push	af
   0FE4 33                 3963 	inc	sp
                           3964 ;	genIpush
   0FE5 7B                 3965 	ld	a,e
   0FE6 F5                 3966 	push	af
   0FE7 33                 3967 	inc	sp
                           3968 ;	genCall
   0FE8 CDr00s00           3969 	call	_gfmul
   0FEB F1                 3970 	pop	af
   0FEC D1                 3971 	pop	de
                           3972 ;	genAssign
   0FED 5D                 3973 	ld	e,l
                           3974 ;ecc/rslib.c:261: if (n0 < 249)
                           3975 ;	genCmpLt
                           3976 ;	AOP_STK for _rsdecode_n0_1_1
   0FEE DD 7E F1           3977 	ld	a,-15(ix)
   0FF1 D6 F9              3978 	sub	a,#0xF9
   0FF3 D2r0As10           3979 	jp	nc,00119$
                           3980 ;ecc/rslib.c:262: mesg[n0] = gfadd (mesg[n0], e0);
                           3981 ;	genPlus
                           3982 ;	AOP_STK for 
                           3983 ;	AOP_STK for _rsdecode_n0_1_1
                           3984 ;	Can't optimise plus by inc, falling back to the normal way
   0FF6 DD 7E 06           3985 	ld	a,6(ix)
   0FF9 DD 86 F1           3986 	add	a,-15(ix)
   0FFC 4F                 3987 	ld	c,a
   0FFD DD 7E 07           3988 	ld	a,7(ix)
   1000 CE 00              3989 	adc	a,#0x00
   1002 47                 3990 	ld	b,a
                           3991 ;	genPointerGet
   1003 0A                 3992 	ld	a,(bc)
   1004 57                 3993 	ld	d,a
                           3994 ;	genXor
                           3995 ;	AOP_STK for _rsdecode_e0_1_1
   1005 DD 7E F3           3996 	ld	a,-13(ix)
   1008 AA                 3997 	xor	a,d
                           3998 ;	genAssign (pointer)
                           3999 ;	isBitvar = 0
   1009 02                 4000 	ld	(bc),a
                           4001 ;	genLabel
   100A                    4002 00119$:
                           4003 ;ecc/rslib.c:263: if (n1 < 249)
                           4004 ;	genCmpLt
                           4005 ;	AOP_STK for _rsdecode_n1_1_1
   100A DD 7E F0           4006 	ld	a,-16(ix)
   100D D6 F9              4007 	sub	a,#0xF9
   100F D2r26s10           4008 	jp	nc,00121$
                           4009 ;ecc/rslib.c:264: mesg[n1] = gfadd (mesg[n1], e1);
                           4010 ;	genPlus
                           4011 ;	AOP_STK for 
                           4012 ;	AOP_STK for _rsdecode_n1_1_1
                           4013 ;	Can't optimise plus by inc, falling back to the normal way
   1012 DD 7E 06           4014 	ld	a,6(ix)
   1015 DD 86 F0           4015 	add	a,-16(ix)
   1018 4F                 4016 	ld	c,a
   1019 DD 7E 07           4017 	ld	a,7(ix)
   101C CE 00              4018 	adc	a,#0x00
   101E 47                 4019 	ld	b,a
                           4020 ;	genPointerGet
   101F 0A                 4021 	ld	a,(bc)
   1020 57                 4022 	ld	d,a
                           4023 ;	genXor
                           4024 ;	AOP_STK for _rsdecode_e1_1_1
   1021 DD 7E F2           4025 	ld	a,-14(ix)
   1024 AA                 4026 	xor	a,d
                           4027 ;	genAssign (pointer)
                           4028 ;	isBitvar = 0
   1025 02                 4029 	ld	(bc),a
                           4030 ;	genLabel
   1026                    4031 00121$:
                           4032 ;ecc/rslib.c:265: if (n2 < 249)
                           4033 ;	genCmpLt
                           4034 ;	AOP_STK for _rsdecode_n2_1_1
   1026 DD 7E EF           4035 	ld	a,-17(ix)
   1029 D6 F9              4036 	sub	a,#0xF9
   102B D2r40s10           4037 	jp	nc,00123$
                           4038 ;ecc/rslib.c:266: mesg[n2] = gfadd (mesg[n2], e2);
                           4039 ;	genPlus
                           4040 ;	AOP_STK for 
                           4041 ;	AOP_STK for _rsdecode_n2_1_1
                           4042 ;	Can't optimise plus by inc, falling back to the normal way
   102E DD 7E 06           4043 	ld	a,6(ix)
   1031 DD 86 EF           4044 	add	a,-17(ix)
   1034 4F                 4045 	ld	c,a
   1035 DD 7E 07           4046 	ld	a,7(ix)
   1038 CE 00              4047 	adc	a,#0x00
   103A 47                 4048 	ld	b,a
                           4049 ;	genPointerGet
   103B 0A                 4050 	ld	a,(bc)
   103C 57                 4051 	ld	d,a
                           4052 ;	genXor
   103D 7B                 4053 	ld	a,e
   103E AA                 4054 	xor	a,d
                           4055 ;	genAssign (pointer)
                           4056 ;	isBitvar = 0
   103F 02                 4057 	ld	(bc),a
                           4058 ;	genLabel
   1040                    4059 00123$:
                           4060 ;ecc/rslib.c:268: return;
                           4061 ;	genRet
   1040 C3r4Es10           4062 	jp	00130$
                           4063 ;ecc/rslib.c:272: *errcode = 4;
                           4064 ;	genLabel
   1043                    4065 00124$:
                           4066 ;	genAssign (pointer)
                           4067 ;	AOP_STK for _rsdecode__1_0
                           4068 ;	isBitvar = 0
   1043 DD 6E E5           4069 	ld	l,-27(ix)
   1046 DD 66 E6           4070 	ld	h,-26(ix)
   1049 36 04              4071 	ld	(hl),#0x04
   104B 23                 4072 	inc	hl
   104C 36 00              4073 	ld	(hl),#0x00
                           4074 ;ecc/rslib.c:273: return;
                           4075 ;	genRet
                           4076 ;ecc/rslib.c:275: }
                           4077 ;	genLabel
   104E                    4078 00130$:
                           4079 ;	genEndFunction
   104E DD F9              4080 	ld	sp,ix
   1050 DD E1              4081 	pop	ix
   1052 C9                 4082 	ret
   1053                    4083 _rsdecode_end::
                           4084 ;ecc/rslib.c:284: void polysolve (unsigned char polynom[4], unsigned char roots[3], int* numsol)
                           4085 ;	genLabel
                           4086 ;	genFunction
                           4087 ;	---------------------------------
                           4088 ; Function polysolve
                           4089 ; ---------------------------------
   1053                    4090 _polysolve_start::
   1053                    4091 _polysolve:
   1053 DD E5              4092 	push	ix
   1055 DD 21 00 00        4093 	ld	ix,#0
   1059 DD 39              4094 	add	ix,sp
   105B 21 F3 FF           4095 	ld	hl,#-13
   105E 39                 4096 	add	hl,sp
   105F F9                 4097 	ld	sp,hl
                           4098 ;ecc/rslib.c:290: *numsol = 0;
                           4099 ;	genAssign
                           4100 ;	AOP_STK for 
                           4101 ;	AOP_STK for _polysolve__1_0
   1060 DD 7E 08           4102 	ld	a,8(ix)
   1063 DD 77 F7           4103 	ld	-9(ix),a
   1066 DD 7E 09           4104 	ld	a,9(ix)
   1069 DD 77 F8           4105 	ld	-8(ix),a
                           4106 ;	genAssign (pointer)
                           4107 ;	AOP_STK for _polysolve__1_0
                           4108 ;	isBitvar = 0
   106C DD 6E F7           4109 	ld	l,-9(ix)
   106F DD 66 F8           4110 	ld	h,-8(ix)
   1072 36 00              4111 	ld	(hl),#0x00
   1074 23                 4112 	inc	hl
   1075 36 00              4113 	ld	(hl),#0x00
                           4114 ;ecc/rslib.c:292: for (i = 0; i < 255; i++)
                           4115 ;	genAssign
                           4116 ;	AOP_STK for _polysolve_i_1_1
   1077 DD 36 FE 00        4117 	ld	-2(ix),#0x00
   107B DD 36 FF 00        4118 	ld	-1(ix),#0x00
                           4119 ;	genLabel
   107F                    4120 00107$:
                           4121 ;	genAssign
                           4122 ;	AOP_STK for _polysolve_i_1_1
   107F DD 6E FE           4123 	ld	l,-2(ix)
   1082 DD 66 FF           4124 	ld	h,-1(ix)
                           4125 ;	genCmpLt
   1085 7D                 4126 	ld	a,l
   1086 D6 FF              4127 	sub	a,#0xFF
   1088 7C                 4128 	ld	a,h
   1089 DE 00              4129 	sbc	a,#0x00
   108B D2r4Fs11           4130 	jp	nc,00111$
                           4131 ;ecc/rslib.c:294: y = 0;
                           4132 ;	genAssign
                           4133 ;	AOP_STK for _polysolve_y_1_1
   108E DD 36 FB 00        4134 	ld	-5(ix),#0x00
                           4135 ;ecc/rslib.c:295: for (j = 0; j < 4; j++)
                           4136 ;	genPlus
                           4137 ;	AOP_STK for _polysolve_i_1_1
                           4138 ;	AOP_STK for _polysolve__1_0
                           4139 ;	Can't optimise plus by inc, falling back to the normal way
   1092 3Er00              4140 	ld	a,#<_e2v
   1094 DD 86 FE           4141 	add	a,-2(ix)
   1097 DD 77 F9           4142 	ld	-7(ix),a
   109A 3Es00              4143 	ld	a,#>_e2v
   109C DD 8E FF           4144 	adc	a,-1(ix)
   109F DD 77 FA           4145 	ld	-6(ix),a
                           4146 ;	genAssign
                           4147 ;	AOP_STK for _polysolve_j_1_1
   10A2 DD 36 FC 00        4148 	ld	-4(ix),#0x00
   10A6 DD 36 FD 00        4149 	ld	-3(ix),#0x00
                           4150 ;	genLabel
   10AA                    4151 00103$:
                           4152 ;	genCmpLt
                           4153 ;	AOP_STK for _polysolve_j_1_1
   10AA DD 7E FC           4154 	ld	a,-4(ix)
   10AD D6 04              4155 	sub	a,#0x04
   10AF DD 7E FD           4156 	ld	a,-3(ix)
   10B2 DE 00              4157 	sbc	a,#0x00
   10B4 07                 4158 	rlca
                           4159 ;	genIfx
   10B5 E6 01              4160 	and     a,#0x01
   10B7 CAr14s11           4161 	jp	z,00106$
                           4162 ;ecc/rslib.c:296: y = gfadd (y, gfmul (polynom[j], gfexp (e2v[i], j)));
                           4163 ;	genCast
                           4164 ;	AOP_STK for _polysolve_j_1_1
                           4165 ;	AOP_STK for _polysolve__1_0
   10BA DD 7E FC           4166 	ld	a,-4(ix)
   10BD DD 77 F3           4167 	ld	-13(ix),a
                           4168 ;	genPointerGet
                           4169 ;	AOP_STK for _polysolve__1_0
                           4170 ;	AOP_STK for _polysolve__1_0
   10C0 DD 6E F9           4171 	ld	l,-7(ix)
   10C3 DD 66 FA           4172 	ld	h,-6(ix)
   10C6 7E                 4173 	ld	a,(hl)
   10C7 DD 77 F5           4174 	ld	-11(ix),a
                           4175 ;	genIpush
                           4176 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
                           4177 ;	AOP_STK for _polysolve__1_0
   10CA DD 7E F3           4178 	ld	a,-13(ix)
   10CD F5                 4179 	push	af
   10CE 33                 4180 	inc	sp
                           4181 ;	genIpush
                           4182 ;	AOP_STK for _polysolve__1_0
   10CF DD 7E F5           4183 	ld	a,-11(ix)
   10D2 F5                 4184 	push	af
   10D3 33                 4185 	inc	sp
                           4186 ;	genCall
   10D4 CDr00s00           4187 	call	_gfexp
                           4188 ;	AOP_STK for _polysolve__1_0
   10D7 DD 75 F6           4189 	ld	-10(ix),l
   10DA F1                 4190 	pop	af
                           4191 ;	genPlus
                           4192 ;	AOP_STK for 
                           4193 ;	AOP_STK for _polysolve_j_1_1
                           4194 ;	Can't optimise plus by inc, falling back to the normal way
   10DB DD 7E 04           4195 	ld	a,4(ix)
   10DE DD 86 FC           4196 	add	a,-4(ix)
   10E1 57                 4197 	ld	d,a
   10E2 DD 7E 05           4198 	ld	a,5(ix)
   10E5 DD 8E FD           4199 	adc	a,-3(ix)
   10E8 5F                 4200 	ld	e,a
                           4201 ;	genPointerGet
                           4202 ;	AOP_STK for _polysolve__1_0
   10E9 6A                 4203 	ld	l,d
   10EA 63                 4204 	ld	h,e
   10EB 7E                 4205 	ld	a,(hl)
   10EC DD 77 F4           4206 	ld	-12(ix),a
                           4207 ;	genIpush
                           4208 ; _saveRegsForCall: sendSetSize: 0 deInUse: 1 bcInUse: 0 deSending: 0
   10EF D5                 4209 	push	de
                           4210 ;	AOP_STK for _polysolve__1_0
   10F0 DD 7E F6           4211 	ld	a,-10(ix)
   10F3 F5                 4212 	push	af
   10F4 33                 4213 	inc	sp
                           4214 ;	genIpush
                           4215 ;	AOP_STK for _polysolve__1_0
   10F5 DD 7E F4           4216 	ld	a,-12(ix)
   10F8 F5                 4217 	push	af
   10F9 33                 4218 	inc	sp
                           4219 ;	genCall
   10FA CDr00s00           4220 	call	_gfmul
   10FD 45                 4221 	ld	b,l
   10FE F1                 4222 	pop	af
   10FF D1                 4223 	pop	de
                           4224 ;	genXor
                           4225 ;	AOP_STK for _polysolve_y_1_1
   1100 78                 4226 	ld	a,b
   1101 DD AE FB           4227 	xor	a,-5(ix)
   1104 4F                 4228 	ld	c,a
                           4229 ;	genAssign
                           4230 ;	AOP_STK for _polysolve_y_1_1
   1105 DD 71 FB           4231 	ld	-5(ix),c
                           4232 ;ecc/rslib.c:295: for (j = 0; j < 4; j++)
                           4233 ;	genPlus
                           4234 ;	AOP_STK for _polysolve_j_1_1
                           4235 ;	genPlusIncr
   1108 DD 34 FC           4236 	inc	-4(ix)
   110B C2r11s11           4237 	jp	nz,00118$
   110E DD 34 FD           4238 	inc	-3(ix)
   1111                    4239 00118$:
                           4240 ;	genGoto
   1111 C3rAAs10           4241 	jp	00103$
                           4242 ;	genLabel
   1114                    4243 00106$:
                           4244 ;ecc/rslib.c:297: if (y == 0)
                           4245 ;	genCmpEq
                           4246 ;	AOP_STK for _polysolve_y_1_1
                           4247 ; genCmpEq: left 1, right 1, result 0
   1114 DD 7E FB           4248 	ld	a,-5(ix)
   1117 B7                 4249 	or	a,a
   1118 CAr1Es11           4250 	jp	z,00120$
   111B                    4251 00119$:
   111B C3r43s11           4252 	jp	00109$
   111E                    4253 00120$:
                           4254 ;ecc/rslib.c:299: roots[*numsol] = e2v[i];
                           4255 ;	genPointerGet
                           4256 ;	AOP_STK for _polysolve__1_0
   111E DD 6E F7           4257 	ld	l,-9(ix)
   1121 DD 66 F8           4258 	ld	h,-8(ix)
   1124 4E                 4259 	ld	c,(hl)
   1125 23                 4260 	inc	hl
   1126 46                 4261 	ld	b,(hl)
                           4262 ;	genPlus
                           4263 ;	AOP_STK for 
                           4264 ;	Can't optimise plus by inc, falling back to the normal way
   1127 DD 7E 06           4265 	ld	a,6(ix)
   112A 81                 4266 	add	a,c
   112B 5F                 4267 	ld	e,a
   112C DD 7E 07           4268 	ld	a,7(ix)
   112F 88                 4269 	adc	a,b
   1130 57                 4270 	ld	d,a
                           4271 ;	genPointerGet
                           4272 ;	AOP_STK for _polysolve__1_0
   1131 DD 6E F9           4273 	ld	l,-7(ix)
   1134 DD 66 FA           4274 	ld	h,-6(ix)
   1137 7E                 4275 	ld	a,(hl)
                           4276 ;	genAssign (pointer)
                           4277 ;	isBitvar = 0
   1138 12                 4278 	ld	(de),a
                           4279 ;ecc/rslib.c:300: *numsol = *numsol + 1;
                           4280 ;	genPlus
                           4281 ;	genPlusIncr
   1139 03                 4282 	inc	bc
                           4283 ;	genAssign (pointer)
                           4284 ;	AOP_STK for _polysolve__1_0
                           4285 ;	isBitvar = 0
   113A DD 6E F7           4286 	ld	l,-9(ix)
   113D DD 66 F8           4287 	ld	h,-8(ix)
   1140 71                 4288 	ld	(hl),c
   1141 23                 4289 	inc	hl
   1142 70                 4290 	ld	(hl),b
                           4291 ;	genLabel
   1143                    4292 00109$:
                           4293 ;ecc/rslib.c:292: for (i = 0; i < 255; i++)
                           4294 ;	genPlus
                           4295 ;	AOP_STK for _polysolve_i_1_1
                           4296 ;	genPlusIncr
   1143 DD 34 FE           4297 	inc	-2(ix)
   1146 C2r4Cs11           4298 	jp	nz,00121$
   1149 DD 34 FF           4299 	inc	-1(ix)
   114C                    4300 00121$:
                           4301 ;	genGoto
   114C C3r7Fs10           4302 	jp	00107$
                           4303 ;	genLabel
   114F                    4304 00111$:
                           4305 ;	genEndFunction
   114F DD F9              4306 	ld	sp,ix
   1151 DD E1              4307 	pop	ix
   1153 C9                 4308 	ret
   1154                    4309 _polysolve_end::
                           4310 	.area _CODE
